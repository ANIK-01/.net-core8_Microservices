2025-01-22 13:26:40.986 +06:00 [INF] Now listening on: https://localhost:5050
2025-01-22 13:26:41.022 +06:00 [INF] Now listening on: http://localhost:5000
2025-01-22 13:26:41.036 +06:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-01-22 13:26:41.219 +06:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 13:26:41.219 +06:00 [INF] Hosting environment: Development
2025-01-22 13:26:41.219 +06:00 [INF] Content root path: D:\projects_all\TestProjects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi
2025-01-22 13:26:41.736 +06:00 [INF] Request starting HTTP/2 GET https://localhost:5050/ - null null
2025-01-22 13:26:41.860 +06:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 13:26:41.864 +06:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 13:26:41.867 +06:00 [INF] Request finished HTTP/2 GET https://localhost:5050/ - 200 null text/plain; charset=utf-8 141.2925ms
2025-01-22 13:26:47.332 +06:00 [INF] Request starting HTTP/1.1 GET https://localhost:5050/products - null null
2025-01-22 13:26:47.333 +06:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 13:26:50.670 +06:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 13:26:54.129 +06:00 [INF] Batch execution completed (duration=49ms): ["\nSELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"]
2025-01-22 13:26:54.204 +06:00 [INF] Batch execution completed (duration=44ms): ["\nselect column_name, data_type, character_maximum_length, udt_name\nfrom information_schema.columns where table_schema = $1 and table_name = $2\norder by ordinal_position","select kcu.column_name as key_column\nfrom information_schema.table_constraints tco\n         join information_schema.key_column_usage kcu\n              on kcu.constraint_name = tco.constraint_name\n                  and kcu.constraint_schema = tco.constraint_schema\n                  and kcu.constraint_name = tco.constraint_name\nwhere tco.constraint_type = 'PRIMARY KEY' and kcu.table_schema = $1 and kcu.table_name = $2\norder by kcu.ordinal_position","SELECT *\nFROM (\n    SELECT\n      R.rolname                AS user_name,\n      ns.nspname               AS schema_name,\n      pg_catalog.textin(pg_catalog.regclassout(idx.indrelid :: REGCLASS)) AS table_name,\n      i.relname                AS index_name,\n      pg_get_indexdef(i.oid) as ddl,\n      idx.indisunique          AS is_unique,\n      idx.indisprimary         AS is_primary,\n      am.amname                AS index_type,\n      idx.indkey,\n           ARRAY(\n               SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)\n               FROM\n                 generate_subscripts(idx.indkey, 1) AS k\n               ORDER BY k\n           ) AS index_keys,\n      (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,\n      idx.indpred IS NOT NULL AS is_partial\n    FROM pg_index AS idx\n      JOIN pg_class AS i\n        ON i.oid = idx.indexrelid\n      JOIN pg_am AS am\n        ON i.relam = am.oid\n      JOIN pg_namespace AS NS ON i.relnamespace = NS.OID\n      JOIN pg_roles AS R ON i.relowner = r.oid\n    WHERE\n      nspname = $1 AND\n      NOT nspname LIKE 'pg%'\n) ind\nWHERE\n      ind.table_name = $2 OR\n      ind.table_name = $3","SELECT c.conname                                     AS constraint_name,\n       c.contype                                     AS constraint_type,\n       sch.nspname                                   AS schema_name,\n       tbl.relname                                   AS table_name,\n       ARRAY_AGG(col.attname ORDER BY u.attposition) AS columns,\n       pg_get_constraintdef(c.oid)                   AS definition\nFROM pg_constraint c\n       JOIN LATERAL UNNEST(c.conkey) WITH ORDINALITY AS u(attnum, attposition) ON TRUE\n       JOIN pg_class tbl ON tbl.oid = c.conrelid\n       JOIN pg_namespace sch ON sch.oid = tbl.relnamespace\n       JOIN pg_attribute col ON (col.attrelid = tbl.oid AND col.attnum = u.attnum)\nWHERE\n\tc.contype = 'f' and\n\tsch.nspname = $1 and\n\ttbl.relname = $2\nGROUP BY constraint_name, constraint_type, schema_name, table_name, definition","SHOW max_identifier_length","select\n    col.column_name,\n    partition_strategy\nfrom\n    (select\n         partrelid,\n         partnatts,\n         case partstrat\n             when 'l' then 'list'\n             when 'h' then 'hash'\n             when 'r' then 'range' end as partition_strategy,\n         unnest(partattrs) column_index\n     from\n         pg_partitioned_table) pt\n        join\n    pg_class par\n    on\n            par.oid = pt.partrelid\n        join\n    information_schema.columns col\n    on\n                col.table_schema = par.relnamespace::regnamespace::text\n            and col.table_name = par.relname\n            and ordinal_position = pt.column_index\nwhere\n    col.table_schema = $1 and table_name = $2\norder by column_index","select pt.relname as partition_name,\n          pg_get_expr(pt.relpartbound, pt.oid, true) as partition_expression\n   from pg_class base_tb\n            join pg_inherits i on i.inhparent = base_tb.oid\n            join pg_class pt on pt.oid = i.inhrelid\n   where base_tb.relname = $1 and base_tb.relnamespace = $2::regnamespace::oid","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"]
2025-01-22 13:26:54.377 +06:00 [INF] Command execution completed (duration=147ms): select d.id, d.data from public.mt_doc_product as d
2025-01-22 13:26:54.500 +06:00 [INF] Setting HTTP status code 200.
2025-01-22 13:26:54.509 +06:00 [INF] Writing value of type 'GetProductsResponse' as Json.
2025-01-22 13:26:54.531 +06:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 13:26:54.535 +06:00 [INF] Request finished HTTP/1.1 GET https://localhost:5050/products - 200 null application/json; charset=utf-8 7203.062ms
2025-01-22 13:33:13.543 +06:00 [INF] Now listening on: https://localhost:5050
2025-01-22 13:33:13.584 +06:00 [INF] Now listening on: http://localhost:5000
2025-01-22 13:33:13.598 +06:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-01-22 13:33:13.785 +06:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 13:33:13.786 +06:00 [INF] Hosting environment: Development
2025-01-22 13:33:13.786 +06:00 [INF] Content root path: D:\projects_all\TestProjects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi
2025-01-22 13:33:13.960 +06:00 [INF] Request starting HTTP/2 GET https://localhost:5050/ - null null
2025-01-22 13:33:14.110 +06:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 13:33:14.114 +06:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 13:33:14.117 +06:00 [INF] Request finished HTTP/2 GET https://localhost:5050/ - 200 null text/plain; charset=utf-8 164.9368ms
2025-01-22 13:33:17.391 +06:00 [INF] Request starting HTTP/1.1 GET https://localhost:5050/products - null null
2025-01-22 13:33:17.392 +06:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 13:33:19.777 +06:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 13:33:24.121 +06:00 [INF] Batch execution completed (duration=68ms): ["\nSELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"]
2025-01-22 13:33:24.229 +06:00 [INF] Batch execution completed (duration=68ms): ["\nselect column_name, data_type, character_maximum_length, udt_name\nfrom information_schema.columns where table_schema = $1 and table_name = $2\norder by ordinal_position","select kcu.column_name as key_column\nfrom information_schema.table_constraints tco\n         join information_schema.key_column_usage kcu\n              on kcu.constraint_name = tco.constraint_name\n                  and kcu.constraint_schema = tco.constraint_schema\n                  and kcu.constraint_name = tco.constraint_name\nwhere tco.constraint_type = 'PRIMARY KEY' and kcu.table_schema = $1 and kcu.table_name = $2\norder by kcu.ordinal_position","SELECT *\nFROM (\n    SELECT\n      R.rolname                AS user_name,\n      ns.nspname               AS schema_name,\n      pg_catalog.textin(pg_catalog.regclassout(idx.indrelid :: REGCLASS)) AS table_name,\n      i.relname                AS index_name,\n      pg_get_indexdef(i.oid) as ddl,\n      idx.indisunique          AS is_unique,\n      idx.indisprimary         AS is_primary,\n      am.amname                AS index_type,\n      idx.indkey,\n           ARRAY(\n               SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)\n               FROM\n                 generate_subscripts(idx.indkey, 1) AS k\n               ORDER BY k\n           ) AS index_keys,\n      (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,\n      idx.indpred IS NOT NULL AS is_partial\n    FROM pg_index AS idx\n      JOIN pg_class AS i\n        ON i.oid = idx.indexrelid\n      JOIN pg_am AS am\n        ON i.relam = am.oid\n      JOIN pg_namespace AS NS ON i.relnamespace = NS.OID\n      JOIN pg_roles AS R ON i.relowner = r.oid\n    WHERE\n      nspname = $1 AND\n      NOT nspname LIKE 'pg%'\n) ind\nWHERE\n      ind.table_name = $2 OR\n      ind.table_name = $3","SELECT c.conname                                     AS constraint_name,\n       c.contype                                     AS constraint_type,\n       sch.nspname                                   AS schema_name,\n       tbl.relname                                   AS table_name,\n       ARRAY_AGG(col.attname ORDER BY u.attposition) AS columns,\n       pg_get_constraintdef(c.oid)                   AS definition\nFROM pg_constraint c\n       JOIN LATERAL UNNEST(c.conkey) WITH ORDINALITY AS u(attnum, attposition) ON TRUE\n       JOIN pg_class tbl ON tbl.oid = c.conrelid\n       JOIN pg_namespace sch ON sch.oid = tbl.relnamespace\n       JOIN pg_attribute col ON (col.attrelid = tbl.oid AND col.attnum = u.attnum)\nWHERE\n\tc.contype = 'f' and\n\tsch.nspname = $1 and\n\ttbl.relname = $2\nGROUP BY constraint_name, constraint_type, schema_name, table_name, definition","SHOW max_identifier_length","select\n    col.column_name,\n    partition_strategy\nfrom\n    (select\n         partrelid,\n         partnatts,\n         case partstrat\n             when 'l' then 'list'\n             when 'h' then 'hash'\n             when 'r' then 'range' end as partition_strategy,\n         unnest(partattrs) column_index\n     from\n         pg_partitioned_table) pt\n        join\n    pg_class par\n    on\n            par.oid = pt.partrelid\n        join\n    information_schema.columns col\n    on\n                col.table_schema = par.relnamespace::regnamespace::text\n            and col.table_name = par.relname\n            and ordinal_position = pt.column_index\nwhere\n    col.table_schema = $1 and table_name = $2\norder by column_index","select pt.relname as partition_name,\n          pg_get_expr(pt.relpartbound, pt.oid, true) as partition_expression\n   from pg_class base_tb\n            join pg_inherits i on i.inhparent = base_tb.oid\n            join pg_class pt on pt.oid = i.inhrelid\n   where base_tb.relname = $1 and base_tb.relnamespace = $2::regnamespace::oid","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"]
2025-01-22 13:33:24.501 +06:00 [INF] Command execution completed (duration=228ms): select d.id, d.data from public.mt_doc_product as d
2025-01-22 13:33:24.661 +06:00 [INF] Setting HTTP status code 200.
2025-01-22 13:33:24.675 +06:00 [INF] Writing value of type 'GetProductsResponse' as Json.
2025-01-22 13:33:24.711 +06:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 13:33:24.716 +06:00 [INF] Request finished HTTP/1.1 GET https://localhost:5050/products - 200 null application/json; charset=utf-8 7324.8402ms
2025-01-22 14:34:52.212 +06:00 [INF] Now listening on: https://localhost:5050
2025-01-22 14:34:52.309 +06:00 [INF] Now listening on: http://localhost:5000
2025-01-22 14:34:52.340 +06:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-01-22 14:34:52.756 +06:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 14:34:52.757 +06:00 [INF] Hosting environment: Development
2025-01-22 14:34:52.770 +06:00 [INF] Content root path: D:\projects_all\TestProjects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi
2025-01-22 14:34:53.043 +06:00 [INF] Request starting HTTP/2 GET https://localhost:5050/ - null null
2025-01-22 14:34:53.275 +06:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 14:34:53.285 +06:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 14:34:53.292 +06:00 [INF] Request finished HTTP/2 GET https://localhost:5050/ - 200 null text/plain; charset=utf-8 267.4698ms
2025-01-22 14:34:57.237 +06:00 [INF] Request starting HTTP/1.1 GET https://localhost:5050/products - null null
2025-01-22 14:34:57.239 +06:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 14:34:59.395 +06:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 14:35:07.605 +06:00 [INF] Batch execution completed (duration=117ms): ["\nSELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"]
2025-01-22 14:35:07.780 +06:00 [INF] Batch execution completed (duration=110ms): ["\nselect column_name, data_type, character_maximum_length, udt_name\nfrom information_schema.columns where table_schema = $1 and table_name = $2\norder by ordinal_position","select kcu.column_name as key_column\nfrom information_schema.table_constraints tco\n         join information_schema.key_column_usage kcu\n              on kcu.constraint_name = tco.constraint_name\n                  and kcu.constraint_schema = tco.constraint_schema\n                  and kcu.constraint_name = tco.constraint_name\nwhere tco.constraint_type = 'PRIMARY KEY' and kcu.table_schema = $1 and kcu.table_name = $2\norder by kcu.ordinal_position","SELECT *\nFROM (\n    SELECT\n      R.rolname                AS user_name,\n      ns.nspname               AS schema_name,\n      pg_catalog.textin(pg_catalog.regclassout(idx.indrelid :: REGCLASS)) AS table_name,\n      i.relname                AS index_name,\n      pg_get_indexdef(i.oid) as ddl,\n      idx.indisunique          AS is_unique,\n      idx.indisprimary         AS is_primary,\n      am.amname                AS index_type,\n      idx.indkey,\n           ARRAY(\n               SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)\n               FROM\n                 generate_subscripts(idx.indkey, 1) AS k\n               ORDER BY k\n           ) AS index_keys,\n      (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,\n      idx.indpred IS NOT NULL AS is_partial\n    FROM pg_index AS idx\n      JOIN pg_class AS i\n        ON i.oid = idx.indexrelid\n      JOIN pg_am AS am\n        ON i.relam = am.oid\n      JOIN pg_namespace AS NS ON i.relnamespace = NS.OID\n      JOIN pg_roles AS R ON i.relowner = r.oid\n    WHERE\n      nspname = $1 AND\n      NOT nspname LIKE 'pg%'\n) ind\nWHERE\n      ind.table_name = $2 OR\n      ind.table_name = $3","SELECT c.conname                                     AS constraint_name,\n       c.contype                                     AS constraint_type,\n       sch.nspname                                   AS schema_name,\n       tbl.relname                                   AS table_name,\n       ARRAY_AGG(col.attname ORDER BY u.attposition) AS columns,\n       pg_get_constraintdef(c.oid)                   AS definition\nFROM pg_constraint c\n       JOIN LATERAL UNNEST(c.conkey) WITH ORDINALITY AS u(attnum, attposition) ON TRUE\n       JOIN pg_class tbl ON tbl.oid = c.conrelid\n       JOIN pg_namespace sch ON sch.oid = tbl.relnamespace\n       JOIN pg_attribute col ON (col.attrelid = tbl.oid AND col.attnum = u.attnum)\nWHERE\n\tc.contype = 'f' and\n\tsch.nspname = $1 and\n\ttbl.relname = $2\nGROUP BY constraint_name, constraint_type, schema_name, table_name, definition","SHOW max_identifier_length","select\n    col.column_name,\n    partition_strategy\nfrom\n    (select\n         partrelid,\n         partnatts,\n         case partstrat\n             when 'l' then 'list'\n             when 'h' then 'hash'\n             when 'r' then 'range' end as partition_strategy,\n         unnest(partattrs) column_index\n     from\n         pg_partitioned_table) pt\n        join\n    pg_class par\n    on\n            par.oid = pt.partrelid\n        join\n    information_schema.columns col\n    on\n                col.table_schema = par.relnamespace::regnamespace::text\n            and col.table_name = par.relname\n            and ordinal_position = pt.column_index\nwhere\n    col.table_schema = $1 and table_name = $2\norder by column_index","select pt.relname as partition_name,\n          pg_get_expr(pt.relpartbound, pt.oid, true) as partition_expression\n   from pg_class base_tb\n            join pg_inherits i on i.inhparent = base_tb.oid\n            join pg_class pt on pt.oid = i.inhrelid\n   where base_tb.relname = $1 and base_tb.relnamespace = $2::regnamespace::oid","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"]
2025-01-22 14:35:08.157 +06:00 [INF] Command execution completed (duration=311ms): select d.id, d.data from public.mt_doc_product as d
2025-01-22 14:35:08.408 +06:00 [INF] Setting HTTP status code 200.
2025-01-22 14:35:08.431 +06:00 [INF] Writing value of type 'GetProductsResponse' as Json.
2025-01-22 14:35:08.486 +06:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 14:35:08.495 +06:00 [INF] Request finished HTTP/1.1 GET https://localhost:5050/products - 200 null application/json; charset=utf-8 11258.2237ms
2025-01-22 17:19:33.213 +06:00 [INF] Now listening on: https://localhost:5050
2025-01-22 17:19:33.244 +06:00 [INF] Now listening on: http://localhost:5000
2025-01-22 17:19:33.263 +06:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-01-22 17:19:33.514 +06:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 17:19:33.515 +06:00 [INF] Hosting environment: Development
2025-01-22 17:19:33.516 +06:00 [INF] Content root path: D:\projects_all\TestProjects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi
2025-01-22 11:21:10.142 +00:00 [INF] Now listening on: http://[::]:8080
2025-01-22 11:21:10.272 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 11:21:10.273 +00:00 [INF] Hosting environment: Production
2025-01-22 11:21:10.274 +00:00 [INF] Content root path: /app
2025-01-22 11:21:10.952 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/ - null null
2025-01-22 11:21:11.204 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 11:21:11.216 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 11:21:11.221 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/ - 200 null text/plain; charset=utf-8 269.7779ms
2025-01-22 11:21:11.354 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/favicon.ico - null null
2025-01-22 11:21:11.356 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/favicon.ico - 404 0 null 2.3313ms
2025-01-22 11:21:11.358 +00:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:8080/favicon.ico, Response status code: 404
2025-01-22 11:27:44.543 +00:00 [INF] Now listening on: http://[::]:8080
2025-01-22 11:27:44.636 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 11:27:44.637 +00:00 [INF] Hosting environment: Production
2025-01-22 11:27:44.637 +00:00 [INF] Content root path: /app
2025-01-22 11:28:41.451 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/products - application/json 269
2025-01-22 11:28:41.553 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 11:28:47.126 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 11:28:58.887 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 11:28:58.892 +00:00 [ERR] Connection id "0HN9QQVM5FEKN", Request id "0HN9QQVM5FEKN:00000001": An unhandled exception was thrown by the application.
System.Net.Sockets.SocketException (00000005, 0xFFFDFFFF): Name or service not known
   at System.Net.Dns.GetHostEntryOrAddressesCore(String hostName, Boolean justAddresses, AddressFamily addressFamily, Nullable`1 startingTimestamp)
   at System.Net.Dns.<>c.<GetHostEntryOrAddressesCoreAsync>b__33_0(Object s, Int64 startingTimestamp)
   at System.Net.Dns.<>c__DisplayClass39_0`1.<RunAsync>b__0(Task <p0>, Object <p1>)
   at System.Threading.Tasks.ContinuationResultTaskFromTask`1.InnerInvoke()
   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync[TResult](Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in D:\projects_all\TestProjects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in D:\projects_all\TestProjects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 11:28:58.912 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/products - 500 0 null 17461.8328ms
2025-01-22 11:32:42.138 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/ - null null
2025-01-22 11:32:42.142 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 11:32:42.150 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 11:32:42.152 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/ - 200 null text/plain; charset=utf-8 16.7951ms
2025-01-22 11:34:56.086 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead 'https://+:8081;http://+:8080'.
2025-01-22 11:34:56.205 +00:00 [ERR] Hosting failed to start
System.InvalidOperationException: Unable to configure HTTPS endpoint. No server certificate was specified, and the default developer certificate could not be found or is out of date.
To generate a developer certificate run 'dotnet dev-certs https'. To trust the certificate (Windows and macOS only) run 'dotnet dev-certs https --trust'.
For more information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054.
   at Microsoft.AspNetCore.Hosting.ListenOptionsHttpsExtensions.UseHttps(ListenOptions listenOptions, Action`1 configureOptions)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(ListenOptions[] listenOptions, AddressBindContext context, Func`2 useHttps, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 12:55:26.248 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead 'https://+:8081;http://+:8080'.
2025-01-22 12:55:26.402 +00:00 [ERR] Hosting failed to start
System.IO.DirectoryNotFoundException: Could not find a part of the path '/app/ "/app/certificates/aspnetapp.pfx"'.
   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, UnixFileMode openPermissions, Int64& fileLength, UnixFileMode& filePermissions, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at System.Security.Cryptography.X509Certificates.X509Certificate2Collection.ImportFromPemFile(String certPemFilePath)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Certificates.CertificateConfigLoader.LoadCertificate(CertificateConfig certInfo, String endpointName)
   at Microsoft.AspNetCore.Server.Kestrel.Core.TlsConfigurationLoader.LoadDefaultCertificate(ConfigurationReader configurationReader)
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Reload()
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.LoadInternal()
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 12:58:30.057 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead 'https://+:8081;http://+:8080'.
2025-01-22 12:58:30.191 +00:00 [ERR] Hosting failed to start
System.IO.DirectoryNotFoundException: Could not find a part of the path '/app/ "/app/certificates/aspnetapp.pfx"'.
   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, UnixFileMode openPermissions, Int64& fileLength, UnixFileMode& filePermissions, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at System.Security.Cryptography.X509Certificates.X509Certificate2Collection.ImportFromPemFile(String certPemFilePath)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Certificates.CertificateConfigLoader.LoadCertificate(CertificateConfig certInfo, String endpointName)
   at Microsoft.AspNetCore.Server.Kestrel.Core.TlsConfigurationLoader.LoadDefaultCertificate(ConfigurationReader configurationReader)
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Reload()
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.LoadInternal()
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 13:06:18.833 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead 'https://+:8081;http://+:8080'.
2025-01-22 13:06:18.918 +00:00 [ERR] Hosting failed to start
System.IO.DirectoryNotFoundException: Could not find a part of the path '/app/ "/app/certificates/aspnetapp.pfx"'.
   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, UnixFileMode openPermissions, Int64& fileLength, UnixFileMode& filePermissions, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at System.Security.Cryptography.X509Certificates.X509Certificate2Collection.ImportFromPemFile(String certPemFilePath)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Certificates.CertificateConfigLoader.LoadCertificate(CertificateConfig certInfo, String endpointName)
   at Microsoft.AspNetCore.Server.Kestrel.Core.TlsConfigurationLoader.LoadDefaultCertificate(ConfigurationReader configurationReader)
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Reload()
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.LoadInternal()
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 13:10:03.905 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead 'https://+:8081;http://+:8080'.
2025-01-22 13:10:04.027 +00:00 [ERR] Hosting failed to start
System.IO.DirectoryNotFoundException: Could not find a part of the path '/app/ /app/certificates/aspnetapp.pfx'.
   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, UnixFileMode openPermissions, Int64& fileLength, UnixFileMode& filePermissions, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at System.Security.Cryptography.X509Certificates.X509Certificate2Collection.ImportFromPemFile(String certPemFilePath)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Certificates.CertificateConfigLoader.LoadCertificate(CertificateConfig certInfo, String endpointName)
   at Microsoft.AspNetCore.Server.Kestrel.Core.TlsConfigurationLoader.LoadDefaultCertificate(ConfigurationReader configurationReader)
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Reload()
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.LoadInternal()
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 13:49:41.717 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 13:49:41.780 +00:00 [WRN] Overriding address(es) 'http://*:8080'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 13:49:41.975 +00:00 [INF] Now listening on: http://0.0.0.0:80
2025-01-22 13:49:41.976 +00:00 [INF] Now listening on: https://0.0.0.0:443
2025-01-22 13:49:41.977 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 13:49:41.978 +00:00 [INF] Hosting environment: Production
2025-01-22 13:49:41.978 +00:00 [INF] Content root path: /app
2025-01-22 13:50:33.223 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 13:50:33.281 +00:00 [WRN] Overriding address(es) 'http://*:8080'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 13:50:33.398 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 13:50:33.399 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 13:50:33.400 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 13:50:33.401 +00:00 [INF] Hosting environment: Production
2025-01-22 13:50:33.401 +00:00 [INF] Content root path: /app
2025-01-22 13:55:04.007 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 13:55:04.076 +00:00 [WRN] Overriding address(es) 'http://*:8080'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 13:55:04.205 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 13:55:04.206 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 13:55:04.207 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 13:55:04.207 +00:00 [INF] Hosting environment: Production
2025-01-22 13:55:04.207 +00:00 [INF] Content root path: /app
2025-01-22 13:55:19.843 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/ - null null
2025-01-22 13:55:19.959 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 13:55:19.972 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 13:55:19.974 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/ - 200 null text/plain; charset=utf-8 135.3666ms
2025-01-22 13:55:19.997 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/favicon.ico - null null
2025-01-22 13:55:19.999 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/favicon.ico - 404 0 null 1.7089ms
2025-01-22 13:55:20.001 +00:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:8080/favicon.ico, Response status code: 404
2025-01-22 13:55:30.743 +00:00 [INF] Request starting HTTP/1.1 GET https://localhost:8081/products - application/json 269
2025-01-22 13:55:30.744 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 13:55:32.961 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 13:55:35.821 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 13:55:35.825 +00:00 [ERR] Connection id "0HN9QTHK9BED4", Request id "0HN9QTHK9BED4:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in D:\projects_all\TestProjects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in D:\projects_all\TestProjects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 13:55:35.844 +00:00 [INF] Request finished HTTP/1.1 GET https://localhost:8081/products - 500 0 null 5101.4687ms
2025-01-22 13:57:39.106 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 13:57:39.170 +00:00 [WRN] Overriding address(es) 'http://*:8080'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 13:57:39.275 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 13:57:39.277 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 13:57:39.277 +00:00 [INF] Hosting environment: Production
2025-01-22 13:57:39.278 +00:00 [INF] Content root path: /app
2025-01-22 13:58:18.300 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 13:58:18.367 +00:00 [WRN] Overriding address(es) 'http://*:8080'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 13:58:18.491 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 13:58:18.492 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 13:58:18.493 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 13:58:18.493 +00:00 [INF] Hosting environment: Production
2025-01-22 13:58:18.494 +00:00 [INF] Content root path: /app
2025-01-22 13:58:59.780 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/ - null null
2025-01-22 13:58:59.894 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 13:58:59.906 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 13:58:59.908 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/ - 200 null text/plain; charset=utf-8 130.2316ms
2025-01-22 13:59:02.880 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/ - null null
2025-01-22 13:59:02.880 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 13:59:02.881 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 13:59:02.882 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/ - 200 null text/plain; charset=utf-8 2.5785ms
2025-01-22 14:00:55.414 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 14:00:55.523 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 14:00:55.535 +00:00 [WRN] Overriding address(es) ' "https://+:8081, http://+:8080"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 14:00:55.695 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 14:00:55.696 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 14:00:55.696 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 14:00:55.697 +00:00 [INF] Hosting environment: Production
2025-01-22 14:00:55.697 +00:00 [INF] Content root path: /app
2025-01-22 14:02:03.296 +00:00 [INF] Request starting HTTP/1.1 GET https://0.0.0.0:8081/products - application/json 269
2025-01-22 14:02:03.415 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 14:02:08.673 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 14:02:12.040 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 14:02:12.044 +00:00 [ERR] Connection id "0HN9QTLCGRTQV", Request id "0HN9QTLCGRTQV:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in D:\projects_all\TestProjects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in D:\projects_all\TestProjects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 14:02:12.069 +00:00 [INF] Request finished HTTP/1.1 GET https://0.0.0.0:8081/products - 500 0 null 8775.5865ms
2025-01-22 16:02:32.720 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 16:02:32.830 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 16:02:32.865 +00:00 [ERR] Hosting failed to start
System.IO.DirectoryNotFoundException: Could not find a part of the path '/app/ /app/certificates/aspnetapp.pfx'.
   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, UnixFileMode openPermissions, Int64& fileLength, UnixFileMode& filePermissions, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at System.Security.Cryptography.X509Certificates.X509Certificate2Collection.ImportFromPemFile(String certPemFilePath)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Certificates.CertificateConfigLoader.LoadCertificate(CertificateConfig certInfo, String endpointName)
   at Microsoft.AspNetCore.Server.Kestrel.Core.TlsConfigurationLoader.LoadDefaultCertificate(ConfigurationReader configurationReader)
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Reload()
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.LoadInternal()
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 16:10:50.365 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 16:10:50.496 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 16:10:50.522 +00:00 [ERR] Hosting failed to start
System.IO.DirectoryNotFoundException: Could not find a part of the path '/app/ /app/certificates/aspnetapp.pfx'.
   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, UnixFileMode openPermissions, Int64& fileLength, UnixFileMode& filePermissions, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at System.Security.Cryptography.X509Certificates.X509Certificate2Collection.ImportFromPemFile(String certPemFilePath)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Certificates.CertificateConfigLoader.LoadCertificate(CertificateConfig certInfo, String endpointName)
   at Microsoft.AspNetCore.Server.Kestrel.Core.TlsConfigurationLoader.LoadDefaultCertificate(ConfigurationReader configurationReader)
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Reload()
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.LoadInternal()
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 16:19:21.181 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 16:19:21.278 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 16:19:21.301 +00:00 [ERR] Hosting failed to start
System.IO.DirectoryNotFoundException: Could not find a part of the path '/app/ /app/certificates/aspnetapp.pfx'.
   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, UnixFileMode openPermissions, Int64& fileLength, UnixFileMode& filePermissions, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at System.Security.Cryptography.X509Certificates.X509Certificate2Collection.ImportFromPemFile(String certPemFilePath)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Certificates.CertificateConfigLoader.LoadCertificate(CertificateConfig certInfo, String endpointName)
   at Microsoft.AspNetCore.Server.Kestrel.Core.TlsConfigurationLoader.LoadDefaultCertificate(ConfigurationReader configurationReader)
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Reload()
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.LoadInternal()
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 16:24:14.644 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 16:24:14.755 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 16:24:14.785 +00:00 [ERR] Hosting failed to start
System.IO.DirectoryNotFoundException: Could not find a part of the path '/app/ /app/certificates/aspnetapp.pfx'.
   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, UnixFileMode openPermissions, Int64& fileLength, UnixFileMode& filePermissions, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at System.Security.Cryptography.X509Certificates.X509Certificate2Collection.ImportFromPemFile(String certPemFilePath)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Certificates.CertificateConfigLoader.LoadCertificate(CertificateConfig certInfo, String endpointName)
   at Microsoft.AspNetCore.Server.Kestrel.Core.TlsConfigurationLoader.LoadDefaultCertificate(ConfigurationReader configurationReader)
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Reload()
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.LoadInternal()
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 16:27:34.759 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 16:27:34.844 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 16:27:34.863 +00:00 [ERR] Hosting failed to start
System.IO.DirectoryNotFoundException: Could not find a part of the path '/app/ /app/certificates/aspnetapp.pfx'.
   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, UnixFileMode openPermissions, Int64& fileLength, UnixFileMode& filePermissions, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at System.Security.Cryptography.X509Certificates.X509Certificate2Collection.ImportFromPemFile(String certPemFilePath)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Certificates.CertificateConfigLoader.LoadCertificate(CertificateConfig certInfo, String endpointName)
   at Microsoft.AspNetCore.Server.Kestrel.Core.TlsConfigurationLoader.LoadDefaultCertificate(ConfigurationReader configurationReader)
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Reload()
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.LoadInternal()
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 16:29:34.114 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 16:29:34.212 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 16:29:34.234 +00:00 [ERR] Hosting failed to start
System.IO.DirectoryNotFoundException: Could not find a part of the path '/app/ /app/certificates/aspnetapp.pfx'.
   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirError)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String fullPath, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, UnixFileMode openPermissions, Int64& fileLength, UnixFileMode& filePermissions, Boolean failForSymlink, Boolean& wasSymlink, Func`4 createOpenException)
   at System.IO.Strategies.OSFileStreamStrategy..ctor(String path, FileMode mode, FileAccess access, FileShare share, FileOptions options, Int64 preallocationSize, Nullable`1 unixCreateMode)
   at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)
   at System.IO.File.ReadAllText(String path, Encoding encoding)
   at System.Security.Cryptography.X509Certificates.X509Certificate2Collection.ImportFromPemFile(String certPemFilePath)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Certificates.CertificateConfigLoader.LoadCertificate(CertificateConfig certInfo, String endpointName)
   at Microsoft.AspNetCore.Server.Kestrel.Core.TlsConfigurationLoader.LoadDefaultCertificate(ConfigurationReader configurationReader)
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.Reload()
   at Microsoft.AspNetCore.Server.Kestrel.KestrelConfigurationLoader.LoadInternal()
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 16:31:30.747 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 16:31:30.840 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 16:31:30.944 +00:00 [ERR] Hosting failed to start
System.InvalidOperationException: Unrecognized scheme in server address ' "https://+:8081'. Only 'http://' and 'https://' are supported.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.ParseAddress(String address, Boolean& https)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(ListenOptions[] listenOptions, AddressBindContext context, Func`2 useHttps, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 16:36:45.665 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 16:36:45.778 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 16:36:45.869 +00:00 [WRN] Overriding address(es) ' "https://+:8081, http://+:8080"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 16:36:46.113 +00:00 [INF] Now listening on: http://[::]:8080
2025-01-22 16:36:46.113 +00:00 [INF] Now listening on: https://[::]:8081
2025-01-22 16:36:46.114 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 16:36:46.114 +00:00 [INF] Hosting environment: Production
2025-01-22 16:36:46.115 +00:00 [INF] Content root path: /app
2025-01-22 16:43:03.972 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 16:43:04.058 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 16:43:04.067 +00:00 [WRN] Overriding address(es) ' "https://+:8081, http://+:8080"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 16:43:04.336 +00:00 [ERR] Hosting failed to start
System.IO.IOException: Failed to bind to address http://[::]:8080: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: Address already in use
 ---> System.Net.Sockets.SocketException (98): Address already in use
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket(EndPoint endpoint)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TransportManager.BindAsync(EndPoint endPoint, ConnectionDelegate connectionDelegate, EndpointConfig endpointConfig, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.<>c__DisplayClass28_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.AnyIPListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.EndpointsStrategy.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(ListenOptions[] listenOptions, AddressBindContext context, Func`2 useHttps, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 16:44:19.309 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 16:44:19.397 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 16:44:19.410 +00:00 [WRN] Overriding address(es) ' "https://+:8081, http://+:8080"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 16:44:19.692 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 16:44:19.693 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 16:44:19.693 +00:00 [INF] Now listening on: http://[::]:8083
2025-01-22 16:44:19.694 +00:00 [INF] Now listening on: https://[::]:8082
2025-01-22 16:44:19.694 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 16:44:19.695 +00:00 [INF] Hosting environment: Production
2025-01-22 16:44:19.696 +00:00 [INF] Content root path: /app
2025-01-22 16:45:19.155 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 16:45:19.274 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 16:45:19.285 +00:00 [WRN] Overriding address(es) ' "https://+:8081, http://+:8080"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 16:45:19.451 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 16:45:19.452 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 16:45:19.453 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 16:45:19.454 +00:00 [INF] Hosting environment: Production
2025-01-22 16:45:19.454 +00:00 [INF] Content root path: /app
2025-01-22 16:47:35.094 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 16:47:35.196 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 16:47:35.210 +00:00 [WRN] Overriding address(es) ' "https://+:8081, http://+:8080"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 16:47:35.457 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 16:47:35.458 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 16:47:35.459 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 16:47:35.459 +00:00 [INF] Hosting environment: Production
2025-01-22 16:47:35.459 +00:00 [INF] Content root path: /app
2025-01-22 16:47:39.991 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/ - null null
2025-01-22 16:47:40.158 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 16:47:40.171 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 16:47:40.173 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/ - 200 null text/plain; charset=utf-8 183.3049ms
2025-01-22 16:47:40.279 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/favicon.ico - null null
2025-01-22 16:47:40.283 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/favicon.ico - 404 0 null 3.0806ms
2025-01-22 16:47:40.285 +00:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:8080/favicon.ico, Response status code: 404
2025-01-22 16:50:01.963 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 16:50:02.098 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 16:50:02.108 +00:00 [WRN] Overriding address(es) ' "https://+:8081, http://+:8080"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 16:50:02.281 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 16:50:02.282 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 16:50:02.282 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 16:50:02.282 +00:00 [INF] Hosting environment: Production
2025-01-22 16:50:02.283 +00:00 [INF] Content root path: /app
2025-01-22 16:50:09.909 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/ - null null
2025-01-22 16:50:10.064 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 16:50:10.076 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 16:50:10.078 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/ - 200 null text/plain; charset=utf-8 172.1591ms
2025-01-22 16:50:11.901 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/ - null null
2025-01-22 16:50:11.902 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 16:50:11.904 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 16:50:11.905 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/ - 200 null text/plain; charset=utf-8 4.1318ms
2025-01-22 16:50:12.516 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/ - null null
2025-01-22 16:50:12.517 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 16:50:12.518 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 16:50:12.519 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/ - 200 null text/plain; charset=utf-8 2.9325ms
2025-01-22 16:53:20.811 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 16:53:20.902 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 16:53:20.918 +00:00 [WRN] Overriding address(es) ' "https://+:8081, http://+:8080"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 16:53:21.089 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 16:53:21.090 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 16:53:21.091 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 16:53:21.091 +00:00 [INF] Hosting environment: Production
2025-01-22 16:53:21.092 +00:00 [INF] Content root path: /app
2025-01-22 17:02:08.922 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 17:02:25.844 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:02:25.854 +00:00 [WRN] Overriding address(es) ' "https://+:8081, http://+:8080"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:02:09.381 +00:00 [ERR] Hosting failed to start
System.IO.IOException: Failed to bind to address http://[::]:8080: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: Address already in use
 ---> System.Net.Sockets.SocketException (98): Address already in use
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket(EndPoint endpoint)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TransportManager.BindAsync(EndPoint endPoint, ConnectionDelegate connectionDelegate, EndpointConfig endpointConfig, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.<>c__DisplayClass28_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.AnyIPListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.EndpointsStrategy.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(ListenOptions[] listenOptions, AddressBindContext context, Func`2 useHttps, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 17:10:32.246 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 17:10:32.391 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:10:32.404 +00:00 [WRN] Overriding address(es) ' "https://+:8081, http://+:8080"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:10:32.794 +00:00 [ERR] Hosting failed to start
System.IO.IOException: Failed to bind to address http://[::]:8080: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: Address already in use
 ---> System.Net.Sockets.SocketException (98): Address already in use
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket(EndPoint endpoint)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TransportManager.BindAsync(EndPoint endPoint, ConnectionDelegate connectionDelegate, EndpointConfig endpointConfig, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.<>c__DisplayClass28_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.AnyIPListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.EndpointsStrategy.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(ListenOptions[] listenOptions, AddressBindContext context, Func`2 useHttps, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 17:15:25.569 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 17:15:25.703 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:15:25.716 +00:00 [WRN] Overriding address(es) ' "https://+:8081, http://+:8080"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:15:25.995 +00:00 [ERR] Hosting failed to start
System.IO.IOException: Failed to bind to address http://[::]:8080: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: Address already in use
 ---> System.Net.Sockets.SocketException (98): Address already in use
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket(EndPoint endpoint)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TransportManager.BindAsync(EndPoint endPoint, ConnectionDelegate connectionDelegate, EndpointConfig endpointConfig, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.<>c__DisplayClass28_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.AnyIPListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.EndpointsStrategy.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(ListenOptions[] listenOptions, AddressBindContext context, Func`2 useHttps, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 17:16:42.906 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8081;http://+:8080"'.
2025-01-22 17:16:42.991 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:16:43.003 +00:00 [WRN] Overriding address(es) ' "https://+:8081, http://+:8080"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:16:43.264 +00:00 [INF] Now listening on: http://0.0.0.0:5000
2025-01-22 17:16:43.265 +00:00 [INF] Now listening on: https://0.0.0.0:5001
2025-01-22 17:16:43.266 +00:00 [INF] Now listening on: http://[::]:8080
2025-01-22 17:16:43.266 +00:00 [INF] Now listening on: https://[::]:8081
2025-01-22 17:16:43.267 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 17:16:43.267 +00:00 [INF] Hosting environment: Production
2025-01-22 17:16:43.267 +00:00 [INF] Content root path: /app
2025-01-22 17:17:00.676 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:8080/ - null null
2025-01-22 17:17:00.868 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:17:00.882 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:17:00.885 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:8080/ - 200 null text/plain; charset=utf-8 212.004ms
2025-01-22 17:18:01.787 +00:00 [INF] Request starting HTTP/1.1 GET https://localhost:8081/products - application/json 183
2025-01-22 17:18:01.789 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:18:02.221 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:18:06.462 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:18:06.468 +00:00 [ERR] Connection id "0HN9R12FJC9R5", Request id "0HN9R12FJC9R5:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:18:06.494 +00:00 [INF] Request finished HTTP/1.1 GET https://localhost:8081/products - 500 0 null 4714.9379ms
2025-01-22 17:21:44.149 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS '8081'. Binding to values defined by URLS instead ' "https://+:8080;http://+:8081"'.
2025-01-22 17:21:44.246 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:21:44.258 +00:00 [WRN] Overriding address(es) ' "https://+:8080, http://+:8081"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:21:44.522 +00:00 [INF] Now listening on: http://0.0.0.0:5000
2025-01-22 17:21:44.523 +00:00 [INF] Now listening on: https://0.0.0.0:5001
2025-01-22 17:21:44.524 +00:00 [INF] Now listening on: http://[::]:8081
2025-01-22 17:21:44.524 +00:00 [INF] Now listening on: https://[::]:8080
2025-01-22 17:21:44.525 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 17:21:44.525 +00:00 [INF] Hosting environment: Production
2025-01-22 17:21:44.525 +00:00 [INF] Content root path: /app
2025-01-22 17:26:02.572 +00:00 [WRN] Overriding HTTP_PORTS '5001' and HTTPS_PORTS '5000'. Binding to values defined by URLS instead ' "https://+:5001;http://+:5000"'.
2025-01-22 17:26:02.697 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:26:02.706 +00:00 [WRN] Overriding address(es) ' "https://+:5001, http://+:5000"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:26:02.899 +00:00 [INF] Now listening on: http://0.0.0.0:5000
2025-01-22 17:26:02.900 +00:00 [INF] Now listening on: https://0.0.0.0:5001
2025-01-22 17:26:02.900 +00:00 [INF] Now listening on: http://[::]:8081
2025-01-22 17:26:02.900 +00:00 [INF] Now listening on: https://[::]:8080
2025-01-22 17:26:02.901 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 17:26:02.901 +00:00 [INF] Hosting environment: Production
2025-01-22 17:26:02.902 +00:00 [INF] Content root path: /app
2025-01-22 17:26:58.170 +00:00 [WRN] Overriding HTTP_PORTS '5001' and HTTPS_PORTS '5000'. Binding to values defined by URLS instead ' "https://+:5001;http://+:5000"'.
2025-01-22 17:26:58.260 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:26:58.269 +00:00 [WRN] Overriding address(es) ' "https://+:5001, http://+:5000"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:26:41.675 +00:00 [INF] Now listening on: http://0.0.0.0:5000
2025-01-22 17:26:41.677 +00:00 [INF] Now listening on: https://0.0.0.0:5001
2025-01-22 17:26:41.677 +00:00 [INF] Now listening on: http://[::]:8081
2025-01-22 17:26:41.678 +00:00 [INF] Now listening on: https://[::]:8080
2025-01-22 17:26:41.679 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 17:26:41.679 +00:00 [INF] Hosting environment: Production
2025-01-22 17:26:41.679 +00:00 [INF] Content root path: /app
2025-01-22 17:28:37.965 +00:00 [WRN] Overriding HTTP_PORTS '5001' and HTTPS_PORTS '5000'. Binding to values defined by URLS instead ' "https://+:5001;http://+:5000"'.
2025-01-22 17:28:38.045 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:28:38.054 +00:00 [WRN] Overriding address(es) ' "https://+:5001, http://+:5000"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:28:38.230 +00:00 [ERR] Hosting failed to start
System.IO.IOException: Failed to bind to address http://[::]:5001: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: Address already in use
 ---> System.Net.Sockets.SocketException (98): Address already in use
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket(EndPoint endpoint)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TransportManager.BindAsync(EndPoint endPoint, ConnectionDelegate connectionDelegate, EndpointConfig endpointConfig, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.<>c__DisplayClass28_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.AnyIPListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.EndpointsStrategy.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(ListenOptions[] listenOptions, AddressBindContext context, Func`2 useHttps, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2025-01-22 17:29:43.653 +00:00 [WRN] Overriding HTTP_PORTS '5001' and HTTPS_PORTS '5000'. Binding to values defined by URLS instead ' "https://+:5001;http://+:5000"'.
2025-01-22 17:29:43.763 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:29:43.772 +00:00 [WRN] Overriding address(es) ' "https://+:5001, http://+:5000"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:29:43.936 +00:00 [INF] Now listening on: http://0.0.0.0:5000
2025-01-22 17:29:43.937 +00:00 [INF] Now listening on: https://0.0.0.0:5001
2025-01-22 17:29:43.938 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 17:29:43.938 +00:00 [INF] Hosting environment: Production
2025-01-22 17:29:43.938 +00:00 [INF] Content root path: /app
2025-01-22 17:32:56.254 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:32:56.336 +00:00 [WRN] Overriding address(es) 'http://*:8080'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:32:56.517 +00:00 [INF] Now listening on: http://0.0.0.0:5000
2025-01-22 17:32:56.517 +00:00 [INF] Now listening on: https://0.0.0.0:5001
2025-01-22 17:32:56.518 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 17:32:56.518 +00:00 [INF] Hosting environment: Production
2025-01-22 17:32:56.519 +00:00 [INF] Content root path: /app
2025-01-22 17:34:43.190 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead ' "https://+:9999;http://+:9998"'.
2025-01-22 17:34:43.314 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:34:43.327 +00:00 [WRN] Overriding address(es) ' "https://+:9999, http://+:9998"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:34:43.499 +00:00 [INF] Now listening on: http://0.0.0.0:5000
2025-01-22 17:34:43.500 +00:00 [INF] Now listening on: https://0.0.0.0:5001
2025-01-22 17:34:43.501 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 17:34:43.501 +00:00 [INF] Hosting environment: Production
2025-01-22 17:34:43.502 +00:00 [INF] Content root path: /app
2025-01-22 17:35:54.320 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead ' "https://+:9999;http://+:9998"'.
2025-01-22 17:35:54.415 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:35:54.425 +00:00 [WRN] Overriding address(es) ' "https://+:9999, http://+:9998"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:35:54.599 +00:00 [INF] Now listening on: http://0.0.0.0:9998
2025-01-22 17:35:54.600 +00:00 [INF] Now listening on: https://0.0.0.0:9999
2025-01-22 17:35:54.601 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 17:35:54.601 +00:00 [INF] Hosting environment: Production
2025-01-22 17:35:54.602 +00:00 [INF] Content root path: /app
2025-01-22 17:37:11.917 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead ' "https://+:9999;http://+:9998"'.
2025-01-22 17:37:12.018 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:37:12.029 +00:00 [WRN] Overriding address(es) ' "https://+:9999, http://+:9998"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:37:12.212 +00:00 [INF] Now listening on: http://0.0.0.0:9998
2025-01-22 17:37:12.213 +00:00 [INF] Now listening on: https://0.0.0.0:9999
2025-01-22 17:37:12.214 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 17:37:12.215 +00:00 [INF] Hosting environment: Production
2025-01-22 17:37:12.216 +00:00 [INF] Content root path: /app
2025-01-22 17:38:46.020 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead ' "https://+:9999;http://+:9998"'.
2025-01-22 17:38:46.129 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:38:46.140 +00:00 [WRN] Overriding address(es) ' "https://+:9999, http://+:9998"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:38:46.336 +00:00 [INF] Now listening on: http://0.0.0.0:9998
2025-01-22 17:38:46.337 +00:00 [INF] Now listening on: https://0.0.0.0:9999
2025-01-22 17:38:46.337 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 17:38:46.338 +00:00 [INF] Hosting environment: Production
2025-01-22 17:38:46.338 +00:00 [INF] Content root path: /app
2025-01-22 17:43:18.864 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead '"https://+:9999;http://+:9998"'.
2025-01-22 17:43:18.975 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:43:18.985 +00:00 [WRN] Overriding address(es) '"https://+:9999, http://+:9998"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:43:19.156 +00:00 [INF] Now listening on: http://0.0.0.0:9998
2025-01-22 17:43:19.157 +00:00 [INF] Now listening on: https://0.0.0.0:9999
2025-01-22 17:43:19.158 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 17:43:19.158 +00:00 [INF] Hosting environment: Production
2025-01-22 17:43:19.158 +00:00 [INF] Content root path: /app
2025-01-22 17:44:36.874 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead '"https://+:9999;http://+:9998"'.
2025-01-22 17:44:36.996 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:44:37.006 +00:00 [WRN] Overriding address(es) '"https://+:9999, http://+:9998"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:44:37.170 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 17:44:37.171 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 17:44:37.172 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 17:44:37.173 +00:00 [INF] Hosting environment: Production
2025-01-22 17:44:37.173 +00:00 [INF] Content root path: /app
2025-01-22 17:44:50.205 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 17:44:50.400 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:44:50.412 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:44:50.414 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 212.0001ms
2025-01-22 17:44:50.485 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/favicon.ico - null null
2025-01-22 17:44:50.487 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/favicon.ico - 404 0 null 2.816ms
2025-01-22 17:44:50.492 +00:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:9998/favicon.ico, Response status code: 404
2025-01-22 17:45:24.068 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead '"https://+:9999;http://+:9998"'.
2025-01-22 17:45:24.152 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:45:24.161 +00:00 [WRN] Overriding address(es) '"https://+:9999, http://+:9998"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:45:24.327 +00:00 [INF] Now listening on: http://0.0.0.0:1535
2025-01-22 17:45:24.328 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 17:45:24.328 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 17:45:24.329 +00:00 [INF] Hosting environment: Production
2025-01-22 17:45:24.329 +00:00 [INF] Content root path: /app
2025-01-22 17:46:02.307 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead '"https://+:9999;http://+:9998"'.
2025-01-22 17:46:02.407 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 17:46:02.420 +00:00 [WRN] Overriding address(es) '"https://+:9999, http://+:9998"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 17:46:02.619 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 17:46:02.620 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 17:46:02.621 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 17:46:02.621 +00:00 [INF] Hosting environment: Production
2025-01-22 17:46:02.621 +00:00 [INF] Content root path: /app
2025-01-22 17:46:04.916 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 17:46:05.063 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:46:05.072 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:46:05.075 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 159.3409ms
2025-01-22 17:46:06.215 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 17:46:06.216 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:46:06.217 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:46:06.218 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 2.3492ms
2025-01-22 17:46:06.398 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 17:46:06.398 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:46:06.399 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:46:06.400 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 1.9296ms
2025-01-22 17:46:06.567 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 17:46:06.568 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:46:06.569 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:46:06.570 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 2.1799ms
2025-01-22 17:46:10.379 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 17:46:10.381 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:46:10.382 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:46:10.384 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 3.9656ms
2025-01-22 17:46:10.537 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 17:46:10.538 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:46:10.539 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:46:10.540 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 3.0573ms
2025-01-22 17:46:12.907 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 17:46:12.908 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:46:12.909 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:46:12.911 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 4.288ms
2025-01-22 17:46:13.117 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 17:46:13.118 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:46:13.119 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:46:13.120 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 2.3322ms
2025-01-22 17:46:32.044 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/ - null null
2025-01-22 17:46:32.045 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:46:32.046 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:46:32.048 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/ - 200 null text/plain; charset=utf-8 3.4136ms
2025-01-22 17:46:32.131 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/favicon.ico - null null
2025-01-22 17:46:32.136 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/favicon.ico - 404 0 null 5.2323ms
2025-01-22 17:46:32.140 +00:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:9999/favicon.ico, Response status code: 404
2025-01-22 17:46:39.932 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:39.936 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:40.365 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:44.169 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:44.174 +00:00 [ERR] Connection id "0HN9R1IIE6Q0M", Request id "0HN9R1IIE6Q0M:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:44.196 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 4263.5946ms
2025-01-22 17:46:48.886 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:48.887 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:48.890 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:48.998 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:48.999 +00:00 [ERR] Connection id "0HN9R1IIE6Q0M", Request id "0HN9R1IIE6Q0M:00000003": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:49.049 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 163.4469ms
2025-01-22 17:46:50.289 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:50.290 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:50.294 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:50.391 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:50.392 +00:00 [ERR] Connection id "0HN9R1IIE6Q0M", Request id "0HN9R1IIE6Q0M:00000005": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:50.397 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 108.4002ms
2025-01-22 17:46:51.043 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:51.045 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:51.046 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:51.173 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:51.174 +00:00 [ERR] Connection id "0HN9R1IIE6Q0M", Request id "0HN9R1IIE6Q0M:00000007": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:51.198 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 155.5573ms
2025-01-22 17:46:51.793 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:51.795 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:51.796 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:51.900 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:51.901 +00:00 [ERR] Connection id "0HN9R1IIE6Q0M", Request id "0HN9R1IIE6Q0M:00000009": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:51.925 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 132.3784ms
2025-01-22 17:46:52.466 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:52.467 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:52.468 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:52.594 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:52.596 +00:00 [ERR] Connection id "0HN9R1IIE6Q0M", Request id "0HN9R1IIE6Q0M:0000000B": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:52.600 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 134.2719ms
2025-01-22 17:47:10.259 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:47:10.260 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:47:10.261 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:53.589 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:53.590 +00:00 [ERR] Connection id "0HN9R1IIE6Q0M", Request id "0HN9R1IIE6Q0M:0000000D": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:53.594 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 111.1972ms
2025-01-22 17:46:54.252 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:54.254 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:54.255 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:54.341 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:54.342 +00:00 [ERR] Connection id "0HN9R1IIE6Q0N", Request id "0HN9R1IIE6Q0N:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:54.346 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 94.2915ms
2025-01-22 17:46:54.609 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:54.611 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:54.612 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:54.711 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:54.712 +00:00 [ERR] Connection id "0HN9R1IIE6Q0N", Request id "0HN9R1IIE6Q0N:00000003": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:54.718 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 109.0991ms
2025-01-22 17:46:55.045 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:55.047 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:55.048 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:55.142 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:55.143 +00:00 [ERR] Connection id "0HN9R1IIE6Q0N", Request id "0HN9R1IIE6Q0N:00000005": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:55.146 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 101.566ms
2025-01-22 17:46:55.471 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:55.473 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:55.473 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:47:12.346 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:47:12.347 +00:00 [ERR] Connection id "0HN9R1IIE6Q0N", Request id "0HN9R1IIE6Q0N:00000007": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:47:12.351 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 104.677ms
2025-01-22 17:46:55.842 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:55.843 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:55.843 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:55.969 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:55.971 +00:00 [ERR] Connection id "0HN9R1IIE6Q0N", Request id "0HN9R1IIE6Q0N:00000009": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:55.995 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 153.9505ms
2025-01-22 17:46:56.405 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:56.407 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:56.408 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:56.521 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:56.522 +00:00 [ERR] Connection id "0HN9R1IIE6Q0N", Request id "0HN9R1IIE6Q0N:0000000B": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:56.525 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 119.7182ms
2025-01-22 17:46:56.777 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:56.778 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:56.779 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:56.880 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:56.881 +00:00 [ERR] Connection id "0HN9R1IIE6Q0N", Request id "0HN9R1IIE6Q0N:0000000D": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:56.886 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 109.9308ms
2025-01-22 17:46:57.176 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:57.177 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:57.178 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:57.283 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:57.284 +00:00 [ERR] Connection id "0HN9R1IIE6Q0N", Request id "0HN9R1IIE6Q0N:0000000F": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:57.289 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 113.4023ms
2025-01-22 17:46:57.744 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:57.746 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:57.747 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:57.846 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:57.847 +00:00 [ERR] Connection id "0HN9R1IIE6Q0N", Request id "0HN9R1IIE6Q0N:00000011": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:57.872 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 127.5837ms
2025-01-22 17:46:58.106 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:46:58.108 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:46:58.109 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:58.207 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:58.208 +00:00 [ERR] Connection id "0HN9R1IIE6Q0N", Request id "0HN9R1IIE6Q0N:00000013": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:58.232 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 125.3311ms
2025-01-22 17:47:15.281 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:47:15.282 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:47:15.283 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:46:58.616 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:46:58.616 +00:00 [ERR] Connection id "0HN9R1IIE6Q0N", Request id "0HN9R1IIE6Q0N:00000015": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:46:58.620 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 118.4838ms
2025-01-22 17:47:15.768 +00:00 [INF] Request starting HTTP/1.1 GET https://localhost:9999/products - application/json 183
2025-01-22 17:47:15.770 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:47:15.771 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:47:15.864 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:47:15.865 +00:00 [ERR] Connection id "0HN9R1IIE6Q0P", Request id "0HN9R1IIE6Q0P:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:47:15.871 +00:00 [INF] Request finished HTTP/1.1 GET https://localhost:9999/products - 500 0 null 103.1612ms
2025-01-22 17:47:27.073 +00:00 [INF] Request starting HTTP/1.1 GET https://localhost:9999/products - application/json 183
2025-01-22 17:47:27.073 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:47:27.074 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:47:27.157 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:47:27.158 +00:00 [ERR] Connection id "0HN9R1IIE6Q0P", Request id "0HN9R1IIE6Q0P:00000002": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:47:27.162 +00:00 [INF] Request finished HTTP/1.1 GET https://localhost:9999/products - 500 0 null 89.0018ms
2025-01-22 17:47:45.364 +00:00 [INF] Request starting HTTP/1.1 GET https://localhost:9999/products - application/json 183
2025-01-22 17:47:45.365 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:47:45.365 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:47:28.711 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:47:28.712 +00:00 [ERR] Connection id "0HN9R1IIE6Q0P", Request id "0HN9R1IIE6Q0P:00000003": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:47:28.718 +00:00 [INF] Request finished HTTP/1.1 GET https://localhost:9999/products - 500 0 null 125.8321ms
2025-01-22 17:47:50.177 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 17:47:50.201 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:47:50.204 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:47:50.207 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 29.7471ms
2025-01-22 17:47:50.577 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 17:47:50.577 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:47:50.578 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:47:50.578 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 1.5411ms
2025-01-22 17:47:51.147 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 17:47:51.148 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:47:51.148 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:47:51.149 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 2.464ms
2025-01-22 17:47:51.958 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 17:47:51.959 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:47:51.960 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:47:51.960 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 2.4813ms
2025-01-22 17:47:55.820 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/products - null null
2025-01-22 17:47:55.823 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:47:55.845 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:47:55.944 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:47:55.945 +00:00 [ERR] Connection id "0HN9R1IIE6Q0S", Request id "0HN9R1IIE6Q0S:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:47:55.949 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/products - 500 0 null 129.4222ms
2025-01-22 17:48:19.325 +00:00 [INF] Request starting HTTP/1.1 GET https://localhost:9999/product - application/json 183
2025-01-22 17:48:19.326 +00:00 [INF] Request finished HTTP/1.1 GET https://localhost:9999/product - 404 0 null 1.2423ms
2025-01-22 17:48:19.327 +00:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:9999/product, Response status code: 404
2025-01-22 17:48:40.265 +00:00 [INF] Request starting HTTP/1.1 GET https://localhost:9999/products - application/json 183
2025-01-22 17:48:40.266 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 17:48:40.266 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 17:48:40.354 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 17:48:40.355 +00:00 [ERR] Connection id "0HN9R1IIE6Q0P", Request id "0HN9R1IIE6Q0P:00000005": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:48:40.380 +00:00 [INF] Request finished HTTP/1.1 GET https://localhost:9999/products - 500 0 null 114.4616ms
2025-01-22 17:48:27.541 +00:00 [INF] Request starting HTTP/1.1 POST https://localhost:9999/products - application/json 183
2025-01-22 17:48:27.542 +00:00 [INF] Executing endpoint 'HTTP: POST /products'
2025-01-22 17:48:57.159 +00:00 [INF] Executed endpoint 'HTTP: POST /products'
2025-01-22 17:48:57.160 +00:00 [ERR] Connection id "0HN9R1IIE6Q0P", Request id "0HN9R1IIE6Q0P:00000006": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Internal.Sessions.DocumentSessionBase.SaveChangesAsync(CancellationToken token)
   at CatalogApi.Products.CreateProduct.CreateProductCommandHandler.Handle(CreateProductCommand command, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductHandle.cs:line 30
   at CatalogApi.Products.CreateProduct.CreateProductEndpoint.<AddRoutes>b__2_0(CreateProductRequest request, ISender sender) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductEndpoint.cs:line 19
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<>c__DisplayClass102_2.<<HandleRequestBodyAndCompileRequestDelegateForJson>b__2>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:48:57.165 +00:00 [INF] Request finished HTTP/1.1 POST https://localhost:9999/products - 500 0 null 29623.4463ms
2025-01-22 17:50:58.341 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 17:50:58.373 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:50:58.408 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:50:58.431 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 89.1331ms
2025-01-22 17:51:06.889 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 17:51:06.890 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:51:06.891 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:51:06.902 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 13.6201ms
2025-01-22 17:51:12.046 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/ - null null
2025-01-22 17:51:12.046 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 17:51:12.048 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 17:51:12.049 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/ - 200 null text/plain; charset=utf-8 3.9782ms
2025-01-22 17:51:24.845 +00:00 [INF] Request starting HTTP/1.1 POST https://localhost:9999/products - application/json 183
2025-01-22 17:51:24.846 +00:00 [INF] Executing endpoint 'HTTP: POST /products'
2025-01-22 17:51:35.717 +00:00 [INF] Executed endpoint 'HTTP: POST /products'
2025-01-22 17:51:35.718 +00:00 [ERR] Connection id "0HN9R1IIE6Q13", Request id "0HN9R1IIE6Q13:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.CreateException(SocketError error, Boolean forAsyncThrow)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ConnectAsync(Socket socket)
   at System.Net.Sockets.Socket.ConnectAsync(EndPoint remoteEP, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Threading.Tasks.Task.FinishSlow(Boolean userDelegateExecute)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception, Task`1& taskField)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(IAsyncStateMachineBox box, Boolean allowInlining)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Threading.Tasks.Task.FinishSlow(Boolean userDelegateExecute)
   at System.Threading.Tasks.Task.CancellationPromise`1.System.Threading.Tasks.ITaskCompletionAction.Invoke(Task completingTask)
   at System.Threading.Tasks.Task.RunContinuations(Object continuationObject)
   at System.Threading.Tasks.Task.FinishSlow(Boolean userDelegateExecute)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception, Task`1& taskField)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)
   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)
   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecuteFromThreadPool(Thread threadPoolThread)
   at System.Threading.ThreadPoolWorkQueue.Dispatch()
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()
--- End of stack trace from previous location ---
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Internal.Sessions.DocumentSessionBase.SaveChangesAsync(CancellationToken token)
   at CatalogApi.Products.CreateProduct.CreateProductCommandHandler.Handle(CreateProductCommand command, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductHandle.cs:line 30
   at CatalogApi.Products.CreateProduct.CreateProductEndpoint.<AddRoutes>b__2_0(CreateProductRequest request, ISender sender) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductEndpoint.cs:line 19
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<>c__DisplayClass102_2.<<HandleRequestBodyAndCompileRequestDelegateForJson>b__2>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:51:35.722 +00:00 [INF] Request finished HTTP/1.1 POST https://localhost:9999/products - 500 0 null 10879.9819ms
2025-01-22 17:52:32.992 +00:00 [INF] Request starting HTTP/1.1 POST https://localhost:9999/products - application/json 183
2025-01-22 17:52:32.993 +00:00 [INF] Executing endpoint 'HTTP: POST /products'
2025-01-22 17:53:16.503 +00:00 [INF] Executed endpoint 'HTTP: POST /products'
2025-01-22 17:53:16.504 +00:00 [ERR] Connection id "0HN9R1IIE6Q15", Request id "0HN9R1IIE6Q15:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Internal.Sessions.DocumentSessionBase.SaveChangesAsync(CancellationToken token)
   at CatalogApi.Products.CreateProduct.CreateProductCommandHandler.Handle(CreateProductCommand command, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductHandle.cs:line 30
   at CatalogApi.Products.CreateProduct.CreateProductEndpoint.<AddRoutes>b__2_0(CreateProductRequest request, ISender sender) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductEndpoint.cs:line 19
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<>c__DisplayClass102_2.<<HandleRequestBodyAndCompileRequestDelegateForJson>b__2>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 17:53:16.509 +00:00 [INF] Request finished HTTP/1.1 POST https://localhost:9999/products - 500 0 null 43517.5623ms
2025-01-22 18:02:40.546 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead '"https://+:9999;http://+:9998"'.
2025-01-22 18:02:40.638 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 18:02:40.650 +00:00 [WRN] Overriding address(es) '"https://+:9999, http://+:9998"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 18:02:40.972 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 18:02:40.974 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 18:02:40.975 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 18:02:40.975 +00:00 [INF] Hosting environment: Production
2025-01-22 18:02:40.976 +00:00 [INF] Content root path: /app
2025-01-22 18:02:56.071 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 18:02:56.256 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:02:56.268 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:02:56.270 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 202.5151ms
2025-01-22 18:03:03.497 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/ - null null
2025-01-22 18:03:03.498 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:03:03.500 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:03:03.501 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/ - 200 null text/plain; charset=utf-8 4.1242ms
2025-01-22 18:03:23.097 +00:00 [INF] Request starting HTTP/1.1 POST https://localhost:9999/products - application/json 183
2025-01-22 18:03:23.101 +00:00 [INF] Executing endpoint 'HTTP: POST /products'
2025-01-22 18:03:28.979 +00:00 [INF] CreateProduct start.Handle called with {"Name":"Product Soft Drinks","Category":["h1","h2"],"Description":"Description Product Hello","ImageFile":"ImageFile of Product Hello","Price":9999,"$type":"CreateProductCommand"}
2025-01-22 18:03:29.326 +00:00 [INF] Start
2025-01-22 18:03:33.757 +00:00 [INF] Executed endpoint 'HTTP: POST /products'
2025-01-22 18:03:33.762 +00:00 [ERR] Connection id "0HN9R1RVP4RQ6", Request id "0HN9R1RVP4RQ6:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Internal.Sessions.DocumentSessionBase.SaveChangesAsync(CancellationToken token)
   at CatalogApi.Products.CreateProduct.CreateProductCommandHandler.Handle(CreateProductCommand command, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductHandle.cs:line 30
   at CatalogApi.Products.CreateProduct.CreateProductEndpoint.<AddRoutes>b__2_0(CreateProductRequest request, ISender sender) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductEndpoint.cs:line 19
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<>c__DisplayClass102_2.<<HandleRequestBodyAndCompileRequestDelegateForJson>b__2>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 18:03:33.802 +00:00 [INF] Request finished HTTP/1.1 POST https://localhost:9999/products - 500 0 null 10705.8609ms
2025-01-22 18:04:17.364 +00:00 [INF] Request starting HTTP/1.1 POST https://localhost:9999/products - application/json 183
2025-01-22 18:04:17.365 +00:00 [INF] Executing endpoint 'HTTP: POST /products'
2025-01-22 18:04:43.991 +00:00 [INF] CreateProduct start.Handle called with {"Name":"Product Soft Drinks","Category":["h1","h2"],"Description":"Description Product Hello","ImageFile":"ImageFile of Product Hello","Price":9999,"$type":"CreateProductCommand"}
2025-01-22 18:05:08.440 +00:00 [INF] Start
2025-01-22 18:05:08.803 +00:00 [INF] Executed endpoint 'HTTP: POST /products'
2025-01-22 18:05:08.804 +00:00 [ERR] Connection id "0HN9R1RVP4RQ6", Request id "0HN9R1RVP4RQ6:00000002": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Internal.Sessions.DocumentSessionBase.SaveChangesAsync(CancellationToken token)
   at CatalogApi.Products.CreateProduct.CreateProductCommandHandler.Handle(CreateProductCommand command, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductHandle.cs:line 30
   at CatalogApi.Products.CreateProduct.CreateProductEndpoint.<AddRoutes>b__2_0(CreateProductRequest request, ISender sender) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductEndpoint.cs:line 19
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<>c__DisplayClass102_2.<<HandleRequestBodyAndCompileRequestDelegateForJson>b__2>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 18:05:08.837 +00:00 [INF] Request finished HTTP/1.1 POST https://localhost:9999/products - 500 0 null 51475.3011ms
2025-01-22 18:06:26.712 +00:00 [INF] Request starting HTTP/1.1 GET https://localhost:9999/products - application/json 183
2025-01-22 18:06:26.713 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 18:06:26.731 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 18:06:26.865 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 18:06:26.866 +00:00 [ERR] Connection id "0HN9R1RVP4RQ8", Request id "0HN9R1RVP4RQ8:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 18:06:26.891 +00:00 [INF] Request finished HTTP/1.1 GET https://localhost:9999/products - 500 0 null 179.2645ms
2025-01-22 18:06:30.740 +00:00 [INF] Request starting HTTP/1.1 GET https://localhost:9999/products - application/json 183
2025-01-22 18:06:30.741 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 18:06:30.742 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 18:06:30.822 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 18:06:30.823 +00:00 [ERR] Connection id "0HN9R1RVP4RQ8", Request id "0HN9R1RVP4RQ8:00000002": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 18:06:30.847 +00:00 [INF] Request finished HTTP/1.1 GET https://localhost:9999/products - 500 0 null 106.975ms
2025-01-22 18:06:32.470 +00:00 [INF] Request starting HTTP/1.1 GET https://localhost:9999/products - application/json 183
2025-01-22 18:06:32.471 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 18:06:32.473 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 18:06:32.552 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 18:06:32.553 +00:00 [ERR] Connection id "0HN9R1RVP4RQ8", Request id "0HN9R1RVP4RQ8:00000003": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 18:06:32.558 +00:00 [INF] Request finished HTTP/1.1 GET https://localhost:9999/products - 500 0 null 87.9011ms
2025-01-22 18:07:36.074 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 18:07:36.075 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:07:36.077 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:07:36.114 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 15.9431ms
2025-01-22 18:07:50.827 +00:00 [INF] Request starting HTTP/1.1 GET https://localhost:9999/products - application/json 183
2025-01-22 18:07:50.828 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 18:07:50.829 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 18:07:50.920 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 18:07:50.921 +00:00 [ERR] Connection id "0HN9R1RVP4RQC", Request id "0HN9R1RVP4RQC:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 18:07:50.947 +00:00 [INF] Request finished HTTP/1.1 GET https://localhost:9999/products - 500 0 null 119.8205ms
2025-01-22 18:07:52.219 +00:00 [INF] Request starting HTTP/1.1 GET https://localhost:9999/products - application/json 183
2025-01-22 18:07:52.221 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 18:07:52.223 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 18:07:52.308 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 18:07:52.308 +00:00 [ERR] Connection id "0HN9R1RVP4RQC", Request id "0HN9R1RVP4RQC:00000002": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Linq.MartenLinqQueryProvider.EnsureStorageExistsAsync(LinqQueryParser parser, CancellationToken cancellationToken)
   at Marten.Linq.MartenLinqQueryable`1.ToListAsync[TResult](CancellationToken token)
   at CatalogApi.Products.GetProduct.GetProductsQueryHandler.Handle(GetProductsQuery query, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductHandler.cs:line 14
   at CatalogApi.Products.GetProduct.GetProductEndpoint.<>c.<<AddRoutes>b__0_0>d.MoveNext() in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\GetProduct\GetProductEndpoint.cs:line 14
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 18:07:52.333 +00:00 [INF] Request finished HTTP/1.1 GET https://localhost:9999/products - 500 0 null 113.4683ms
2025-01-22 18:08:19.577 +00:00 [INF] Request starting HTTP/1.1 POST https://localhost:9999/products - application/json 183
2025-01-22 18:08:19.578 +00:00 [INF] Executing endpoint 'HTTP: POST /products'
2025-01-22 18:09:12.234 +00:00 [INF] CreateProduct start.Handle called with {"Name":"Product Soft Drinks","Category":["h1","h2"],"Description":"Description Product Hello","ImageFile":"ImageFile of Product Hello","Price":9999,"$type":"CreateProductCommand"}
2025-01-22 18:09:13.471 +00:00 [INF] Start
2025-01-22 18:09:13.631 +00:00 [INF] Executed endpoint 'HTTP: POST /products'
2025-01-22 18:09:13.632 +00:00 [ERR] Connection id "0HN9R1RVP4RQC", Request id "0HN9R1RVP4RQC:00000003": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Internal.Sessions.DocumentSessionBase.SaveChangesAsync(CancellationToken token)
   at CatalogApi.Products.CreateProduct.CreateProductCommandHandler.Handle(CreateProductCommand command, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductHandle.cs:line 30
   at CatalogApi.Products.CreateProduct.CreateProductEndpoint.<AddRoutes>b__2_0(CreateProductRequest request, ISender sender) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductEndpoint.cs:line 19
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<>c__DisplayClass102_2.<<HandleRequestBodyAndCompileRequestDelegateForJson>b__2>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 18:09:13.636 +00:00 [INF] Request finished HTTP/1.1 POST https://localhost:9999/products - 500 0 null 54059.303ms
2025-01-22 18:16:27.353 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead '"https://+:9999;http://+:9998"'.
2025-01-22 18:16:27.437 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 18:16:27.446 +00:00 [WRN] Overriding address(es) '"https://+:9999, http://+:9998"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 18:16:27.708 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 18:16:27.709 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 18:16:27.710 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 18:16:27.711 +00:00 [INF] Hosting environment: Production
2025-01-22 18:16:27.711 +00:00 [INF] Content root path: /app
2025-01-22 18:16:39.847 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 18:16:40.027 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:16:40.036 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:16:40.042 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 196.3491ms
2025-01-22 18:16:46.511 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/ - null null
2025-01-22 18:16:46.514 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:16:46.515 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:16:46.517 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/ - 200 null text/plain; charset=utf-8 5.8853ms
2025-01-22 18:16:50.712 +00:00 [INF] Request starting HTTP/1.1 POST https://localhost:9999/products - application/json 183
2025-01-22 18:16:50.716 +00:00 [INF] Executing endpoint 'HTTP: POST /products'
2025-01-22 18:17:12.983 +00:00 [INF] CreateProduct start.Handle called with {"Name":"Product Soft Drinks","Category":["h1","h2"],"Description":"Description Product Hello","ImageFile":"ImageFile of Product Hello","Price":9999,"$type":"CreateProductCommand"}
2025-01-22 18:16:56.595 +00:00 [INF] Start
2025-01-22 18:17:00.568 +00:00 [INF] Executed endpoint 'HTTP: POST /products'
2025-01-22 18:17:00.573 +00:00 [ERR] Connection id "0HN9R23L9DTVH", Request id "0HN9R23L9DTVH:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Internal.Sessions.DocumentSessionBase.SaveChangesAsync(CancellationToken token)
   at CatalogApi.Products.CreateProduct.CreateProductCommandHandler.Handle(CreateProductCommand command, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductHandle.cs:line 30
   at CatalogApi.Products.CreateProduct.CreateProductEndpoint.<AddRoutes>b__2_0(CreateProductRequest request, ISender sender) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductEndpoint.cs:line 19
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<>c__DisplayClass102_2.<<HandleRequestBodyAndCompileRequestDelegateForJson>b__2>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 18:17:00.598 +00:00 [INF] Request finished HTTP/1.1 POST https://localhost:9999/products - 500 0 null 9872.6204ms
2025-01-22 18:18:11.864 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead '"https://+:9999;http://+:9998"'.
2025-01-22 18:18:11.954 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 18:18:11.966 +00:00 [WRN] Overriding address(es) '"https://+:9999, http://+:9998"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 18:18:12.134 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 18:18:12.135 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 18:18:12.136 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 18:18:12.136 +00:00 [INF] Hosting environment: Production
2025-01-22 18:18:12.137 +00:00 [INF] Content root path: /app
2025-01-22 18:18:44.053 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 18:18:44.210 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:18:44.222 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:18:44.228 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 173.6083ms
2025-01-22 18:19:49.182 +00:00 [INF] Request starting HTTP/1.1 POST https://localhost:9999/products - application/json 183
2025-01-22 18:19:49.184 +00:00 [INF] Executing endpoint 'HTTP: POST /products'
2025-01-22 18:19:54.486 +00:00 [INF] CreateProduct start.Handle called with {"Name":"Product Soft Drinks","Category":["h1","h2"],"Description":"Description Product Hello","ImageFile":"ImageFile of Product Hello","Price":9999,"$type":"CreateProductCommand"}
2025-01-22 18:19:54.870 +00:00 [INF] Start
2025-01-22 18:19:58.832 +00:00 [INF] Executed endpoint 'HTTP: POST /products'
2025-01-22 18:19:58.839 +00:00 [ERR] Connection id "0HN9R24Q9LPCH", Request id "0HN9R24Q9LPCH:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Internal.Sessions.DocumentSessionBase.SaveChangesAsync(CancellationToken token)
   at CatalogApi.Products.CreateProduct.CreateProductCommandHandler.Handle(CreateProductCommand command, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductHandle.cs:line 30
   at CatalogApi.Products.CreateProduct.CreateProductEndpoint.<AddRoutes>b__2_0(CreateProductRequest request, ISender sender) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductEndpoint.cs:line 19
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<>c__DisplayClass102_2.<<HandleRequestBodyAndCompileRequestDelegateForJson>b__2>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 18:19:58.864 +00:00 [INF] Request finished HTTP/1.1 POST https://localhost:9999/products - 500 0 null 9676.3383ms
2025-01-22 18:23:08.106 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 18:23:08.150 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:23:08.152 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:23:08.153 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 89.2057ms
2025-01-22 18:23:22.999 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/ - null null
2025-01-22 18:23:23.001 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:23:23.003 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:23:23.007 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/ - 200 null text/plain; charset=utf-8 7.2594ms
2025-01-22 18:25:35.198 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead '"https://+:9999;http://+:9998"'.
2025-01-22 18:25:35.315 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 18:25:35.326 +00:00 [WRN] Overriding address(es) '"https://+:9999, http://+:9998"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 18:25:35.498 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 18:25:35.499 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 18:25:35.500 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 18:25:35.501 +00:00 [INF] Hosting environment: Production
2025-01-22 18:25:35.501 +00:00 [INF] Content root path: /app
2025-01-22 18:25:40.545 +00:00 [INF] Request starting HTTP/1.1 POST https://localhost:9999/products - application/json 183
2025-01-22 18:25:40.713 +00:00 [INF] Executing endpoint 'HTTP: POST /products'
2025-01-22 18:25:45.427 +00:00 [INF] CreateProduct start.Handle called with {"Name":"Product Soft Drinks","Category":["h1","h2"],"Description":"Description Product Hello","ImageFile":"ImageFile of Product Hello","Price":9999,"$type":"CreateProductCommand"}
2025-01-22 18:25:45.775 +00:00 [INF] Start
2025-01-22 18:25:50.010 +00:00 [INF] Executed endpoint 'HTTP: POST /products'
2025-01-22 18:25:50.016 +00:00 [ERR] Connection id "0HN9R28MDJ5RM", Request id "0HN9R28MDJ5RM:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Internal.Sessions.DocumentSessionBase.SaveChangesAsync(CancellationToken token)
   at CatalogApi.Products.CreateProduct.CreateProductCommandHandler.Handle(CreateProductCommand command, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductHandle.cs:line 30
   at CatalogApi.Products.CreateProduct.CreateProductEndpoint.<AddRoutes>b__2_0(CreateProductRequest request, ISender sender) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductEndpoint.cs:line 19
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<>c__DisplayClass102_2.<<HandleRequestBodyAndCompileRequestDelegateForJson>b__2>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 18:25:50.074 +00:00 [INF] Request finished HTTP/1.1 POST https://localhost:9999/products - 500 0 null 9529.7417ms
2025-01-22 18:26:20.447 +00:00 [INF] Request starting HTTP/1.1 POST https://localhost:9999/products - application/json 183
2025-01-22 18:26:20.448 +00:00 [INF] Executing endpoint 'HTTP: POST /products'
2025-01-22 18:26:20.450 +00:00 [INF] CreateProduct start.Handle called with {"Name":"Product Soft Drinks","Category":["h1","h2"],"Description":"Description Product Hello","ImageFile":"ImageFile of Product Hello","Price":9999,"$type":"CreateProductCommand"}
2025-01-22 18:26:20.501 +00:00 [INF] Start
2025-01-22 18:26:20.594 +00:00 [INF] Executed endpoint 'HTTP: POST /products'
2025-01-22 18:26:20.595 +00:00 [ERR] Connection id "0HN9R28MDJ5RM", Request id "0HN9R28MDJ5RM:00000002": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Internal.Sessions.DocumentSessionBase.SaveChangesAsync(CancellationToken token)
   at CatalogApi.Products.CreateProduct.CreateProductCommandHandler.Handle(CreateProductCommand command, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductHandle.cs:line 30
   at CatalogApi.Products.CreateProduct.CreateProductEndpoint.<AddRoutes>b__2_0(CreateProductRequest request, ISender sender) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductEndpoint.cs:line 19
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<>c__DisplayClass102_2.<<HandleRequestBodyAndCompileRequestDelegateForJson>b__2>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 18:26:20.599 +00:00 [INF] Request finished HTTP/1.1 POST https://localhost:9999/products - 500 0 null 151.8871ms
2025-01-22 18:26:21.899 +00:00 [INF] Request starting HTTP/1.1 POST https://localhost:9999/products - application/json 183
2025-01-22 18:26:21.899 +00:00 [INF] Executing endpoint 'HTTP: POST /products'
2025-01-22 18:26:21.901 +00:00 [INF] CreateProduct start.Handle called with {"Name":"Product Soft Drinks","Category":["h1","h2"],"Description":"Description Product Hello","ImageFile":"ImageFile of Product Hello","Price":9999,"$type":"CreateProductCommand"}
2025-01-22 18:26:21.903 +00:00 [INF] Start
2025-01-22 18:26:21.985 +00:00 [INF] Executed endpoint 'HTTP: POST /products'
2025-01-22 18:26:21.986 +00:00 [ERR] Connection id "0HN9R28MDJ5RM", Request id "0HN9R28MDJ5RM:00000003": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Internal.Sessions.DocumentSessionBase.SaveChangesAsync(CancellationToken token)
   at CatalogApi.Products.CreateProduct.CreateProductCommandHandler.Handle(CreateProductCommand command, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductHandle.cs:line 30
   at CatalogApi.Products.CreateProduct.CreateProductEndpoint.<AddRoutes>b__2_0(CreateProductRequest request, ISender sender) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductEndpoint.cs:line 19
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<>c__DisplayClass102_2.<<HandleRequestBodyAndCompileRequestDelegateForJson>b__2>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 18:26:22.011 +00:00 [INF] Request finished HTTP/1.1 POST https://localhost:9999/products - 500 0 null 111.9404ms
2025-01-22 18:26:23.474 +00:00 [INF] Request starting HTTP/1.1 POST https://localhost:9999/products - application/json 183
2025-01-22 18:26:23.474 +00:00 [INF] Executing endpoint 'HTTP: POST /products'
2025-01-22 18:26:23.475 +00:00 [INF] CreateProduct start.Handle called with {"Name":"Product Soft Drinks","Category":["h1","h2"],"Description":"Description Product Hello","ImageFile":"ImageFile of Product Hello","Price":9999,"$type":"CreateProductCommand"}
2025-01-22 18:26:23.476 +00:00 [INF] Start
2025-01-22 18:26:23.562 +00:00 [INF] Executed endpoint 'HTTP: POST /products'
2025-01-22 18:26:23.563 +00:00 [ERR] Connection id "0HN9R28MDJ5RM", Request id "0HN9R28MDJ5RM:00000004": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Internal.Sessions.DocumentSessionBase.SaveChangesAsync(CancellationToken token)
   at CatalogApi.Products.CreateProduct.CreateProductCommandHandler.Handle(CreateProductCommand command, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductHandle.cs:line 30
   at CatalogApi.Products.CreateProduct.CreateProductEndpoint.<AddRoutes>b__2_0(CreateProductRequest request, ISender sender) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductEndpoint.cs:line 19
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<>c__DisplayClass102_2.<<HandleRequestBodyAndCompileRequestDelegateForJson>b__2>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 18:26:23.587 +00:00 [INF] Request finished HTTP/1.1 POST https://localhost:9999/products - 500 0 null 113.2762ms
2025-01-22 18:45:50.809 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead '"https://+:9999;http://+:9998"'.
2025-01-22 18:45:50.928 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 18:45:50.943 +00:00 [WRN] Overriding address(es) '"https://+:9999, http://+:9998"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 18:45:34.481 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 18:45:34.482 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 18:45:34.483 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 18:45:34.483 +00:00 [INF] Hosting environment: Production
2025-01-22 18:45:34.483 +00:00 [INF] Content root path: /app
2025-01-22 18:45:45.320 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 18:45:45.487 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:45:45.502 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:45:45.505 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 186.72ms
2025-01-22 18:45:52.208 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/ - null null
2025-01-22 18:45:52.210 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:45:52.210 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:45:52.212 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/ - 200 null text/plain; charset=utf-8 4.0296ms
2025-01-22 18:46:21.314 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead '"https://+:9999;http://+:9998"'.
2025-01-22 18:46:21.395 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 18:46:21.404 +00:00 [WRN] Overriding address(es) '"https://+:9999, http://+:9998"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 18:46:21.569 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 18:46:21.570 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 18:46:21.570 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 18:46:21.571 +00:00 [INF] Hosting environment: Production
2025-01-22 18:46:21.571 +00:00 [INF] Content root path: /app
2025-01-22 18:46:27.856 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 18:46:28.020 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:46:28.031 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:46:28.036 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 179.6173ms
2025-01-22 18:46:30.859 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 18:46:30.859 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:46:30.860 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:46:30.861 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 2.4489ms
2025-01-22 18:46:31.535 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 18:46:31.536 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:46:31.537 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:46:31.538 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 2.4792ms
2025-01-22 18:46:31.826 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 18:46:31.827 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:46:31.828 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:46:31.829 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 2.9921ms
2025-01-22 18:46:32.008 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 18:46:32.009 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:46:32.010 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:46:32.011 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 2.2882ms
2025-01-22 18:46:32.216 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 18:46:32.216 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:46:32.217 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:46:32.218 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 2.5151ms
2025-01-22 18:46:32.421 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 18:46:32.421 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:46:32.422 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:46:32.422 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 1.6923ms
2025-01-22 18:46:52.174 +00:00 [INF] Request starting HTTP/2 POST https://localhost/products - application/json 183
2025-01-22 18:46:52.177 +00:00 [INF] Executing endpoint 'HTTP: POST /products'
2025-01-22 18:46:52.645 +00:00 [INF] CreateProduct start.Handle called with {"Name":"Product Soft Drinks","Category":["h1","h2"],"Description":"Description Product Hello","ImageFile":"ImageFile of Product Hello","Price":9999,"$type":"CreateProductCommand"}
2025-01-22 18:46:52.919 +00:00 [INF] Start
2025-01-22 18:46:57.564 +00:00 [INF] Executed endpoint 'HTTP: POST /products'
2025-01-22 18:46:57.570 +00:00 [ERR] Connection id "0HN9R2KA5A3BI", Request id "0HN9R2KA5A3BI:00000001": An unhandled exception was thrown by the application.
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:2345
 ---> System.Net.Sockets.SocketException (111): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|213_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|33_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|42_0(Boolean async, CancellationToken cancellationToken)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.executeMigration(ISchemaObject[] schemaObjects, CancellationToken ct)
   at Weasel.Core.Migrations.DatabaseBase`1.generateOrUpdateFeature(Type featureType, IFeatureSchema feature, CancellationToken token, Boolean skipPostProcessing)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Weasel.Core.Migrations.DatabaseBase`1.ensureStorageExistsAsync(IList`1 types, Type featureType, CancellationToken token)
   at Marten.Internal.Sessions.DocumentSessionBase.SaveChangesAsync(CancellationToken token)
   at CatalogApi.Products.CreateProduct.CreateProductCommandHandler.Handle(CreateProductCommand command, CancellationToken cancellationToken) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductHandle.cs:line 30
   at CatalogApi.Products.CreateProduct.CreateProductEndpoint.<AddRoutes>b__2_0(CreateProductRequest request, ISender sender) in C:\Projects\.net-core8_Microservices\core8-microservices\src\Services\Catalog\CatalogApi\Products\CreateProduct\CreateProductEndpoint.cs:line 19
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.ExecuteTaskResult[T](Task`1 task, HttpContext httpContext)
   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<>c__DisplayClass102_2.<<HandleRequestBodyAndCompileRequestDelegateForJson>b__2>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2025-01-22 18:46:57.596 +00:00 [INF] Request finished HTTP/2 POST https://localhost/products - 500 0 null 5417.4697ms
2025-01-22 18:47:32.165 +00:00 [WRN] Overriding HTTP_PORTS '8080' and HTTPS_PORTS ''. Binding to values defined by URLS instead '"https://+:9999;http://+:9998"'.
2025-01-22 18:47:32.272 +00:00 [WRN] The WebRootPath was not found: /app/wwwroot. Static files may be unavailable.
2025-01-22 18:47:32.283 +00:00 [WRN] Overriding address(es) '"https://+:9999, http://+:9998"'. Binding to endpoints defined via IConfiguration and/or UseKestrel() instead.
2025-01-22 18:47:32.587 +00:00 [INF] Now listening on: http://0.0.0.0:8080
2025-01-22 18:47:32.589 +00:00 [INF] Now listening on: https://0.0.0.0:8081
2025-01-22 18:47:32.589 +00:00 [INF] Application started. Press Ctrl+C to shut down.
2025-01-22 18:47:32.590 +00:00 [INF] Hosting environment: Production
2025-01-22 18:47:32.590 +00:00 [INF] Content root path: /app
2025-01-22 18:47:44.789 +00:00 [INF] Request starting HTTP/2 GET https://localhost:9999/ - null null
2025-01-22 18:47:44.940 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:47:44.945 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:47:44.948 +00:00 [INF] Request finished HTTP/2 GET https://localhost:9999/ - 200 null text/plain; charset=utf-8 159.5321ms
2025-01-22 18:48:18.325 +00:00 [INF] Request starting HTTP/2 POST https://localhost/products - application/json 183
2025-01-22 18:48:18.329 +00:00 [INF] Executing endpoint 'HTTP: POST /products'
2025-01-22 18:48:18.504 +00:00 [INF] CreateProduct start.Handle called with {"Name":"Product Soft Drinks","Category":["h1","h2"],"Description":"Description Product Hello","ImageFile":"ImageFile of Product Hello","Price":9999,"$type":"CreateProductCommand"}
2025-01-22 18:48:18.828 +00:00 [INF] Start
2025-01-22 18:48:23.608 +00:00 [INF] Batch execution completed (duration=40ms): ["\nSELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"]
2025-01-22 18:48:23.616 +00:00 [INF] Executed schema update SQL:
CREATE
OR REPLACE FUNCTION public.mt_immutable_timestamp(value text) RETURNS timestamp without time zone LANGUAGE sql IMMUTABLE AS
$function$
select value::timestamp

$function$;


CREATE
OR REPLACE FUNCTION public.mt_immutable_timestamptz(value text) RETURNS timestamp with time zone LANGUAGE sql IMMUTABLE AS
$function$
select value::timestamptz

$function$;


CREATE
OR REPLACE FUNCTION public.mt_immutable_time(value text) RETURNS time without time zone LANGUAGE sql IMMUTABLE AS
$function$
select value::time

$function$;


CREATE
OR REPLACE FUNCTION public.mt_immutable_date(value text) RETURNS date LANGUAGE sql IMMUTABLE AS
$function$
select value::date

$function$;


CREATE
OR REPLACE FUNCTION public.mt_grams_vector(text)
        RETURNS tsvector
        LANGUAGE plpgsql
        IMMUTABLE STRICT
AS $function$
BEGIN
RETURN (SELECT array_to_string(public.mt_grams_array($1), ' ') ::tsvector);
END
$function$;


CREATE
OR REPLACE FUNCTION public.mt_grams_query(text)
        RETURNS tsquery
        LANGUAGE plpgsql
        IMMUTABLE STRICT
AS $function$
BEGIN
RETURN (SELECT array_to_string(public.mt_grams_array($1), ' & ') ::tsquery);
END
$function$;


CREATE
OR REPLACE FUNCTION public.mt_grams_array(words text)
        RETURNS text[]
        LANGUAGE plpgsql
        IMMUTABLE STRICT
AS $function$
        DECLARE
result text[];
        DECLARE
word text;
        DECLARE
clean_word text;
BEGIN
                FOREACH
word IN ARRAY string_to_array(words, ' ')
                LOOP
                     clean_word = regexp_replace(word, '[^a-zA-Z0-9]+', '','g');
FOR i IN 1 .. length(clean_word)
                     LOOP
                         result := result || quote_literal(substr(lower(clean_word), i, 1));
                         result
:= result || quote_literal(substr(lower(clean_word), i, 2));
                         result
:= result || quote_literal(substr(lower(clean_word), i, 3));
END LOOP;
END LOOP;

RETURN ARRAY(SELECT DISTINCT e FROM unnest(result) AS a(e) ORDER BY e);
END;
$function$;


CREATE OR REPLACE FUNCTION public.mt_jsonb_append(jsonb, text[], jsonb, boolean)
    RETURNS jsonb
    LANGUAGE plpgsql
AS $function$
DECLARE
    retval ALIAS FOR $1;
    location ALIAS FOR $2;
    val ALIAS FOR $3;
    if_not_exists ALIAS FOR $4;
    tmp_value jsonb;
BEGIN
    tmp_value = retval #> location;
    IF tmp_value IS NOT NULL AND jsonb_typeof(tmp_value) = 'array' THEN
        CASE
            WHEN NOT if_not_exists THEN
                retval = jsonb_set(retval, location, tmp_value || val, FALSE);
            WHEN jsonb_typeof(val) = 'object' AND NOT tmp_value @> jsonb_build_array(val) THEN
                retval = jsonb_set(retval, location, tmp_value || val, FALSE);
            WHEN jsonb_typeof(val) <> 'object' AND NOT tmp_value @> val THEN
                retval = jsonb_set(retval, location, tmp_value || val, FALSE);
            ELSE NULL;
            END CASE;
    END IF;
    RETURN retval;
END;
$function$;


CREATE OR REPLACE FUNCTION public.mt_jsonb_copy(jsonb, text[], text[])
    RETURNS jsonb
    LANGUAGE plpgsql
AS $function$
DECLARE
    retval ALIAS FOR $1;
    src_path ALIAS FOR $2;
    dst_path ALIAS FOR $3;
    tmp_value jsonb;
BEGIN
    tmp_value = retval #> src_path;
    retval = public.mt_jsonb_fix_null_parent(retval, dst_path);
    RETURN jsonb_set(retval, dst_path, tmp_value::jsonb, TRUE);
END;
$function$;


CREATE OR REPLACE FUNCTION public.mt_jsonb_duplicate(jsonb, text[], jsonb)
RETURNS jsonb
LANGUAGE plpgsql
AS $function$
DECLARE
    retval ALIAS FOR $1;
    location ALIAS FOR $2;
    targets ALIAS FOR $3;
    tmp_value jsonb;
    target_path text[];
    target text;
BEGIN
    FOR target IN SELECT jsonb_array_elements_text(targets)
    LOOP
        target_path = public.mt_jsonb_path_to_array(target, '\.');
        retval = public.mt_jsonb_copy(retval, location, target_path);
    END LOOP;

    RETURN retval;
END;
$function$;


CREATE OR REPLACE FUNCTION public.mt_jsonb_fix_null_parent(jsonb, text[])
    RETURNS jsonb
    LANGUAGE plpgsql
AS $function$
DECLARE
retval ALIAS FOR $1;
    dst_path ALIAS FOR $2;
    dst_path_segment text[] = ARRAY[]::text[];
    dst_path_array_length integer;
    i integer = 1;
BEGIN
    dst_path_array_length = array_length(dst_path, 1);
    WHILE i <=(dst_path_array_length - 1)
    LOOP
        dst_path_segment = dst_path_segment || ARRAY[dst_path[i]];
        IF retval #> dst_path_segment = 'null'::jsonb THEN
            retval = jsonb_set(retval, dst_path_segment, '{}'::jsonb, TRUE);
        END IF;
        i = i + 1;
    END LOOP;

    RETURN retval;
END;
$function$;


CREATE OR REPLACE FUNCTION public.mt_jsonb_increment(jsonb, text[], numeric)
    RETURNS jsonb
    LANGUAGE plpgsql
AS $function$
DECLARE
retval ALIAS FOR $1;
    location ALIAS FOR $2;
    increment_value ALIAS FOR $3;
    tmp_value jsonb;
BEGIN
    tmp_value = retval #> location;
    IF tmp_value IS NULL THEN
        tmp_value = to_jsonb(0);
END IF;

RETURN jsonb_set(retval, location, to_jsonb(tmp_value::numeric + increment_value), TRUE);
END;
$function$;


CREATE OR REPLACE FUNCTION public.mt_jsonb_insert(jsonb, text[], jsonb, integer, boolean)
    RETURNS jsonb
    LANGUAGE plpgsql
AS $function$
DECLARE
    retval ALIAS FOR $1;
    location ALIAS FOR $2;
    val ALIAS FOR $3;
    elm_index ALIAS FOR $4;
    if_not_exists ALIAS FOR $5;
    tmp_value jsonb;
BEGIN
    tmp_value = retval #> location;
    IF tmp_value IS NOT NULL AND jsonb_typeof(tmp_value) = 'array' THEN
        IF elm_index IS NULL THEN
            elm_index = jsonb_array_length(tmp_value) + 1;
        END IF;
        CASE
            WHEN NOT if_not_exists THEN
                retval = jsonb_insert(retval, location || elm_index::text, val);
            WHEN jsonb_typeof(val) = 'object' AND NOT tmp_value @> jsonb_build_array(val) THEN
                retval = jsonb_insert(retval, location || elm_index::text, val);
            WHEN jsonb_typeof(val) <> 'object' AND NOT tmp_value @> val THEN
                retval = jsonb_insert(retval, location || elm_index::text, val);
            ELSE NULL;
        END CASE;
    END IF;
    RETURN retval;
END;
$function$;


CREATE OR REPLACE FUNCTION public.mt_jsonb_move(jsonb, text[], text)
    RETURNS jsonb
    LANGUAGE plpgsql
AS $function$
DECLARE
    retval ALIAS FOR $1;
    src_path ALIAS FOR $2;
    dst_name ALIAS FOR $3;
    dst_path text[];
    tmp_value jsonb;
BEGIN
    tmp_value = retval #> src_path;
    retval = retval #- src_path;
    dst_path = src_path;
    dst_path[array_length(dst_path, 1)] = dst_name;
    retval = public.mt_jsonb_fix_null_parent(retval, dst_path);
    RETURN jsonb_set(retval, dst_path, tmp_value, TRUE);
END;
$function$;


CREATE OR REPLACE FUNCTION public.mt_jsonb_path_to_array(text, character)
    RETURNS text[]
    LANGUAGE plpgsql
AS $function$
DECLARE
    location ALIAS FOR $1;
    regex_pattern ALIAS FOR $2;
BEGIN
RETURN regexp_split_to_array(location, regex_pattern)::text[];
END;
$function$;


CREATE OR REPLACE FUNCTION public.mt_jsonb_remove(jsonb, text[], jsonb)
    RETURNS jsonb
    LANGUAGE plpgsql
AS $function$
DECLARE
    retval ALIAS FOR $1;
    location ALIAS FOR $2;
    val ALIAS FOR $3;
    tmp_value jsonb;
BEGIN
    tmp_value = retval #> location;
    IF tmp_value IS NOT NULL AND jsonb_typeof(tmp_value) = 'array' THEN
        tmp_value =(SELECT jsonb_agg(elem)
        FROM jsonb_array_elements(tmp_value) AS elem
        WHERE elem <> val);

        IF tmp_value IS NULL THEN
            tmp_value = '[]'::jsonb;
        END IF;
    END IF;
    RETURN jsonb_set(retval, location, tmp_value, FALSE);
END;
$function$;


CREATE OR REPLACE FUNCTION public.mt_jsonb_patch(jsonb, jsonb)
    RETURNS jsonb
    LANGUAGE plpgsql
AS $function$
DECLARE
    retval ALIAS FOR $1;
    patchset ALIAS FOR $2;
    patch jsonb;
    patch_path text[];
    value jsonb;
BEGIN
    FOR patch IN SELECT * from jsonb_array_elements(patchset)
    LOOP
        patch_path = public.mt_jsonb_path_to_array((patch->>'path')::text, '\.');

        CASE patch->>'type'
            WHEN 'set' THEN
                retval = jsonb_set(retval, patch_path,(patch->'value')::jsonb, TRUE);
        WHEN 'delete' THEN
                retval = retval#-patch_path;
        WHEN 'append' THEN
                retval = public.mt_jsonb_append(retval, patch_path,(patch->'value')::jsonb, FALSE);
        WHEN 'append_if_not_exists' THEN
                retval = public.mt_jsonb_append(retval, patch_path,(patch->'value')::jsonb, TRUE);
        WHEN 'insert' THEN
                retval = public.mt_jsonb_insert(retval, patch_path,(patch->'value')::jsonb,(patch->>'index')::integer, FALSE);
        WHEN 'insert_if_not_exists' THEN
                retval = public.mt_jsonb_insert(retval, patch_path,(patch->'value')::jsonb,(patch->>'index')::integer, TRUE);
        WHEN 'remove' THEN
                retval = public.mt_jsonb_remove(retval, patch_path,(patch->'value')::jsonb);
        WHEN 'duplicate' THEN
                retval = public.mt_jsonb_duplicate(retval, patch_path,(patch->'targets')::jsonb);
        WHEN 'rename' THEN
                retval = public.mt_jsonb_move(retval, patch_path,(patch->>'to')::text);
        WHEN 'increment' THEN
                retval = public.mt_jsonb_increment(retval, patch_path,(patch->>'increment')::numeric);
        WHEN 'increment_float' THEN
                retval = public.mt_jsonb_increment(retval, patch_path,(patch->>'increment')::numeric);
        ELSE NULL;
        END CASE;
    END LOOP;
    RETURN retval;
END;
$function$;



2025-01-22 18:48:23.642 +00:00 [INF] Batch execution completed (duration=21ms): ["CREATE\nOR REPLACE FUNCTION public.mt_immutable_timestamp(value text) RETURNS timestamp without time zone LANGUAGE sql IMMUTABLE AS\n$function$\nselect value::timestamp\n\n$function$","CREATE\nOR REPLACE FUNCTION public.mt_immutable_timestamptz(value text) RETURNS timestamp with time zone LANGUAGE sql IMMUTABLE AS\n$function$\nselect value::timestamptz\n\n$function$","CREATE\nOR REPLACE FUNCTION public.mt_immutable_time(value text) RETURNS time without time zone LANGUAGE sql IMMUTABLE AS\n$function$\nselect value::time\n\n$function$","CREATE\nOR REPLACE FUNCTION public.mt_immutable_date(value text) RETURNS date LANGUAGE sql IMMUTABLE AS\n$function$\nselect value::date\n\n$function$","CREATE\nOR REPLACE FUNCTION public.mt_grams_vector(text)\n        RETURNS tsvector\n        LANGUAGE plpgsql\n        IMMUTABLE STRICT\nAS $function$\nBEGIN\nRETURN (SELECT array_to_string(public.mt_grams_array($1), ' ') ::tsvector);\nEND\n$function$","CREATE\nOR REPLACE FUNCTION public.mt_grams_query(text)\n        RETURNS tsquery\n        LANGUAGE plpgsql\n        IMMUTABLE STRICT\nAS $function$\nBEGIN\nRETURN (SELECT array_to_string(public.mt_grams_array($1), ' & ') ::tsquery);\nEND\n$function$","CREATE\nOR REPLACE FUNCTION public.mt_grams_array(words text)\n        RETURNS text[]\n        LANGUAGE plpgsql\n        IMMUTABLE STRICT\nAS $function$\n        DECLARE\nresult text[];\n        DECLARE\nword text;\n        DECLARE\nclean_word text;\nBEGIN\n                FOREACH\nword IN ARRAY string_to_array(words, ' ')\n                LOOP\n                     clean_word = regexp_replace(word, '[^a-zA-Z0-9]+', '','g');\nFOR i IN 1 .. length(clean_word)\n                     LOOP\n                         result := result || quote_literal(substr(lower(clean_word), i, 1));\n                         result\n:= result || quote_literal(substr(lower(clean_word), i, 2));\n                         result\n:= result || quote_literal(substr(lower(clean_word), i, 3));\nEND LOOP;\nEND LOOP;\n\nRETURN ARRAY(SELECT DISTINCT e FROM unnest(result) AS a(e) ORDER BY e);\nEND;\n$function$","CREATE OR REPLACE FUNCTION public.mt_jsonb_append(jsonb, text[], jsonb, boolean)\n    RETURNS jsonb\n    LANGUAGE plpgsql\nAS $function$\nDECLARE\n    retval ALIAS FOR $1;\n    location ALIAS FOR $2;\n    val ALIAS FOR $3;\n    if_not_exists ALIAS FOR $4;\n    tmp_value jsonb;\nBEGIN\n    tmp_value = retval #> location;\n    IF tmp_value IS NOT NULL AND jsonb_typeof(tmp_value) = 'array' THEN\n        CASE\n            WHEN NOT if_not_exists THEN\n                retval = jsonb_set(retval, location, tmp_value || val, FALSE);\n            WHEN jsonb_typeof(val) = 'object' AND NOT tmp_value @> jsonb_build_array(val) THEN\n                retval = jsonb_set(retval, location, tmp_value || val, FALSE);\n            WHEN jsonb_typeof(val) <> 'object' AND NOT tmp_value @> val THEN\n                retval = jsonb_set(retval, location, tmp_value || val, FALSE);\n            ELSE NULL;\n            END CASE;\n    END IF;\n    RETURN retval;\nEND;\n$function$","CREATE OR REPLACE FUNCTION public.mt_jsonb_copy(jsonb, text[], text[])\n    RETURNS jsonb\n    LANGUAGE plpgsql\nAS $function$\nDECLARE\n    retval ALIAS FOR $1;\n    src_path ALIAS FOR $2;\n    dst_path ALIAS FOR $3;\n    tmp_value jsonb;\nBEGIN\n    tmp_value = retval #> src_path;\n    retval = public.mt_jsonb_fix_null_parent(retval, dst_path);\n    RETURN jsonb_set(retval, dst_path, tmp_value::jsonb, TRUE);\nEND;\n$function$","CREATE OR REPLACE FUNCTION public.mt_jsonb_duplicate(jsonb, text[], jsonb)\nRETURNS jsonb\nLANGUAGE plpgsql\nAS $function$\nDECLARE\n    retval ALIAS FOR $1;\n    location ALIAS FOR $2;\n    targets ALIAS FOR $3;\n    tmp_value jsonb;\n    target_path text[];\n    target text;\nBEGIN\n    FOR target IN SELECT jsonb_array_elements_text(targets)\n    LOOP\n        target_path = public.mt_jsonb_path_to_array(target, '\\.');\n        retval = public.mt_jsonb_copy(retval, location, target_path);\n    END LOOP;\n\n    RETURN retval;\nEND;\n$function$","CREATE OR REPLACE FUNCTION public.mt_jsonb_fix_null_parent(jsonb, text[])\n    RETURNS jsonb\n    LANGUAGE plpgsql\nAS $function$\nDECLARE\nretval ALIAS FOR $1;\n    dst_path ALIAS FOR $2;\n    dst_path_segment text[] = ARRAY[]::text[];\n    dst_path_array_length integer;\n    i integer = 1;\nBEGIN\n    dst_path_array_length = array_length(dst_path, 1);\n    WHILE i <=(dst_path_array_length - 1)\n    LOOP\n        dst_path_segment = dst_path_segment || ARRAY[dst_path[i]];\n        IF retval #> dst_path_segment = 'null'::jsonb THEN\n            retval = jsonb_set(retval, dst_path_segment, '{}'::jsonb, TRUE);\n        END IF;\n        i = i + 1;\n    END LOOP;\n\n    RETURN retval;\nEND;\n$function$","CREATE OR REPLACE FUNCTION public.mt_jsonb_increment(jsonb, text[], numeric)\n    RETURNS jsonb\n    LANGUAGE plpgsql\nAS $function$\nDECLARE\nretval ALIAS FOR $1;\n    location ALIAS FOR $2;\n    increment_value ALIAS FOR $3;\n    tmp_value jsonb;\nBEGIN\n    tmp_value = retval #> location;\n    IF tmp_value IS NULL THEN\n        tmp_value = to_jsonb(0);\nEND IF;\n\nRETURN jsonb_set(retval, location, to_jsonb(tmp_value::numeric + increment_value), TRUE);\nEND;\n$function$","CREATE OR REPLACE FUNCTION public.mt_jsonb_insert(jsonb, text[], jsonb, integer, boolean)\n    RETURNS jsonb\n    LANGUAGE plpgsql\nAS $function$\nDECLARE\n    retval ALIAS FOR $1;\n    location ALIAS FOR $2;\n    val ALIAS FOR $3;\n    elm_index ALIAS FOR $4;\n    if_not_exists ALIAS FOR $5;\n    tmp_value jsonb;\nBEGIN\n    tmp_value = retval #> location;\n    IF tmp_value IS NOT NULL AND jsonb_typeof(tmp_value) = 'array' THEN\n        IF elm_index IS NULL THEN\n            elm_index = jsonb_array_length(tmp_value) + 1;\n        END IF;\n        CASE\n            WHEN NOT if_not_exists THEN\n                retval = jsonb_insert(retval, location || elm_index::text, val);\n            WHEN jsonb_typeof(val) = 'object' AND NOT tmp_value @> jsonb_build_array(val) THEN\n                retval = jsonb_insert(retval, location || elm_index::text, val);\n            WHEN jsonb_typeof(val) <> 'object' AND NOT tmp_value @> val THEN\n                retval = jsonb_insert(retval, location || elm_index::text, val);\n            ELSE NULL;\n        END CASE;\n    END IF;\n    RETURN retval;\nEND;\n$function$","CREATE OR REPLACE FUNCTION public.mt_jsonb_move(jsonb, text[], text)\n    RETURNS jsonb\n    LANGUAGE plpgsql\nAS $function$\nDECLARE\n    retval ALIAS FOR $1;\n    src_path ALIAS FOR $2;\n    dst_name ALIAS FOR $3;\n    dst_path text[];\n    tmp_value jsonb;\nBEGIN\n    tmp_value = retval #> src_path;\n    retval = retval #- src_path;\n    dst_path = src_path;\n    dst_path[array_length(dst_path, 1)] = dst_name;\n    retval = public.mt_jsonb_fix_null_parent(retval, dst_path);\n    RETURN jsonb_set(retval, dst_path, tmp_value, TRUE);\nEND;\n$function$","CREATE OR REPLACE FUNCTION public.mt_jsonb_path_to_array(text, character)\n    RETURNS text[]\n    LANGUAGE plpgsql\nAS $function$\nDECLARE\n    location ALIAS FOR $1;\n    regex_pattern ALIAS FOR $2;\nBEGIN\nRETURN regexp_split_to_array(location, regex_pattern)::text[];\nEND;\n$function$","CREATE OR REPLACE FUNCTION public.mt_jsonb_remove(jsonb, text[], jsonb)\n    RETURNS jsonb\n    LANGUAGE plpgsql\nAS $function$\nDECLARE\n    retval ALIAS FOR $1;\n    location ALIAS FOR $2;\n    val ALIAS FOR $3;\n    tmp_value jsonb;\nBEGIN\n    tmp_value = retval #> location;\n    IF tmp_value IS NOT NULL AND jsonb_typeof(tmp_value) = 'array' THEN\n        tmp_value =(SELECT jsonb_agg(elem)\n        FROM jsonb_array_elements(tmp_value) AS elem\n        WHERE elem <> val);\n\n        IF tmp_value IS NULL THEN\n            tmp_value = '[]'::jsonb;\n        END IF;\n    END IF;\n    RETURN jsonb_set(retval, location, tmp_value, FALSE);\nEND;\n$function$","CREATE OR REPLACE FUNCTION public.mt_jsonb_patch(jsonb, jsonb)\n    RETURNS jsonb\n    LANGUAGE plpgsql\nAS $function$\nDECLARE\n    retval ALIAS FOR $1;\n    patchset ALIAS FOR $2;\n    patch jsonb;\n    patch_path text[];\n    value jsonb;\nBEGIN\n    FOR patch IN SELECT * from jsonb_array_elements(patchset)\n    LOOP\n        patch_path = public.mt_jsonb_path_to_array((patch->>'path')::text, '\\.');\n\n        CASE patch->>'type'\n            WHEN 'set' THEN\n                retval = jsonb_set(retval, patch_path,(patch->'value')::jsonb, TRUE);\n        WHEN 'delete' THEN\n                retval = retval#-patch_path;\n        WHEN 'append' THEN\n                retval = public.mt_jsonb_append(retval, patch_path,(patch->'value')::jsonb, FALSE);\n        WHEN 'append_if_not_exists' THEN\n                retval = public.mt_jsonb_append(retval, patch_path,(patch->'value')::jsonb, TRUE);\n        WHEN 'insert' THEN\n                retval = public.mt_jsonb_insert(retval, patch_path,(patch->'value')::jsonb,(patch->>'index')::integer, FALSE);\n        WHEN 'insert_if_not_exists' THEN\n                retval = public.mt_jsonb_insert(retval, patch_path,(patch->'value')::jsonb,(patch->>'index')::integer, TRUE);\n        WHEN 'remove' THEN\n                retval = public.mt_jsonb_remove(retval, patch_path,(patch->'value')::jsonb);\n        WHEN 'duplicate' THEN\n                retval = public.mt_jsonb_duplicate(retval, patch_path,(patch->'targets')::jsonb);\n        WHEN 'rename' THEN\n                retval = public.mt_jsonb_move(retval, patch_path,(patch->>'to')::text);\n        WHEN 'increment' THEN\n                retval = public.mt_jsonb_increment(retval, patch_path,(patch->>'increment')::numeric);\n        WHEN 'increment_float' THEN\n                retval = public.mt_jsonb_increment(retval, patch_path,(patch->>'increment')::numeric);\n        ELSE NULL;\n        END CASE;\n    END LOOP;\n    RETURN retval;\nEND;\n$function$"]
2025-01-22 18:48:23.733 +00:00 [INF] Batch execution completed (duration=62ms): ["\nselect column_name, data_type, character_maximum_length, udt_name\nfrom information_schema.columns where table_schema = $1 and table_name = $2\norder by ordinal_position","select kcu.column_name as key_column\nfrom information_schema.table_constraints tco\n         join information_schema.key_column_usage kcu\n              on kcu.constraint_name = tco.constraint_name\n                  and kcu.constraint_schema = tco.constraint_schema\n                  and kcu.constraint_name = tco.constraint_name\nwhere tco.constraint_type = 'PRIMARY KEY' and kcu.table_schema = $1 and kcu.table_name = $2\norder by kcu.ordinal_position","SELECT *\nFROM (\n    SELECT\n      R.rolname                AS user_name,\n      ns.nspname               AS schema_name,\n      pg_catalog.textin(pg_catalog.regclassout(idx.indrelid :: REGCLASS)) AS table_name,\n      i.relname                AS index_name,\n      pg_get_indexdef(i.oid) as ddl,\n      idx.indisunique          AS is_unique,\n      idx.indisprimary         AS is_primary,\n      am.amname                AS index_type,\n      idx.indkey,\n           ARRAY(\n               SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)\n               FROM\n                 generate_subscripts(idx.indkey, 1) AS k\n               ORDER BY k\n           ) AS index_keys,\n      (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,\n      idx.indpred IS NOT NULL AS is_partial\n    FROM pg_index AS idx\n      JOIN pg_class AS i\n        ON i.oid = idx.indexrelid\n      JOIN pg_am AS am\n        ON i.relam = am.oid\n      JOIN pg_namespace AS NS ON i.relnamespace = NS.OID\n      JOIN pg_roles AS R ON i.relowner = r.oid\n    WHERE\n      nspname = $1 AND\n      NOT nspname LIKE 'pg%'\n) ind\nWHERE\n      ind.table_name = $2 OR\n      ind.table_name = $3","SELECT c.conname                                     AS constraint_name,\n       c.contype                                     AS constraint_type,\n       sch.nspname                                   AS schema_name,\n       tbl.relname                                   AS table_name,\n       ARRAY_AGG(col.attname ORDER BY u.attposition) AS columns,\n       pg_get_constraintdef(c.oid)                   AS definition\nFROM pg_constraint c\n       JOIN LATERAL UNNEST(c.conkey) WITH ORDINALITY AS u(attnum, attposition) ON TRUE\n       JOIN pg_class tbl ON tbl.oid = c.conrelid\n       JOIN pg_namespace sch ON sch.oid = tbl.relnamespace\n       JOIN pg_attribute col ON (col.attrelid = tbl.oid AND col.attnum = u.attnum)\nWHERE\n\tc.contype = 'f' and\n\tsch.nspname = $1 and\n\ttbl.relname = $2\nGROUP BY constraint_name, constraint_type, schema_name, table_name, definition","SHOW max_identifier_length","select\n    col.column_name,\n    partition_strategy\nfrom\n    (select\n         partrelid,\n         partnatts,\n         case partstrat\n             when 'l' then 'list'\n             when 'h' then 'hash'\n             when 'r' then 'range' end as partition_strategy,\n         unnest(partattrs) column_index\n     from\n         pg_partitioned_table) pt\n        join\n    pg_class par\n    on\n            par.oid = pt.partrelid\n        join\n    information_schema.columns col\n    on\n                col.table_schema = par.relnamespace::regnamespace::text\n            and col.table_name = par.relname\n            and ordinal_position = pt.column_index\nwhere\n    col.table_schema = $1 and table_name = $2\norder by column_index","select pt.relname as partition_name,\n          pg_get_expr(pt.relpartbound, pt.oid, true) as partition_expression\n   from pg_class base_tb\n            join pg_inherits i on i.inhparent = base_tb.oid\n            join pg_class pt on pt.oid = i.inhrelid\n   where base_tb.relname = $1 and base_tb.relnamespace = $2::regnamespace::oid","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"]
2025-01-22 18:48:23.744 +00:00 [INF] Executed schema update SQL:
DROP TABLE IF EXISTS public.mt_doc_product CASCADE;
CREATE TABLE public.mt_doc_product (
    id                  uuid                        NOT NULL,
    data                jsonb                       NOT NULL,
    mt_last_modified    timestamp with time zone    NULL DEFAULT (transaction_timestamp()),
    mt_version          uuid                        NOT NULL DEFAULT (md5(random()::text || clock_timestamp()::text)::uuid),
    mt_dotnet_type      varchar                     NULL,
CONSTRAINT pkey_mt_doc_product_id PRIMARY KEY (id)
);

CREATE OR REPLACE FUNCTION public.mt_upsert_product(doc JSONB, docDotNetType varchar, docId uuid, docVersion uuid) RETURNS UUID LANGUAGE plpgsql SECURITY INVOKER AS $function$
DECLARE
  final_version uuid;
BEGIN
INSERT INTO public.mt_doc_product ("data", "mt_dotnet_type", "id", "mt_version", mt_last_modified) VALUES (doc, docDotNetType, docId, docVersion, transaction_timestamp())
  ON CONFLICT (id)
  DO UPDATE SET "data" = doc, "mt_dotnet_type" = docDotNetType, "mt_version" = docVersion, mt_last_modified = transaction_timestamp();

  SELECT mt_version FROM public.mt_doc_product into final_version WHERE id = docId ;
  RETURN final_version;
END;
$function$;


CREATE OR REPLACE FUNCTION public.mt_insert_product(doc JSONB, docDotNetType varchar, docId uuid, docVersion uuid) RETURNS UUID LANGUAGE plpgsql SECURITY INVOKER AS $function$
BEGIN
INSERT INTO public.mt_doc_product ("data", "mt_dotnet_type", "id", "mt_version", mt_last_modified) VALUES (doc, docDotNetType, docId, docVersion, transaction_timestamp());

  RETURN docVersion;
END;
$function$;


CREATE OR REPLACE FUNCTION public.mt_update_product(doc JSONB, docDotNetType varchar, docId uuid, docVersion uuid) RETURNS UUID LANGUAGE plpgsql SECURITY INVOKER AS $function$
DECLARE
  final_version uuid;
BEGIN
  UPDATE public.mt_doc_product SET "data" = doc, "mt_dotnet_type" = docDotNetType, "mt_version" = docVersion, mt_last_modified = transaction_timestamp() where id = docId;

  SELECT mt_version FROM public.mt_doc_product into final_version WHERE id = docId ;
  RETURN final_version;
END;
$function$;


2025-01-22 18:48:23.758 +00:00 [INF] Batch execution completed (duration=12ms): ["DROP TABLE IF EXISTS public.mt_doc_product CASCADE","CREATE TABLE public.mt_doc_product (\n    id                  uuid                        NOT NULL,\n    data                jsonb                       NOT NULL,\n    mt_last_modified    timestamp with time zone    NULL DEFAULT (transaction_timestamp()),\n    mt_version          uuid                        NOT NULL DEFAULT (md5(random()::text || clock_timestamp()::text)::uuid),\n    mt_dotnet_type      varchar                     NULL,\nCONSTRAINT pkey_mt_doc_product_id PRIMARY KEY (id)\n)","CREATE OR REPLACE FUNCTION public.mt_upsert_product(doc JSONB, docDotNetType varchar, docId uuid, docVersion uuid) RETURNS UUID LANGUAGE plpgsql SECURITY INVOKER AS $function$\nDECLARE\n  final_version uuid;\nBEGIN\nINSERT INTO public.mt_doc_product (\"data\", \"mt_dotnet_type\", \"id\", \"mt_version\", mt_last_modified) VALUES (doc, docDotNetType, docId, docVersion, transaction_timestamp())\n  ON CONFLICT (id)\n  DO UPDATE SET \"data\" = doc, \"mt_dotnet_type\" = docDotNetType, \"mt_version\" = docVersion, mt_last_modified = transaction_timestamp();\n\n  SELECT mt_version FROM public.mt_doc_product into final_version WHERE id = docId ;\n  RETURN final_version;\nEND;\n$function$","CREATE OR REPLACE FUNCTION public.mt_insert_product(doc JSONB, docDotNetType varchar, docId uuid, docVersion uuid) RETURNS UUID LANGUAGE plpgsql SECURITY INVOKER AS $function$\nBEGIN\nINSERT INTO public.mt_doc_product (\"data\", \"mt_dotnet_type\", \"id\", \"mt_version\", mt_last_modified) VALUES (doc, docDotNetType, docId, docVersion, transaction_timestamp());\n\n  RETURN docVersion;\nEND;\n$function$","CREATE OR REPLACE FUNCTION public.mt_update_product(doc JSONB, docDotNetType varchar, docId uuid, docVersion uuid) RETURNS UUID LANGUAGE plpgsql SECURITY INVOKER AS $function$\nDECLARE\n  final_version uuid;\nBEGIN\n  UPDATE public.mt_doc_product SET \"data\" = doc, \"mt_dotnet_type\" = docDotNetType, \"mt_version\" = docVersion, mt_last_modified = transaction_timestamp() where id = docId;\n\n  SELECT mt_version FROM public.mt_doc_product into final_version WHERE id = docId ;\n  RETURN final_version;\nEND;\n$function$"]
2025-01-22 18:48:23.918 +00:00 [INF] Command execution completed (duration=20ms): select public.mt_upsert_product($1,$2,$3,$4)
2025-01-22 18:48:23.942 +00:00 [INF] ENd {"Id":"01948f58-19f0-4544-a169-0099cc8d743c","Name":"Product Soft Drinks","Category":["h1","h2"],"Description":"Description Product Hello","ImageFile":"ImageFile of Product Hello","Price":9999,"$type":"Product"}
2025-01-22 18:48:23.945 +00:00 [INF] CreateProduct end.Handle called with {"Id":"01948f58-19f0-4544-a169-0099cc8d743c","$type":"CreateProductResult"}
2025-01-22 18:48:22.596 +00:00 [INF] Setting HTTP status code 201.
2025-01-22 18:48:22.607 +00:00 [INF] Writing value of type 'CreateProductResponse' as Json.
2025-01-22 18:48:24.129 +00:00 [INF] Executed endpoint 'HTTP: POST /products'
2025-01-22 18:48:24.137 +00:00 [INF] Request finished HTTP/2 POST https://localhost/products - 201 null application/json; charset=utf-8 22564.0264ms
2025-01-22 18:49:13.169 +00:00 [INF] Request starting HTTP/2 GET https://localhost/products - application/json 183
2025-01-22 18:49:13.193 +00:00 [INF] Executing endpoint 'HTTP: GET /products'
2025-01-22 18:49:13.200 +00:00 [INF] GetProductsQueryHandler.Handle called with {"$type":"GetProductsQuery"}
2025-01-22 18:49:18.598 +00:00 [INF] Command execution completed (duration=5366ms): select d.id, d.data from public.mt_doc_product as d
2025-01-22 18:49:18.643 +00:00 [INF] Setting HTTP status code 200.
2025-01-22 18:49:18.652 +00:00 [INF] Writing value of type 'GetProductsResponse' as Json.
2025-01-22 18:49:18.665 +00:00 [INF] Executed endpoint 'HTTP: GET /products'
2025-01-22 18:49:18.667 +00:00 [INF] Request finished HTTP/2 GET https://localhost/products - 200 null application/json; charset=utf-8 5499.2392ms
2025-01-22 18:52:28.936 +00:00 [INF] Request starting HTTP/1.1 GET http://localhost:9998/ - null null
2025-01-22 18:52:28.959 +00:00 [INF] Executing endpoint 'HTTP: GET /'
2025-01-22 18:52:28.964 +00:00 [INF] Executed endpoint 'HTTP: GET /'
2025-01-22 18:52:28.965 +00:00 [INF] Request finished HTTP/1.1 GET http://localhost:9998/ - 200 null text/plain; charset=utf-8 29.766ms
