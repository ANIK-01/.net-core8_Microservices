{"Timestamp":"2025-01-22T01:35:32.7549373+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:5050","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T01:35:32.7967949+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5000","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T01:35:32.8139042+06:00","Level":"Information","MessageTemplate":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","Properties":{"EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}}
{"Timestamp":"2025-01-22T01:35:32.9892954+06:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T01:35:32.9907846+06:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T01:35:32.9919847+06:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"C:\\Projects\\.net-core8_Microservices\\core8-microservices\\src\\Services\\Catalog\\CatalogApi","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T01:35:33.7056564+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"5dd0219d81ba9d53cb3cb6d405817d1d","SpanId":"80e621ae11fe5817","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QAB2MJ99M:00000001","RequestPath":"/","ConnectionId":"0HN9QAB2MJ99M"}}
{"Timestamp":"2025-01-22T01:35:34.1453328+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"5dd0219d81ba9d53cb3cb6d405817d1d","SpanId":"80e621ae11fe5817","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QAB2MJ99M:00000001","RequestPath":"/","ConnectionId":"0HN9QAB2MJ99M"}}
{"Timestamp":"2025-01-22T01:35:34.1523591+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"5dd0219d81ba9d53cb3cb6d405817d1d","SpanId":"80e621ae11fe5817","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QAB2MJ99M:00000001","RequestPath":"/","ConnectionId":"0HN9QAB2MJ99M"}}
{"Timestamp":"2025-01-22T01:35:34.1585708+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"5dd0219d81ba9d53cb3cb6d405817d1d","SpanId":"80e621ae11fe5817","Properties":{"ElapsedMilliseconds":466.446,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QAB2MJ99M:00000001","RequestPath":"/","ConnectionId":"0HN9QAB2MJ99M"}}
{"Timestamp":"2025-01-22T01:35:45.2150170+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":183,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:35:45.2189717+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"EndpointName":"HTTP: POST /products","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:36:04.3248116+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"BatchCommands":["\nSELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":51,"ConnectorId":168,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:36:04.4400647+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"BatchCommands":["\nselect column_name, data_type, character_maximum_length, udt_name\nfrom information_schema.columns where table_schema = $1 and table_name = $2\norder by ordinal_position","select kcu.column_name as key_column\nfrom information_schema.table_constraints tco\n         join information_schema.key_column_usage kcu\n              on kcu.constraint_name = tco.constraint_name\n                  and kcu.constraint_schema = tco.constraint_schema\n                  and kcu.constraint_name = tco.constraint_name\nwhere tco.constraint_type = 'PRIMARY KEY' and kcu.table_schema = $1 and kcu.table_name = $2\norder by kcu.ordinal_position","SELECT *\nFROM (\n    SELECT\n      R.rolname                AS user_name,\n      ns.nspname               AS schema_name,\n      pg_catalog.textin(pg_catalog.regclassout(idx.indrelid :: REGCLASS)) AS table_name,\n      i.relname                AS index_name,\n      pg_get_indexdef(i.oid) as ddl,\n      idx.indisunique          AS is_unique,\n      idx.indisprimary         AS is_primary,\n      am.amname                AS index_type,\n      idx.indkey,\n           ARRAY(\n               SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)\n               FROM\n                 generate_subscripts(idx.indkey, 1) AS k\n               ORDER BY k\n           ) AS index_keys,\n      (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,\n      idx.indpred IS NOT NULL AS is_partial\n    FROM pg_index AS idx\n      JOIN pg_class AS i\n        ON i.oid = idx.indexrelid\n      JOIN pg_am AS am\n        ON i.relam = am.oid\n      JOIN pg_namespace AS NS ON i.relnamespace = NS.OID\n      JOIN pg_roles AS R ON i.relowner = r.oid\n    WHERE\n      nspname = $1 AND\n      NOT nspname LIKE 'pg%'\n) ind\nWHERE\n      ind.table_name = $2 OR\n      ind.table_name = $3","SELECT c.conname                                     AS constraint_name,\n       c.contype                                     AS constraint_type,\n       sch.nspname                                   AS schema_name,\n       tbl.relname                                   AS table_name,\n       ARRAY_AGG(col.attname ORDER BY u.attposition) AS columns,\n       pg_get_constraintdef(c.oid)                   AS definition\nFROM pg_constraint c\n       JOIN LATERAL UNNEST(c.conkey) WITH ORDINALITY AS u(attnum, attposition) ON TRUE\n       JOIN pg_class tbl ON tbl.oid = c.conrelid\n       JOIN pg_namespace sch ON sch.oid = tbl.relnamespace\n       JOIN pg_attribute col ON (col.attrelid = tbl.oid AND col.attnum = u.attnum)\nWHERE\n\tc.contype = 'f' and\n\tsch.nspname = $1 and\n\ttbl.relname = $2\nGROUP BY constraint_name, constraint_type, schema_name, table_name, definition","SHOW max_identifier_length","select\n    col.column_name,\n    partition_strategy\nfrom\n    (select\n         partrelid,\n         partnatts,\n         case partstrat\n             when 'l' then 'list'\n             when 'h' then 'hash'\n             when 'r' then 'range' end as partition_strategy,\n         unnest(partattrs) column_index\n     from\n         pg_partitioned_table) pt\n        join\n    pg_class par\n    on\n            par.oid = pt.partrelid\n        join\n    information_schema.columns col\n    on\n                col.table_schema = par.relnamespace::regnamespace::text\n            and col.table_name = par.relname\n            and ordinal_position = pt.column_index\nwhere\n    col.table_schema = $1 and table_name = $2\norder by column_index","select pt.relname as partition_name,\n          pg_get_expr(pt.relpartbound, pt.oid, true) as partition_expression\n   from pg_class base_tb\n            join pg_inherits i on i.inhparent = base_tb.oid\n            join pg_class pt on pt.oid = i.inhrelid\n   where base_tb.relname = $1 and base_tb.relnamespace = $2::regnamespace::oid","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":66,"ConnectorId":168,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:36:04.5972535+06:00","Level":"Information","MessageTemplate":"Command execution completed (duration={DurationMs}ms): {CommandText}","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"CommandText":"select public.mt_upsert_product($1,$2,$3,$4)","DurationMs":28,"ConnectorId":168,"EventId":{"Id":2001,"Name":"CommandExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:36:18.0223899+06:00","Level":"Information","MessageTemplate":"Setting HTTP status code {StatusCode}.","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"StatusCode":201,"EventId":{"Id":1,"Name":"WritingResultAsStatusCode"},"SourceContext":"Microsoft.AspNetCore.Http.Result.CreatedResult","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:36:18.0474825+06:00","Level":"Information","MessageTemplate":"Writing value of type '{Type}' as Json.","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"Type":"CreateProductResponse","EventId":{"Id":3,"Name":"WritingResultAsJson"},"SourceContext":"Microsoft.AspNetCore.Http.Result.CreatedResult","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:36:20.4119661+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"EndpointName":"HTTP: POST /products","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:36:20.4180041+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"ElapsedMilliseconds":35203.057,"StatusCode":201,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"POST","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
