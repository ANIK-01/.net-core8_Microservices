{"Timestamp":"2025-01-22T01:35:32.7549373+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:5050","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T01:35:32.7967949+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5000","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T01:35:32.8139042+06:00","Level":"Information","MessageTemplate":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","Properties":{"EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}}
{"Timestamp":"2025-01-22T01:35:32.9892954+06:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T01:35:32.9907846+06:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T01:35:32.9919847+06:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"C:\\Projects\\.net-core8_Microservices\\core8-microservices\\src\\Services\\Catalog\\CatalogApi","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T01:35:33.7056564+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"5dd0219d81ba9d53cb3cb6d405817d1d","SpanId":"80e621ae11fe5817","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QAB2MJ99M:00000001","RequestPath":"/","ConnectionId":"0HN9QAB2MJ99M"}}
{"Timestamp":"2025-01-22T01:35:34.1453328+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"5dd0219d81ba9d53cb3cb6d405817d1d","SpanId":"80e621ae11fe5817","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QAB2MJ99M:00000001","RequestPath":"/","ConnectionId":"0HN9QAB2MJ99M"}}
{"Timestamp":"2025-01-22T01:35:34.1523591+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"5dd0219d81ba9d53cb3cb6d405817d1d","SpanId":"80e621ae11fe5817","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QAB2MJ99M:00000001","RequestPath":"/","ConnectionId":"0HN9QAB2MJ99M"}}
{"Timestamp":"2025-01-22T01:35:34.1585708+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"5dd0219d81ba9d53cb3cb6d405817d1d","SpanId":"80e621ae11fe5817","Properties":{"ElapsedMilliseconds":466.446,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QAB2MJ99M:00000001","RequestPath":"/","ConnectionId":"0HN9QAB2MJ99M"}}
{"Timestamp":"2025-01-22T01:35:45.2150170+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":183,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:35:45.2189717+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"EndpointName":"HTTP: POST /products","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:36:04.3248116+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"BatchCommands":["\nSELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":51,"ConnectorId":168,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:36:04.4400647+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"BatchCommands":["\nselect column_name, data_type, character_maximum_length, udt_name\nfrom information_schema.columns where table_schema = $1 and table_name = $2\norder by ordinal_position","select kcu.column_name as key_column\nfrom information_schema.table_constraints tco\n         join information_schema.key_column_usage kcu\n              on kcu.constraint_name = tco.constraint_name\n                  and kcu.constraint_schema = tco.constraint_schema\n                  and kcu.constraint_name = tco.constraint_name\nwhere tco.constraint_type = 'PRIMARY KEY' and kcu.table_schema = $1 and kcu.table_name = $2\norder by kcu.ordinal_position","SELECT *\nFROM (\n    SELECT\n      R.rolname                AS user_name,\n      ns.nspname               AS schema_name,\n      pg_catalog.textin(pg_catalog.regclassout(idx.indrelid :: REGCLASS)) AS table_name,\n      i.relname                AS index_name,\n      pg_get_indexdef(i.oid) as ddl,\n      idx.indisunique          AS is_unique,\n      idx.indisprimary         AS is_primary,\n      am.amname                AS index_type,\n      idx.indkey,\n           ARRAY(\n               SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)\n               FROM\n                 generate_subscripts(idx.indkey, 1) AS k\n               ORDER BY k\n           ) AS index_keys,\n      (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,\n      idx.indpred IS NOT NULL AS is_partial\n    FROM pg_index AS idx\n      JOIN pg_class AS i\n        ON i.oid = idx.indexrelid\n      JOIN pg_am AS am\n        ON i.relam = am.oid\n      JOIN pg_namespace AS NS ON i.relnamespace = NS.OID\n      JOIN pg_roles AS R ON i.relowner = r.oid\n    WHERE\n      nspname = $1 AND\n      NOT nspname LIKE 'pg%'\n) ind\nWHERE\n      ind.table_name = $2 OR\n      ind.table_name = $3","SELECT c.conname                                     AS constraint_name,\n       c.contype                                     AS constraint_type,\n       sch.nspname                                   AS schema_name,\n       tbl.relname                                   AS table_name,\n       ARRAY_AGG(col.attname ORDER BY u.attposition) AS columns,\n       pg_get_constraintdef(c.oid)                   AS definition\nFROM pg_constraint c\n       JOIN LATERAL UNNEST(c.conkey) WITH ORDINALITY AS u(attnum, attposition) ON TRUE\n       JOIN pg_class tbl ON tbl.oid = c.conrelid\n       JOIN pg_namespace sch ON sch.oid = tbl.relnamespace\n       JOIN pg_attribute col ON (col.attrelid = tbl.oid AND col.attnum = u.attnum)\nWHERE\n\tc.contype = 'f' and\n\tsch.nspname = $1 and\n\ttbl.relname = $2\nGROUP BY constraint_name, constraint_type, schema_name, table_name, definition","SHOW max_identifier_length","select\n    col.column_name,\n    partition_strategy\nfrom\n    (select\n         partrelid,\n         partnatts,\n         case partstrat\n             when 'l' then 'list'\n             when 'h' then 'hash'\n             when 'r' then 'range' end as partition_strategy,\n         unnest(partattrs) column_index\n     from\n         pg_partitioned_table) pt\n        join\n    pg_class par\n    on\n            par.oid = pt.partrelid\n        join\n    information_schema.columns col\n    on\n                col.table_schema = par.relnamespace::regnamespace::text\n            and col.table_name = par.relname\n            and ordinal_position = pt.column_index\nwhere\n    col.table_schema = $1 and table_name = $2\norder by column_index","select pt.relname as partition_name,\n          pg_get_expr(pt.relpartbound, pt.oid, true) as partition_expression\n   from pg_class base_tb\n            join pg_inherits i on i.inhparent = base_tb.oid\n            join pg_class pt on pt.oid = i.inhrelid\n   where base_tb.relname = $1 and base_tb.relnamespace = $2::regnamespace::oid","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":66,"ConnectorId":168,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:36:04.5972535+06:00","Level":"Information","MessageTemplate":"Command execution completed (duration={DurationMs}ms): {CommandText}","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"CommandText":"select public.mt_upsert_product($1,$2,$3,$4)","DurationMs":28,"ConnectorId":168,"EventId":{"Id":2001,"Name":"CommandExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:36:18.0223899+06:00","Level":"Information","MessageTemplate":"Setting HTTP status code {StatusCode}.","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"StatusCode":201,"EventId":{"Id":1,"Name":"WritingResultAsStatusCode"},"SourceContext":"Microsoft.AspNetCore.Http.Result.CreatedResult","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:36:18.0474825+06:00","Level":"Information","MessageTemplate":"Writing value of type '{Type}' as Json.","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"Type":"CreateProductResponse","EventId":{"Id":3,"Name":"WritingResultAsJson"},"SourceContext":"Microsoft.AspNetCore.Http.Result.CreatedResult","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:36:20.4119661+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"EndpointName":"HTTP: POST /products","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T01:36:20.4180041+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"7fb9bee851c24841eff5d34d163d2bd6","SpanId":"9a1161fc90de585f","Properties":{"ElapsedMilliseconds":35203.057,"StatusCode":201,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"POST","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QAB2MJ99O:00000001","RequestPath":"/products","ConnectionId":"0HN9QAB2MJ99O"}}
{"Timestamp":"2025-01-22T12:03:03.8447004+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:5050","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:03:03.9664477+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5000","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:03:04.0022028+06:00","Level":"Information","MessageTemplate":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","Properties":{"EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}}
{"Timestamp":"2025-01-22T12:03:04.4906988+06:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:03:04.4941307+06:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:03:04.4964911+06:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\projects_all\\TestProjects\\.net-core8_Microservices\\core8-microservices\\src\\Services\\Catalog\\CatalogApi","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:03:08.5895920+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"4d3f24a0e07b5d263cfaa35d3230b4ee","SpanId":"d7f25760d247977d","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QL9NJJ3LL:00000001","RequestPath":"/","ConnectionId":"0HN9QL9NJJ3LL"}}
{"Timestamp":"2025-01-22T12:03:09.5590959+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"4d3f24a0e07b5d263cfaa35d3230b4ee","SpanId":"d7f25760d247977d","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QL9NJJ3LL:00000001","RequestPath":"/","ConnectionId":"0HN9QL9NJJ3LL"}}
{"Timestamp":"2025-01-22T12:03:09.6764843+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"4d3f24a0e07b5d263cfaa35d3230b4ee","SpanId":"d7f25760d247977d","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QL9NJJ3LL:00000001","RequestPath":"/","ConnectionId":"0HN9QL9NJJ3LL"}}
{"Timestamp":"2025-01-22T12:03:09.6978433+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"4d3f24a0e07b5d263cfaa35d3230b4ee","SpanId":"d7f25760d247977d","Properties":{"ElapsedMilliseconds":1141.3393,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QL9NJJ3LL:00000001","RequestPath":"/","ConnectionId":"0HN9QL9NJJ3LL"}}
{"Timestamp":"2025-01-22T12:03:09.8544386+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"d137f18beec3e63bbaacd39158557f36","SpanId":"8484ffcc3234d95c","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/favicon.ico","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QL9NJJ3LL:00000003","RequestPath":"/favicon.ico","ConnectionId":"0HN9QL9NJJ3LL"}}
{"Timestamp":"2025-01-22T12:03:09.9294520+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"d137f18beec3e63bbaacd39158557f36","SpanId":"8484ffcc3234d95c","Properties":{"ElapsedMilliseconds":77.7135,"StatusCode":404,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/favicon.ico","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QL9NJJ3LL:00000003","RequestPath":"/favicon.ico","ConnectionId":"0HN9QL9NJJ3LL"}}
{"Timestamp":"2025-01-22T12:03:09.9563766+06:00","Level":"Information","MessageTemplate":"Request reached the end of the middleware pipeline without being handled by application code. Request path: {Method} {Scheme}://{Host}{PathBase}{Path}, Response status code: {StatusCode}","TraceId":"d137f18beec3e63bbaacd39158557f36","SpanId":"8484ffcc3234d95c","Properties":{"Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/favicon.ico","StatusCode":404,"EventId":{"Id":16},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QL9NJJ3LL:00000003","RequestPath":"/favicon.ico","ConnectionId":"0HN9QL9NJJ3LL"}}
{"Timestamp":"2025-01-22T12:04:04.5921691+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"a4dd7120efd848ae12eee72871f479d5","SpanId":"56af30c2c2fbf660","Properties":{"Protocol":"HTTP/1.1","Method":"POST","ContentType":null,"ContentLength":0,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QL9NJJ3LN:00000001","RequestPath":"/products","ConnectionId":"0HN9QL9NJJ3LN"}}
{"Timestamp":"2025-01-22T12:04:04.5991987+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"a4dd7120efd848ae12eee72871f479d5","SpanId":"56af30c2c2fbf660","Properties":{"EndpointName":"HTTP: POST /products","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QL9NJJ3LN:00000001","RequestPath":"/products","ConnectionId":"0HN9QL9NJJ3LN"}}
{"Timestamp":"2025-01-22T12:04:04.6066746+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"a4dd7120efd848ae12eee72871f479d5","SpanId":"56af30c2c2fbf660","Properties":{"EndpointName":"HTTP: POST /products","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QL9NJJ3LN:00000001","RequestPath":"/products","ConnectionId":"0HN9QL9NJJ3LN"}}
{"Timestamp":"2025-01-22T12:04:04.6116777+06:00","Level":"Error","MessageTemplate":"An unhandled exception has occurred while executing the request.","TraceId":"a4dd7120efd848ae12eee72871f479d5","SpanId":"56af30c2c2fbf660","Exception":"Microsoft.AspNetCore.Http.BadHttpRequestException: Implicit body inferred for parameter \"request\" but no body was provided. Did you mean to use a Service instead?\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.Log.ImplicitBodyNotProvided(HttpContext httpContext, String parameterName, Boolean shouldThrow)\r\n   at lambda_method22(Closure, Object, HttpContext, Object)\r\n   at Microsoft.AspNetCore.Http.RequestDelegateFactory.<>c__DisplayClass102_2.<<HandleRequestBodyAndCompileRequestDelegateForJson>b__2>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)","Properties":{"EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HN9QL9NJJ3LN:00000001","RequestPath":"/products","ConnectionId":"0HN9QL9NJJ3LN"}}
{"Timestamp":"2025-01-22T12:04:04.6505922+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"a4dd7120efd848ae12eee72871f479d5","SpanId":"56af30c2c2fbf660","Properties":{"ElapsedMilliseconds":58.8817,"StatusCode":400,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"POST","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QL9NJJ3LN:00000001","RequestPath":"/products","ConnectionId":"0HN9QL9NJJ3LN"}}
{"Timestamp":"2025-01-22T12:04:14.8734888+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"74975ef4e6feb28d8afa2a7f2f2e6adc","SpanId":"a66ae1055c0928a3","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QL9NJJ3LN:00000002","RequestPath":"/products","ConnectionId":"0HN9QL9NJJ3LN"}}
{"Timestamp":"2025-01-22T12:04:14.8813688+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"74975ef4e6feb28d8afa2a7f2f2e6adc","SpanId":"a66ae1055c0928a3","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QL9NJJ3LN:00000002","RequestPath":"/products","ConnectionId":"0HN9QL9NJJ3LN"}}
{"Timestamp":"2025-01-22T12:04:19.9663104+06:00","Level":"Information","MessageTemplate":"GetProductsQueryHandler.Handle called with {@query}","TraceId":"74975ef4e6feb28d8afa2a7f2f2e6adc","SpanId":"a66ae1055c0928a3","Properties":{"query":{"_typeTag":"GetProductsQuery"},"SourceContext":"CatalogApi.Products.GetProduct.GetProductsQueryHandler","RequestId":"0HN9QL9NJJ3LN:00000002","RequestPath":"/products","ConnectionId":"0HN9QL9NJJ3LN"}}
{"Timestamp":"2025-01-22T12:04:28.3846261+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"74975ef4e6feb28d8afa2a7f2f2e6adc","SpanId":"a66ae1055c0928a3","Properties":{"BatchCommands":["\nSELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":170,"ConnectorId":33,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QL9NJJ3LN:00000002","RequestPath":"/products","ConnectionId":"0HN9QL9NJJ3LN"}}
{"Timestamp":"2025-01-22T12:04:28.6876982+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"74975ef4e6feb28d8afa2a7f2f2e6adc","SpanId":"a66ae1055c0928a3","Properties":{"BatchCommands":["\nselect column_name, data_type, character_maximum_length, udt_name\nfrom information_schema.columns where table_schema = $1 and table_name = $2\norder by ordinal_position","select kcu.column_name as key_column\nfrom information_schema.table_constraints tco\n         join information_schema.key_column_usage kcu\n              on kcu.constraint_name = tco.constraint_name\n                  and kcu.constraint_schema = tco.constraint_schema\n                  and kcu.constraint_name = tco.constraint_name\nwhere tco.constraint_type = 'PRIMARY KEY' and kcu.table_schema = $1 and kcu.table_name = $2\norder by kcu.ordinal_position","SELECT *\nFROM (\n    SELECT\n      R.rolname                AS user_name,\n      ns.nspname               AS schema_name,\n      pg_catalog.textin(pg_catalog.regclassout(idx.indrelid :: REGCLASS)) AS table_name,\n      i.relname                AS index_name,\n      pg_get_indexdef(i.oid) as ddl,\n      idx.indisunique          AS is_unique,\n      idx.indisprimary         AS is_primary,\n      am.amname                AS index_type,\n      idx.indkey,\n           ARRAY(\n               SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)\n               FROM\n                 generate_subscripts(idx.indkey, 1) AS k\n               ORDER BY k\n           ) AS index_keys,\n      (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,\n      idx.indpred IS NOT NULL AS is_partial\n    FROM pg_index AS idx\n      JOIN pg_class AS i\n        ON i.oid = idx.indexrelid\n      JOIN pg_am AS am\n        ON i.relam = am.oid\n      JOIN pg_namespace AS NS ON i.relnamespace = NS.OID\n      JOIN pg_roles AS R ON i.relowner = r.oid\n    WHERE\n      nspname = $1 AND\n      NOT nspname LIKE 'pg%'\n) ind\nWHERE\n      ind.table_name = $2 OR\n      ind.table_name = $3","SELECT c.conname                                     AS constraint_name,\n       c.contype                                     AS constraint_type,\n       sch.nspname                                   AS schema_name,\n       tbl.relname                                   AS table_name,\n       ARRAY_AGG(col.attname ORDER BY u.attposition) AS columns,\n       pg_get_constraintdef(c.oid)                   AS definition\nFROM pg_constraint c\n       JOIN LATERAL UNNEST(c.conkey) WITH ORDINALITY AS u(attnum, attposition) ON TRUE\n       JOIN pg_class tbl ON tbl.oid = c.conrelid\n       JOIN pg_namespace sch ON sch.oid = tbl.relnamespace\n       JOIN pg_attribute col ON (col.attrelid = tbl.oid AND col.attnum = u.attnum)\nWHERE\n\tc.contype = 'f' and\n\tsch.nspname = $1 and\n\ttbl.relname = $2\nGROUP BY constraint_name, constraint_type, schema_name, table_name, definition","SHOW max_identifier_length","select\n    col.column_name,\n    partition_strategy\nfrom\n    (select\n         partrelid,\n         partnatts,\n         case partstrat\n             when 'l' then 'list'\n             when 'h' then 'hash'\n             when 'r' then 'range' end as partition_strategy,\n         unnest(partattrs) column_index\n     from\n         pg_partitioned_table) pt\n        join\n    pg_class par\n    on\n            par.oid = pt.partrelid\n        join\n    information_schema.columns col\n    on\n                col.table_schema = par.relnamespace::regnamespace::text\n            and col.table_name = par.relname\n            and ordinal_position = pt.column_index\nwhere\n    col.table_schema = $1 and table_name = $2\norder by column_index","select pt.relname as partition_name,\n          pg_get_expr(pt.relpartbound, pt.oid, true) as partition_expression\n   from pg_class base_tb\n            join pg_inherits i on i.inhparent = base_tb.oid\n            join pg_class pt on pt.oid = i.inhrelid\n   where base_tb.relname = $1 and base_tb.relnamespace = $2::regnamespace::oid","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":158,"ConnectorId":33,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QL9NJJ3LN:00000002","RequestPath":"/products","ConnectionId":"0HN9QL9NJJ3LN"}}
{"Timestamp":"2025-01-22T12:04:29.1059962+06:00","Level":"Information","MessageTemplate":"Command execution completed (duration={DurationMs}ms): {CommandText}","TraceId":"74975ef4e6feb28d8afa2a7f2f2e6adc","SpanId":"a66ae1055c0928a3","Properties":{"CommandText":"select d.id, d.data from public.mt_doc_product as d","DurationMs":325,"ConnectorId":33,"EventId":{"Id":2001,"Name":"CommandExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QL9NJJ3LN:00000002","RequestPath":"/products","ConnectionId":"0HN9QL9NJJ3LN"}}
{"Timestamp":"2025-01-22T12:04:29.3388091+06:00","Level":"Information","MessageTemplate":"Setting HTTP status code {StatusCode}.","TraceId":"74975ef4e6feb28d8afa2a7f2f2e6adc","SpanId":"a66ae1055c0928a3","Properties":{"StatusCode":200,"EventId":{"Id":1,"Name":"WritingResultAsStatusCode"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QL9NJJ3LN:00000002","RequestPath":"/products","ConnectionId":"0HN9QL9NJJ3LN"}}
{"Timestamp":"2025-01-22T12:04:29.3569294+06:00","Level":"Information","MessageTemplate":"Writing value of type '{Type}' as Json.","TraceId":"74975ef4e6feb28d8afa2a7f2f2e6adc","SpanId":"a66ae1055c0928a3","Properties":{"Type":"GetProductsResponse","EventId":{"Id":3,"Name":"WritingResultAsJson"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QL9NJJ3LN:00000002","RequestPath":"/products","ConnectionId":"0HN9QL9NJJ3LN"}}
{"Timestamp":"2025-01-22T12:04:29.4169906+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"74975ef4e6feb28d8afa2a7f2f2e6adc","SpanId":"a66ae1055c0928a3","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QL9NJJ3LN:00000002","RequestPath":"/products","ConnectionId":"0HN9QL9NJJ3LN"}}
{"Timestamp":"2025-01-22T12:04:29.4281255+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"74975ef4e6feb28d8afa2a7f2f2e6adc","SpanId":"a66ae1055c0928a3","Properties":{"ElapsedMilliseconds":14554.6668,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QL9NJJ3LN:00000002","RequestPath":"/products","ConnectionId":"0HN9QL9NJJ3LN"}}
{"Timestamp":"2025-01-22T12:27:37.5137832+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:5050","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:27:37.6327004+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5000","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:27:37.6750096+06:00","Level":"Information","MessageTemplate":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","Properties":{"EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}}
{"Timestamp":"2025-01-22T12:27:38.2307067+06:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:27:38.2350314+06:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:27:38.2363090+06:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\projects_all\\TestProjects\\.net-core8_Microservices\\core8-microservices\\src\\Services\\Catalog\\CatalogApi","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:27:41.1621570+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"e691af12b62320eb98b3950319290d74","SpanId":"86624dcc1b200d11","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QLNEPGFQ0:00000001","RequestPath":"/","ConnectionId":"0HN9QLNEPGFQ0"}}
{"Timestamp":"2025-01-22T12:27:41.6186526+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"e691af12b62320eb98b3950319290d74","SpanId":"86624dcc1b200d11","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QLNEPGFQ0:00000001","RequestPath":"/","ConnectionId":"0HN9QLNEPGFQ0"}}
{"Timestamp":"2025-01-22T12:27:41.6373162+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"e691af12b62320eb98b3950319290d74","SpanId":"86624dcc1b200d11","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QLNEPGFQ0:00000001","RequestPath":"/","ConnectionId":"0HN9QLNEPGFQ0"}}
{"Timestamp":"2025-01-22T12:27:41.6471200+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"e691af12b62320eb98b3950319290d74","SpanId":"86624dcc1b200d11","Properties":{"ElapsedMilliseconds":580.3447,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QLNEPGFQ0:00000001","RequestPath":"/","ConnectionId":"0HN9QLNEPGFQ0"}}
{"Timestamp":"2025-01-22T12:27:56.9653455+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"ba894dea09179052b7a83856d0da61bb","SpanId":"3106229891a3fa9c","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QLNEPGFQ2:00000001","RequestPath":"/products","ConnectionId":"0HN9QLNEPGFQ2"}}
{"Timestamp":"2025-01-22T12:27:56.9715831+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"ba894dea09179052b7a83856d0da61bb","SpanId":"3106229891a3fa9c","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QLNEPGFQ2:00000001","RequestPath":"/products","ConnectionId":"0HN9QLNEPGFQ2"}}
{"Timestamp":"2025-01-22T12:28:00.9638914+06:00","Level":"Information","MessageTemplate":"GetProductsQueryHandler.Handle called with {@query}","TraceId":"ba894dea09179052b7a83856d0da61bb","SpanId":"3106229891a3fa9c","Properties":{"query":{"_typeTag":"GetProductsQuery"},"SourceContext":"CatalogApi.Products.GetProduct.GetProductsQueryHandler","RequestId":"0HN9QLNEPGFQ2:00000001","RequestPath":"/products","ConnectionId":"0HN9QLNEPGFQ2"}}
{"Timestamp":"2025-01-22T12:28:08.9302663+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"ba894dea09179052b7a83856d0da61bb","SpanId":"3106229891a3fa9c","Properties":{"BatchCommands":["\nSELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":128,"ConnectorId":57,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QLNEPGFQ2:00000001","RequestPath":"/products","ConnectionId":"0HN9QLNEPGFQ2"}}
{"Timestamp":"2025-01-22T12:28:09.1723129+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"ba894dea09179052b7a83856d0da61bb","SpanId":"3106229891a3fa9c","Properties":{"BatchCommands":["\nselect column_name, data_type, character_maximum_length, udt_name\nfrom information_schema.columns where table_schema = $1 and table_name = $2\norder by ordinal_position","select kcu.column_name as key_column\nfrom information_schema.table_constraints tco\n         join information_schema.key_column_usage kcu\n              on kcu.constraint_name = tco.constraint_name\n                  and kcu.constraint_schema = tco.constraint_schema\n                  and kcu.constraint_name = tco.constraint_name\nwhere tco.constraint_type = 'PRIMARY KEY' and kcu.table_schema = $1 and kcu.table_name = $2\norder by kcu.ordinal_position","SELECT *\nFROM (\n    SELECT\n      R.rolname                AS user_name,\n      ns.nspname               AS schema_name,\n      pg_catalog.textin(pg_catalog.regclassout(idx.indrelid :: REGCLASS)) AS table_name,\n      i.relname                AS index_name,\n      pg_get_indexdef(i.oid) as ddl,\n      idx.indisunique          AS is_unique,\n      idx.indisprimary         AS is_primary,\n      am.amname                AS index_type,\n      idx.indkey,\n           ARRAY(\n               SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)\n               FROM\n                 generate_subscripts(idx.indkey, 1) AS k\n               ORDER BY k\n           ) AS index_keys,\n      (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,\n      idx.indpred IS NOT NULL AS is_partial\n    FROM pg_index AS idx\n      JOIN pg_class AS i\n        ON i.oid = idx.indexrelid\n      JOIN pg_am AS am\n        ON i.relam = am.oid\n      JOIN pg_namespace AS NS ON i.relnamespace = NS.OID\n      JOIN pg_roles AS R ON i.relowner = r.oid\n    WHERE\n      nspname = $1 AND\n      NOT nspname LIKE 'pg%'\n) ind\nWHERE\n      ind.table_name = $2 OR\n      ind.table_name = $3","SELECT c.conname                                     AS constraint_name,\n       c.contype                                     AS constraint_type,\n       sch.nspname                                   AS schema_name,\n       tbl.relname                                   AS table_name,\n       ARRAY_AGG(col.attname ORDER BY u.attposition) AS columns,\n       pg_get_constraintdef(c.oid)                   AS definition\nFROM pg_constraint c\n       JOIN LATERAL UNNEST(c.conkey) WITH ORDINALITY AS u(attnum, attposition) ON TRUE\n       JOIN pg_class tbl ON tbl.oid = c.conrelid\n       JOIN pg_namespace sch ON sch.oid = tbl.relnamespace\n       JOIN pg_attribute col ON (col.attrelid = tbl.oid AND col.attnum = u.attnum)\nWHERE\n\tc.contype = 'f' and\n\tsch.nspname = $1 and\n\ttbl.relname = $2\nGROUP BY constraint_name, constraint_type, schema_name, table_name, definition","SHOW max_identifier_length","select\n    col.column_name,\n    partition_strategy\nfrom\n    (select\n         partrelid,\n         partnatts,\n         case partstrat\n             when 'l' then 'list'\n             when 'h' then 'hash'\n             when 'r' then 'range' end as partition_strategy,\n         unnest(partattrs) column_index\n     from\n         pg_partitioned_table) pt\n        join\n    pg_class par\n    on\n            par.oid = pt.partrelid\n        join\n    information_schema.columns col\n    on\n                col.table_schema = par.relnamespace::regnamespace::text\n            and col.table_name = par.relname\n            and ordinal_position = pt.column_index\nwhere\n    col.table_schema = $1 and table_name = $2\norder by column_index","select pt.relname as partition_name,\n          pg_get_expr(pt.relpartbound, pt.oid, true) as partition_expression\n   from pg_class base_tb\n            join pg_inherits i on i.inhparent = base_tb.oid\n            join pg_class pt on pt.oid = i.inhrelid\n   where base_tb.relname = $1 and base_tb.relnamespace = $2::regnamespace::oid","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":132,"ConnectorId":57,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QLNEPGFQ2:00000001","RequestPath":"/products","ConnectionId":"0HN9QLNEPGFQ2"}}
{"Timestamp":"2025-01-22T12:28:09.5951332+06:00","Level":"Information","MessageTemplate":"Command execution completed (duration={DurationMs}ms): {CommandText}","TraceId":"ba894dea09179052b7a83856d0da61bb","SpanId":"3106229891a3fa9c","Properties":{"CommandText":"select d.id, d.data from public.mt_doc_product as d","DurationMs":334,"ConnectorId":57,"EventId":{"Id":2001,"Name":"CommandExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QLNEPGFQ2:00000001","RequestPath":"/products","ConnectionId":"0HN9QLNEPGFQ2"}}
{"Timestamp":"2025-01-22T12:28:09.8942685+06:00","Level":"Information","MessageTemplate":"Setting HTTP status code {StatusCode}.","TraceId":"ba894dea09179052b7a83856d0da61bb","SpanId":"3106229891a3fa9c","Properties":{"StatusCode":200,"EventId":{"Id":1,"Name":"WritingResultAsStatusCode"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QLNEPGFQ2:00000001","RequestPath":"/products","ConnectionId":"0HN9QLNEPGFQ2"}}
{"Timestamp":"2025-01-22T12:28:09.9523802+06:00","Level":"Information","MessageTemplate":"Writing value of type '{Type}' as Json.","TraceId":"ba894dea09179052b7a83856d0da61bb","SpanId":"3106229891a3fa9c","Properties":{"Type":"GetProductsResponse","EventId":{"Id":3,"Name":"WritingResultAsJson"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QLNEPGFQ2:00000001","RequestPath":"/products","ConnectionId":"0HN9QLNEPGFQ2"}}
{"Timestamp":"2025-01-22T12:28:10.1231231+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"ba894dea09179052b7a83856d0da61bb","SpanId":"3106229891a3fa9c","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QLNEPGFQ2:00000001","RequestPath":"/products","ConnectionId":"0HN9QLNEPGFQ2"}}
{"Timestamp":"2025-01-22T12:28:10.1397438+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"ba894dea09179052b7a83856d0da61bb","SpanId":"3106229891a3fa9c","Properties":{"ElapsedMilliseconds":13173.5515,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QLNEPGFQ2:00000001","RequestPath":"/products","ConnectionId":"0HN9QLNEPGFQ2"}}
{"Timestamp":"2025-01-22T12:39:57.4318755+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:5050","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:39:57.4998422+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5000","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:39:57.5188355+06:00","Level":"Information","MessageTemplate":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","Properties":{"EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}}
{"Timestamp":"2025-01-22T12:39:57.8450236+06:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:39:57.8694897+06:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:39:57.9642354+06:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\projects_all\\TestProjects\\.net-core8_Microservices\\core8-microservices\\src\\Services\\Catalog\\CatalogApi","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:39:58.7584439+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"c59fb8caebfeaee89b134822cca042b0","SpanId":"15821335aec14835","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QLUB9HGJQ:00000001","RequestPath":"/","ConnectionId":"0HN9QLUB9HGJQ"}}
{"Timestamp":"2025-01-22T12:39:59.0237569+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"c59fb8caebfeaee89b134822cca042b0","SpanId":"15821335aec14835","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QLUB9HGJQ:00000001","RequestPath":"/","ConnectionId":"0HN9QLUB9HGJQ"}}
{"Timestamp":"2025-01-22T12:39:59.0327479+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"c59fb8caebfeaee89b134822cca042b0","SpanId":"15821335aec14835","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QLUB9HGJQ:00000001","RequestPath":"/","ConnectionId":"0HN9QLUB9HGJQ"}}
{"Timestamp":"2025-01-22T12:39:59.0390829+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"c59fb8caebfeaee89b134822cca042b0","SpanId":"15821335aec14835","Properties":{"ElapsedMilliseconds":303.0929,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QLUB9HGJQ:00000001","RequestPath":"/","ConnectionId":"0HN9QLUB9HGJQ"}}
{"Timestamp":"2025-01-22T12:40:16.8513398+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"603715662afd28de93a47498a32d7cef","SpanId":"cb864bb03f88ea62","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QLUB9HGJS:00000001","RequestPath":"/products","ConnectionId":"0HN9QLUB9HGJS"}}
{"Timestamp":"2025-01-22T12:40:16.8564274+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"603715662afd28de93a47498a32d7cef","SpanId":"cb864bb03f88ea62","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QLUB9HGJS:00000001","RequestPath":"/products","ConnectionId":"0HN9QLUB9HGJS"}}
{"Timestamp":"2025-01-22T12:40:19.5549907+06:00","Level":"Information","MessageTemplate":"GetProductsQueryHandler.Handle called with {@query}","TraceId":"603715662afd28de93a47498a32d7cef","SpanId":"cb864bb03f88ea62","Properties":{"query":{"_typeTag":"GetProductsQuery"},"SourceContext":"CatalogApi.Products.GetProduct.GetProductsQueryHandler","RequestId":"0HN9QLUB9HGJS:00000001","RequestPath":"/products","ConnectionId":"0HN9QLUB9HGJS"}}
{"Timestamp":"2025-01-22T12:40:26.5514185+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"603715662afd28de93a47498a32d7cef","SpanId":"cb864bb03f88ea62","Properties":{"BatchCommands":["\nSELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":96,"ConnectorId":33,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QLUB9HGJS:00000001","RequestPath":"/products","ConnectionId":"0HN9QLUB9HGJS"}}
{"Timestamp":"2025-01-22T12:40:26.7622465+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"603715662afd28de93a47498a32d7cef","SpanId":"cb864bb03f88ea62","Properties":{"BatchCommands":["\nselect column_name, data_type, character_maximum_length, udt_name\nfrom information_schema.columns where table_schema = $1 and table_name = $2\norder by ordinal_position","select kcu.column_name as key_column\nfrom information_schema.table_constraints tco\n         join information_schema.key_column_usage kcu\n              on kcu.constraint_name = tco.constraint_name\n                  and kcu.constraint_schema = tco.constraint_schema\n                  and kcu.constraint_name = tco.constraint_name\nwhere tco.constraint_type = 'PRIMARY KEY' and kcu.table_schema = $1 and kcu.table_name = $2\norder by kcu.ordinal_position","SELECT *\nFROM (\n    SELECT\n      R.rolname                AS user_name,\n      ns.nspname               AS schema_name,\n      pg_catalog.textin(pg_catalog.regclassout(idx.indrelid :: REGCLASS)) AS table_name,\n      i.relname                AS index_name,\n      pg_get_indexdef(i.oid) as ddl,\n      idx.indisunique          AS is_unique,\n      idx.indisprimary         AS is_primary,\n      am.amname                AS index_type,\n      idx.indkey,\n           ARRAY(\n               SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)\n               FROM\n                 generate_subscripts(idx.indkey, 1) AS k\n               ORDER BY k\n           ) AS index_keys,\n      (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,\n      idx.indpred IS NOT NULL AS is_partial\n    FROM pg_index AS idx\n      JOIN pg_class AS i\n        ON i.oid = idx.indexrelid\n      JOIN pg_am AS am\n        ON i.relam = am.oid\n      JOIN pg_namespace AS NS ON i.relnamespace = NS.OID\n      JOIN pg_roles AS R ON i.relowner = r.oid\n    WHERE\n      nspname = $1 AND\n      NOT nspname LIKE 'pg%'\n) ind\nWHERE\n      ind.table_name = $2 OR\n      ind.table_name = $3","SELECT c.conname                                     AS constraint_name,\n       c.contype                                     AS constraint_type,\n       sch.nspname                                   AS schema_name,\n       tbl.relname                                   AS table_name,\n       ARRAY_AGG(col.attname ORDER BY u.attposition) AS columns,\n       pg_get_constraintdef(c.oid)                   AS definition\nFROM pg_constraint c\n       JOIN LATERAL UNNEST(c.conkey) WITH ORDINALITY AS u(attnum, attposition) ON TRUE\n       JOIN pg_class tbl ON tbl.oid = c.conrelid\n       JOIN pg_namespace sch ON sch.oid = tbl.relnamespace\n       JOIN pg_attribute col ON (col.attrelid = tbl.oid AND col.attnum = u.attnum)\nWHERE\n\tc.contype = 'f' and\n\tsch.nspname = $1 and\n\ttbl.relname = $2\nGROUP BY constraint_name, constraint_type, schema_name, table_name, definition","SHOW max_identifier_length","select\n    col.column_name,\n    partition_strategy\nfrom\n    (select\n         partrelid,\n         partnatts,\n         case partstrat\n             when 'l' then 'list'\n             when 'h' then 'hash'\n             when 'r' then 'range' end as partition_strategy,\n         unnest(partattrs) column_index\n     from\n         pg_partitioned_table) pt\n        join\n    pg_class par\n    on\n            par.oid = pt.partrelid\n        join\n    information_schema.columns col\n    on\n                col.table_schema = par.relnamespace::regnamespace::text\n            and col.table_name = par.relname\n            and ordinal_position = pt.column_index\nwhere\n    col.table_schema = $1 and table_name = $2\norder by column_index","select pt.relname as partition_name,\n          pg_get_expr(pt.relpartbound, pt.oid, true) as partition_expression\n   from pg_class base_tb\n            join pg_inherits i on i.inhparent = base_tb.oid\n            join pg_class pt on pt.oid = i.inhrelid\n   where base_tb.relname = $1 and base_tb.relnamespace = $2::regnamespace::oid","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":114,"ConnectorId":33,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QLUB9HGJS:00000001","RequestPath":"/products","ConnectionId":"0HN9QLUB9HGJS"}}
{"Timestamp":"2025-01-22T12:40:27.0671500+06:00","Level":"Information","MessageTemplate":"Command execution completed (duration={DurationMs}ms): {CommandText}","TraceId":"603715662afd28de93a47498a32d7cef","SpanId":"cb864bb03f88ea62","Properties":{"CommandText":"select d.id, d.data from public.mt_doc_product as d","DurationMs":238,"ConnectorId":33,"EventId":{"Id":2001,"Name":"CommandExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QLUB9HGJS:00000001","RequestPath":"/products","ConnectionId":"0HN9QLUB9HGJS"}}
{"Timestamp":"2025-01-22T12:40:27.2511696+06:00","Level":"Information","MessageTemplate":"Setting HTTP status code {StatusCode}.","TraceId":"603715662afd28de93a47498a32d7cef","SpanId":"cb864bb03f88ea62","Properties":{"StatusCode":200,"EventId":{"Id":1,"Name":"WritingResultAsStatusCode"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QLUB9HGJS:00000001","RequestPath":"/products","ConnectionId":"0HN9QLUB9HGJS"}}
{"Timestamp":"2025-01-22T12:40:27.2702055+06:00","Level":"Information","MessageTemplate":"Writing value of type '{Type}' as Json.","TraceId":"603715662afd28de93a47498a32d7cef","SpanId":"cb864bb03f88ea62","Properties":{"Type":"GetProductsResponse","EventId":{"Id":3,"Name":"WritingResultAsJson"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QLUB9HGJS:00000001","RequestPath":"/products","ConnectionId":"0HN9QLUB9HGJS"}}
{"Timestamp":"2025-01-22T12:40:27.3150811+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"603715662afd28de93a47498a32d7cef","SpanId":"cb864bb03f88ea62","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QLUB9HGJS:00000001","RequestPath":"/products","ConnectionId":"0HN9QLUB9HGJS"}}
{"Timestamp":"2025-01-22T12:40:27.3244179+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"603715662afd28de93a47498a32d7cef","SpanId":"cb864bb03f88ea62","Properties":{"ElapsedMilliseconds":10473.1995,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QLUB9HGJS:00000001","RequestPath":"/products","ConnectionId":"0HN9QLUB9HGJS"}}
{"Timestamp":"2025-01-22T12:44:54.1547728+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:5050","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:44:54.2741745+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5000","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:44:54.2935232+06:00","Level":"Information","MessageTemplate":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","Properties":{"EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}}
{"Timestamp":"2025-01-22T12:44:54.5541534+06:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:44:54.5564267+06:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:44:54.5580083+06:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\projects_all\\TestProjects\\.net-core8_Microservices\\core8-microservices\\src\\Services\\Catalog\\CatalogApi","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:44:55.3403396+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"5bf0b51ccf71295dd9e070bf1d1f401d","SpanId":"defcf61648141bda","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QM13LLKVK:00000001","RequestPath":"/","ConnectionId":"0HN9QM13LLKVK"}}
{"Timestamp":"2025-01-22T12:44:55.5893217+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"5bf0b51ccf71295dd9e070bf1d1f401d","SpanId":"defcf61648141bda","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QM13LLKVK:00000001","RequestPath":"/","ConnectionId":"0HN9QM13LLKVK"}}
{"Timestamp":"2025-01-22T12:44:55.5987758+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"5bf0b51ccf71295dd9e070bf1d1f401d","SpanId":"defcf61648141bda","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QM13LLKVK:00000001","RequestPath":"/","ConnectionId":"0HN9QM13LLKVK"}}
{"Timestamp":"2025-01-22T12:44:55.6061258+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"5bf0b51ccf71295dd9e070bf1d1f401d","SpanId":"defcf61648141bda","Properties":{"ElapsedMilliseconds":281.4868,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QM13LLKVK:00000001","RequestPath":"/","ConnectionId":"0HN9QM13LLKVK"}}
{"Timestamp":"2025-01-22T12:48:03.0051848+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"25e0fd3f484f7d28d429b22f11ec0e50","SpanId":"0108a84b84eb4f8a","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QM13LLKVM:00000001","RequestPath":"/products","ConnectionId":"0HN9QM13LLKVM"}}
{"Timestamp":"2025-01-22T12:48:03.0133877+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"25e0fd3f484f7d28d429b22f11ec0e50","SpanId":"0108a84b84eb4f8a","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QM13LLKVM:00000001","RequestPath":"/products","ConnectionId":"0HN9QM13LLKVM"}}
{"Timestamp":"2025-01-22T12:48:05.1283520+06:00","Level":"Information","MessageTemplate":"GetProductsQueryHandler.Handle called with {@query}","TraceId":"25e0fd3f484f7d28d429b22f11ec0e50","SpanId":"0108a84b84eb4f8a","Properties":{"query":{"_typeTag":"GetProductsQuery"},"SourceContext":"CatalogApi.Products.GetProduct.GetProductsQueryHandler","RequestId":"0HN9QM13LLKVM:00000001","RequestPath":"/products","ConnectionId":"0HN9QM13LLKVM"}}
{"Timestamp":"2025-01-22T12:48:12.6285112+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"25e0fd3f484f7d28d429b22f11ec0e50","SpanId":"0108a84b84eb4f8a","Properties":{"BatchCommands":["\nSELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":105,"ConnectorId":42,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QM13LLKVM:00000001","RequestPath":"/products","ConnectionId":"0HN9QM13LLKVM"}}
{"Timestamp":"2025-01-22T12:48:12.8438947+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"25e0fd3f484f7d28d429b22f11ec0e50","SpanId":"0108a84b84eb4f8a","Properties":{"BatchCommands":["\nselect column_name, data_type, character_maximum_length, udt_name\nfrom information_schema.columns where table_schema = $1 and table_name = $2\norder by ordinal_position","select kcu.column_name as key_column\nfrom information_schema.table_constraints tco\n         join information_schema.key_column_usage kcu\n              on kcu.constraint_name = tco.constraint_name\n                  and kcu.constraint_schema = tco.constraint_schema\n                  and kcu.constraint_name = tco.constraint_name\nwhere tco.constraint_type = 'PRIMARY KEY' and kcu.table_schema = $1 and kcu.table_name = $2\norder by kcu.ordinal_position","SELECT *\nFROM (\n    SELECT\n      R.rolname                AS user_name,\n      ns.nspname               AS schema_name,\n      pg_catalog.textin(pg_catalog.regclassout(idx.indrelid :: REGCLASS)) AS table_name,\n      i.relname                AS index_name,\n      pg_get_indexdef(i.oid) as ddl,\n      idx.indisunique          AS is_unique,\n      idx.indisprimary         AS is_primary,\n      am.amname                AS index_type,\n      idx.indkey,\n           ARRAY(\n               SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)\n               FROM\n                 generate_subscripts(idx.indkey, 1) AS k\n               ORDER BY k\n           ) AS index_keys,\n      (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,\n      idx.indpred IS NOT NULL AS is_partial\n    FROM pg_index AS idx\n      JOIN pg_class AS i\n        ON i.oid = idx.indexrelid\n      JOIN pg_am AS am\n        ON i.relam = am.oid\n      JOIN pg_namespace AS NS ON i.relnamespace = NS.OID\n      JOIN pg_roles AS R ON i.relowner = r.oid\n    WHERE\n      nspname = $1 AND\n      NOT nspname LIKE 'pg%'\n) ind\nWHERE\n      ind.table_name = $2 OR\n      ind.table_name = $3","SELECT c.conname                                     AS constraint_name,\n       c.contype                                     AS constraint_type,\n       sch.nspname                                   AS schema_name,\n       tbl.relname                                   AS table_name,\n       ARRAY_AGG(col.attname ORDER BY u.attposition) AS columns,\n       pg_get_constraintdef(c.oid)                   AS definition\nFROM pg_constraint c\n       JOIN LATERAL UNNEST(c.conkey) WITH ORDINALITY AS u(attnum, attposition) ON TRUE\n       JOIN pg_class tbl ON tbl.oid = c.conrelid\n       JOIN pg_namespace sch ON sch.oid = tbl.relnamespace\n       JOIN pg_attribute col ON (col.attrelid = tbl.oid AND col.attnum = u.attnum)\nWHERE\n\tc.contype = 'f' and\n\tsch.nspname = $1 and\n\ttbl.relname = $2\nGROUP BY constraint_name, constraint_type, schema_name, table_name, definition","SHOW max_identifier_length","select\n    col.column_name,\n    partition_strategy\nfrom\n    (select\n         partrelid,\n         partnatts,\n         case partstrat\n             when 'l' then 'list'\n             when 'h' then 'hash'\n             when 'r' then 'range' end as partition_strategy,\n         unnest(partattrs) column_index\n     from\n         pg_partitioned_table) pt\n        join\n    pg_class par\n    on\n            par.oid = pt.partrelid\n        join\n    information_schema.columns col\n    on\n                col.table_schema = par.relnamespace::regnamespace::text\n            and col.table_name = par.relname\n            and ordinal_position = pt.column_index\nwhere\n    col.table_schema = $1 and table_name = $2\norder by column_index","select pt.relname as partition_name,\n          pg_get_expr(pt.relpartbound, pt.oid, true) as partition_expression\n   from pg_class base_tb\n            join pg_inherits i on i.inhparent = base_tb.oid\n            join pg_class pt on pt.oid = i.inhrelid\n   where base_tb.relname = $1 and base_tb.relnamespace = $2::regnamespace::oid","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":121,"ConnectorId":42,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QM13LLKVM:00000001","RequestPath":"/products","ConnectionId":"0HN9QM13LLKVM"}}
{"Timestamp":"2025-01-22T12:48:13.2628585+06:00","Level":"Information","MessageTemplate":"Command execution completed (duration={DurationMs}ms): {CommandText}","TraceId":"25e0fd3f484f7d28d429b22f11ec0e50","SpanId":"0108a84b84eb4f8a","Properties":{"CommandText":"select d.id, d.data from public.mt_doc_product as d","DurationMs":316,"ConnectorId":42,"EventId":{"Id":2001,"Name":"CommandExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QM13LLKVM:00000001","RequestPath":"/products","ConnectionId":"0HN9QM13LLKVM"}}
{"Timestamp":"2025-01-22T12:48:13.4961362+06:00","Level":"Information","MessageTemplate":"Setting HTTP status code {StatusCode}.","TraceId":"25e0fd3f484f7d28d429b22f11ec0e50","SpanId":"0108a84b84eb4f8a","Properties":{"StatusCode":200,"EventId":{"Id":1,"Name":"WritingResultAsStatusCode"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QM13LLKVM:00000001","RequestPath":"/products","ConnectionId":"0HN9QM13LLKVM"}}
{"Timestamp":"2025-01-22T12:48:13.5177404+06:00","Level":"Information","MessageTemplate":"Writing value of type '{Type}' as Json.","TraceId":"25e0fd3f484f7d28d429b22f11ec0e50","SpanId":"0108a84b84eb4f8a","Properties":{"Type":"GetProductsResponse","EventId":{"Id":3,"Name":"WritingResultAsJson"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QM13LLKVM:00000001","RequestPath":"/products","ConnectionId":"0HN9QM13LLKVM"}}
{"Timestamp":"2025-01-22T12:48:13.5665379+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"25e0fd3f484f7d28d429b22f11ec0e50","SpanId":"0108a84b84eb4f8a","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QM13LLKVM:00000001","RequestPath":"/products","ConnectionId":"0HN9QM13LLKVM"}}
{"Timestamp":"2025-01-22T12:48:13.5794013+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"25e0fd3f484f7d28d429b22f11ec0e50","SpanId":"0108a84b84eb4f8a","Properties":{"ElapsedMilliseconds":10575.1979,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QM13LLKVM:00000001","RequestPath":"/products","ConnectionId":"0HN9QM13LLKVM"}}
{"Timestamp":"2025-01-22T12:55:49.6851265+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:5050","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:55:49.7513463+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5000","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:55:49.7734377+06:00","Level":"Information","MessageTemplate":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","Properties":{"EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}}
{"Timestamp":"2025-01-22T12:55:50.0867553+06:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:55:50.0918966+06:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:55:50.0942158+06:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\projects_all\\TestProjects\\.net-core8_Microservices\\core8-microservices\\src\\Services\\Catalog\\CatalogApi","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T12:55:51.2651690+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"444faec4473611e3fd9d0b6755da1789","SpanId":"8ca59a21aadad0b3","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QM774NDT4:00000001","RequestPath":"/","ConnectionId":"0HN9QM774NDT4"}}
{"Timestamp":"2025-01-22T12:55:51.5715455+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"444faec4473611e3fd9d0b6755da1789","SpanId":"8ca59a21aadad0b3","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QM774NDT4:00000001","RequestPath":"/","ConnectionId":"0HN9QM774NDT4"}}
{"Timestamp":"2025-01-22T12:55:51.5855958+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"444faec4473611e3fd9d0b6755da1789","SpanId":"8ca59a21aadad0b3","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QM774NDT4:00000001","RequestPath":"/","ConnectionId":"0HN9QM774NDT4"}}
{"Timestamp":"2025-01-22T12:55:51.5925521+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"444faec4473611e3fd9d0b6755da1789","SpanId":"8ca59a21aadad0b3","Properties":{"ElapsedMilliseconds":347.5366,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QM774NDT4:00000001","RequestPath":"/","ConnectionId":"0HN9QM774NDT4"}}
{"Timestamp":"2025-01-22T12:55:58.3798986+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"237dd069df42d167a16ae4797f22c1e5","SpanId":"d5ea58139149dc94","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QM774NDT6:00000001","RequestPath":"/products","ConnectionId":"0HN9QM774NDT6"}}
{"Timestamp":"2025-01-22T12:55:58.3863396+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"237dd069df42d167a16ae4797f22c1e5","SpanId":"d5ea58139149dc94","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QM774NDT6:00000001","RequestPath":"/products","ConnectionId":"0HN9QM774NDT6"}}
{"Timestamp":"2025-01-22T13:00:42.5541004+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:5050","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:00:43.0757016+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5000","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:00:43.1098802+06:00","Level":"Information","MessageTemplate":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","Properties":{"EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}}
{"Timestamp":"2025-01-22T13:00:43.4231262+06:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:00:43.4250093+06:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:00:43.4300626+06:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\projects_all\\TestProjects\\.net-core8_Microservices\\core8-microservices\\src\\Services\\Catalog\\CatalogApi","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:00:44.1460509+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"399f83514738d10fd76935d37577b8a5","SpanId":"69ebb3d0be642f21","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QM9UA5B6L:00000001","RequestPath":"/","ConnectionId":"0HN9QM9UA5B6L"}}
{"Timestamp":"2025-01-22T13:00:44.4343780+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"399f83514738d10fd76935d37577b8a5","SpanId":"69ebb3d0be642f21","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QM9UA5B6L:00000001","RequestPath":"/","ConnectionId":"0HN9QM9UA5B6L"}}
{"Timestamp":"2025-01-22T13:00:44.4430961+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"399f83514738d10fd76935d37577b8a5","SpanId":"69ebb3d0be642f21","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QM9UA5B6L:00000001","RequestPath":"/","ConnectionId":"0HN9QM9UA5B6L"}}
{"Timestamp":"2025-01-22T13:00:44.4480026+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"399f83514738d10fd76935d37577b8a5","SpanId":"69ebb3d0be642f21","Properties":{"ElapsedMilliseconds":316.9733,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QM9UA5B6L:00000001","RequestPath":"/","ConnectionId":"0HN9QM9UA5B6L"}}
{"Timestamp":"2025-01-22T13:00:57.5155261+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"d2a5b9fd170faa08fa7cd4af2e9fb2ad","SpanId":"6ed5d2e0af965951","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QM9UA5B6N:00000001","RequestPath":"/products","ConnectionId":"0HN9QM9UA5B6N"}}
{"Timestamp":"2025-01-22T13:00:57.5210599+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"d2a5b9fd170faa08fa7cd4af2e9fb2ad","SpanId":"6ed5d2e0af965951","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QM9UA5B6N:00000001","RequestPath":"/products","ConnectionId":"0HN9QM9UA5B6N"}}
{"Timestamp":"2025-01-22T13:01:03.5564486+06:00","Level":"Information","MessageTemplate":"GetProductsQueryHandler.Handle called with {@query}","TraceId":"d2a5b9fd170faa08fa7cd4af2e9fb2ad","SpanId":"6ed5d2e0af965951","Properties":{"query":{"_typeTag":"GetProductsQuery"},"SourceContext":"CatalogApi.Products.GetProduct.GetProductsQueryHandler","RequestId":"0HN9QM9UA5B6N:00000001","RequestPath":"/products","ConnectionId":"0HN9QM9UA5B6N"}}
{"Timestamp":"2025-01-22T13:01:10.8811804+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"d2a5b9fd170faa08fa7cd4af2e9fb2ad","SpanId":"6ed5d2e0af965951","Properties":{"BatchCommands":["\nSELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":127,"ConnectorId":56,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QM9UA5B6N:00000001","RequestPath":"/products","ConnectionId":"0HN9QM9UA5B6N"}}
{"Timestamp":"2025-01-22T13:01:11.0974701+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"d2a5b9fd170faa08fa7cd4af2e9fb2ad","SpanId":"6ed5d2e0af965951","Properties":{"BatchCommands":["\nselect column_name, data_type, character_maximum_length, udt_name\nfrom information_schema.columns where table_schema = $1 and table_name = $2\norder by ordinal_position","select kcu.column_name as key_column\nfrom information_schema.table_constraints tco\n         join information_schema.key_column_usage kcu\n              on kcu.constraint_name = tco.constraint_name\n                  and kcu.constraint_schema = tco.constraint_schema\n                  and kcu.constraint_name = tco.constraint_name\nwhere tco.constraint_type = 'PRIMARY KEY' and kcu.table_schema = $1 and kcu.table_name = $2\norder by kcu.ordinal_position","SELECT *\nFROM (\n    SELECT\n      R.rolname                AS user_name,\n      ns.nspname               AS schema_name,\n      pg_catalog.textin(pg_catalog.regclassout(idx.indrelid :: REGCLASS)) AS table_name,\n      i.relname                AS index_name,\n      pg_get_indexdef(i.oid) as ddl,\n      idx.indisunique          AS is_unique,\n      idx.indisprimary         AS is_primary,\n      am.amname                AS index_type,\n      idx.indkey,\n           ARRAY(\n               SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)\n               FROM\n                 generate_subscripts(idx.indkey, 1) AS k\n               ORDER BY k\n           ) AS index_keys,\n      (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,\n      idx.indpred IS NOT NULL AS is_partial\n    FROM pg_index AS idx\n      JOIN pg_class AS i\n        ON i.oid = idx.indexrelid\n      JOIN pg_am AS am\n        ON i.relam = am.oid\n      JOIN pg_namespace AS NS ON i.relnamespace = NS.OID\n      JOIN pg_roles AS R ON i.relowner = r.oid\n    WHERE\n      nspname = $1 AND\n      NOT nspname LIKE 'pg%'\n) ind\nWHERE\n      ind.table_name = $2 OR\n      ind.table_name = $3","SELECT c.conname                                     AS constraint_name,\n       c.contype                                     AS constraint_type,\n       sch.nspname                                   AS schema_name,\n       tbl.relname                                   AS table_name,\n       ARRAY_AGG(col.attname ORDER BY u.attposition) AS columns,\n       pg_get_constraintdef(c.oid)                   AS definition\nFROM pg_constraint c\n       JOIN LATERAL UNNEST(c.conkey) WITH ORDINALITY AS u(attnum, attposition) ON TRUE\n       JOIN pg_class tbl ON tbl.oid = c.conrelid\n       JOIN pg_namespace sch ON sch.oid = tbl.relnamespace\n       JOIN pg_attribute col ON (col.attrelid = tbl.oid AND col.attnum = u.attnum)\nWHERE\n\tc.contype = 'f' and\n\tsch.nspname = $1 and\n\ttbl.relname = $2\nGROUP BY constraint_name, constraint_type, schema_name, table_name, definition","SHOW max_identifier_length","select\n    col.column_name,\n    partition_strategy\nfrom\n    (select\n         partrelid,\n         partnatts,\n         case partstrat\n             when 'l' then 'list'\n             when 'h' then 'hash'\n             when 'r' then 'range' end as partition_strategy,\n         unnest(partattrs) column_index\n     from\n         pg_partitioned_table) pt\n        join\n    pg_class par\n    on\n            par.oid = pt.partrelid\n        join\n    information_schema.columns col\n    on\n                col.table_schema = par.relnamespace::regnamespace::text\n            and col.table_name = par.relname\n            and ordinal_position = pt.column_index\nwhere\n    col.table_schema = $1 and table_name = $2\norder by column_index","select pt.relname as partition_name,\n          pg_get_expr(pt.relpartbound, pt.oid, true) as partition_expression\n   from pg_class base_tb\n            join pg_inherits i on i.inhparent = base_tb.oid\n            join pg_class pt on pt.oid = i.inhrelid\n   where base_tb.relname = $1 and base_tb.relnamespace = $2::regnamespace::oid","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":112,"ConnectorId":56,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QM9UA5B6N:00000001","RequestPath":"/products","ConnectionId":"0HN9QM9UA5B6N"}}
{"Timestamp":"2025-01-22T13:01:11.8195577+06:00","Level":"Information","MessageTemplate":"Command execution completed (duration={DurationMs}ms): {CommandText}","TraceId":"d2a5b9fd170faa08fa7cd4af2e9fb2ad","SpanId":"6ed5d2e0af965951","Properties":{"CommandText":"select d.id, d.data from public.mt_doc_product as d","DurationMs":614,"ConnectorId":56,"EventId":{"Id":2001,"Name":"CommandExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QM9UA5B6N:00000001","RequestPath":"/products","ConnectionId":"0HN9QM9UA5B6N"}}
{"Timestamp":"2025-01-22T13:01:12.1453279+06:00","Level":"Information","MessageTemplate":"Setting HTTP status code {StatusCode}.","TraceId":"d2a5b9fd170faa08fa7cd4af2e9fb2ad","SpanId":"6ed5d2e0af965951","Properties":{"StatusCode":200,"EventId":{"Id":1,"Name":"WritingResultAsStatusCode"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QM9UA5B6N:00000001","RequestPath":"/products","ConnectionId":"0HN9QM9UA5B6N"}}
{"Timestamp":"2025-01-22T13:01:12.1948522+06:00","Level":"Information","MessageTemplate":"Writing value of type '{Type}' as Json.","TraceId":"d2a5b9fd170faa08fa7cd4af2e9fb2ad","SpanId":"6ed5d2e0af965951","Properties":{"Type":"GetProductsResponse","EventId":{"Id":3,"Name":"WritingResultAsJson"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QM9UA5B6N:00000001","RequestPath":"/products","ConnectionId":"0HN9QM9UA5B6N"}}
{"Timestamp":"2025-01-22T13:01:12.2799809+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"d2a5b9fd170faa08fa7cd4af2e9fb2ad","SpanId":"6ed5d2e0af965951","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QM9UA5B6N:00000001","RequestPath":"/products","ConnectionId":"0HN9QM9UA5B6N"}}
{"Timestamp":"2025-01-22T13:01:12.2923461+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"d2a5b9fd170faa08fa7cd4af2e9fb2ad","SpanId":"6ed5d2e0af965951","Properties":{"ElapsedMilliseconds":14777.0518,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QM9UA5B6N:00000001","RequestPath":"/products","ConnectionId":"0HN9QM9UA5B6N"}}
{"Timestamp":"2025-01-22T13:04:17.3714798+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:5050","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:04:17.4748033+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5000","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:04:17.5085212+06:00","Level":"Information","MessageTemplate":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","Properties":{"EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}}
{"Timestamp":"2025-01-22T13:04:17.8327806+06:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:04:17.8367224+06:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:04:17.8387169+06:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\projects_all\\TestProjects\\.net-core8_Microservices\\core8-microservices\\src\\Services\\Catalog\\CatalogApi","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:04:20.2049065+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"c25f5698ccd192a8cbae01bbc59d0e69","SpanId":"9bfb608061ef1bd4","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QMBUE0APF:00000001","RequestPath":"/","ConnectionId":"0HN9QMBUE0APF"}}
{"Timestamp":"2025-01-22T13:04:20.6220469+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"c25f5698ccd192a8cbae01bbc59d0e69","SpanId":"9bfb608061ef1bd4","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QMBUE0APF:00000001","RequestPath":"/","ConnectionId":"0HN9QMBUE0APF"}}
{"Timestamp":"2025-01-22T13:04:20.6358954+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"c25f5698ccd192a8cbae01bbc59d0e69","SpanId":"9bfb608061ef1bd4","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QMBUE0APF:00000001","RequestPath":"/","ConnectionId":"0HN9QMBUE0APF"}}
{"Timestamp":"2025-01-22T13:04:20.6447444+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"c25f5698ccd192a8cbae01bbc59d0e69","SpanId":"9bfb608061ef1bd4","Properties":{"ElapsedMilliseconds":463.7926,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QMBUE0APF:00000001","RequestPath":"/","ConnectionId":"0HN9QMBUE0APF"}}
{"Timestamp":"2025-01-22T13:04:35.3623573+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"f32c46a6f200692b1578666fd95d6dc5","SpanId":"ca03073dacb6f07c","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QMBUE0APH:00000001","RequestPath":"/products","ConnectionId":"0HN9QMBUE0APH"}}
{"Timestamp":"2025-01-22T13:04:35.3681928+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"f32c46a6f200692b1578666fd95d6dc5","SpanId":"ca03073dacb6f07c","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QMBUE0APH:00000001","RequestPath":"/products","ConnectionId":"0HN9QMBUE0APH"}}
{"Timestamp":"2025-01-22T13:04:53.5113259+06:00","Level":"Information","MessageTemplate":"GetProductsQueryHandler.Handle called with {@query}","TraceId":"f32c46a6f200692b1578666fd95d6dc5","SpanId":"ca03073dacb6f07c","Properties":{"query":{"_typeTag":"GetProductsQuery"},"SourceContext":"CatalogApi.Products.GetProduct.GetProductsQueryHandler","RequestId":"0HN9QMBUE0APH:00000001","RequestPath":"/products","ConnectionId":"0HN9QMBUE0APH"}}
{"Timestamp":"2025-01-22T13:05:05.5593047+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"f32c46a6f200692b1578666fd95d6dc5","SpanId":"ca03073dacb6f07c","Properties":{"BatchCommands":["\nSELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":97,"ConnectorId":60,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QMBUE0APH:00000001","RequestPath":"/products","ConnectionId":"0HN9QMBUE0APH"}}
{"Timestamp":"2025-01-22T13:05:05.7615526+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"f32c46a6f200692b1578666fd95d6dc5","SpanId":"ca03073dacb6f07c","Properties":{"BatchCommands":["\nselect column_name, data_type, character_maximum_length, udt_name\nfrom information_schema.columns where table_schema = $1 and table_name = $2\norder by ordinal_position","select kcu.column_name as key_column\nfrom information_schema.table_constraints tco\n         join information_schema.key_column_usage kcu\n              on kcu.constraint_name = tco.constraint_name\n                  and kcu.constraint_schema = tco.constraint_schema\n                  and kcu.constraint_name = tco.constraint_name\nwhere tco.constraint_type = 'PRIMARY KEY' and kcu.table_schema = $1 and kcu.table_name = $2\norder by kcu.ordinal_position","SELECT *\nFROM (\n    SELECT\n      R.rolname                AS user_name,\n      ns.nspname               AS schema_name,\n      pg_catalog.textin(pg_catalog.regclassout(idx.indrelid :: REGCLASS)) AS table_name,\n      i.relname                AS index_name,\n      pg_get_indexdef(i.oid) as ddl,\n      idx.indisunique          AS is_unique,\n      idx.indisprimary         AS is_primary,\n      am.amname                AS index_type,\n      idx.indkey,\n           ARRAY(\n               SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)\n               FROM\n                 generate_subscripts(idx.indkey, 1) AS k\n               ORDER BY k\n           ) AS index_keys,\n      (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,\n      idx.indpred IS NOT NULL AS is_partial\n    FROM pg_index AS idx\n      JOIN pg_class AS i\n        ON i.oid = idx.indexrelid\n      JOIN pg_am AS am\n        ON i.relam = am.oid\n      JOIN pg_namespace AS NS ON i.relnamespace = NS.OID\n      JOIN pg_roles AS R ON i.relowner = r.oid\n    WHERE\n      nspname = $1 AND\n      NOT nspname LIKE 'pg%'\n) ind\nWHERE\n      ind.table_name = $2 OR\n      ind.table_name = $3","SELECT c.conname                                     AS constraint_name,\n       c.contype                                     AS constraint_type,\n       sch.nspname                                   AS schema_name,\n       tbl.relname                                   AS table_name,\n       ARRAY_AGG(col.attname ORDER BY u.attposition) AS columns,\n       pg_get_constraintdef(c.oid)                   AS definition\nFROM pg_constraint c\n       JOIN LATERAL UNNEST(c.conkey) WITH ORDINALITY AS u(attnum, attposition) ON TRUE\n       JOIN pg_class tbl ON tbl.oid = c.conrelid\n       JOIN pg_namespace sch ON sch.oid = tbl.relnamespace\n       JOIN pg_attribute col ON (col.attrelid = tbl.oid AND col.attnum = u.attnum)\nWHERE\n\tc.contype = 'f' and\n\tsch.nspname = $1 and\n\ttbl.relname = $2\nGROUP BY constraint_name, constraint_type, schema_name, table_name, definition","SHOW max_identifier_length","select\n    col.column_name,\n    partition_strategy\nfrom\n    (select\n         partrelid,\n         partnatts,\n         case partstrat\n             when 'l' then 'list'\n             when 'h' then 'hash'\n             when 'r' then 'range' end as partition_strategy,\n         unnest(partattrs) column_index\n     from\n         pg_partitioned_table) pt\n        join\n    pg_class par\n    on\n            par.oid = pt.partrelid\n        join\n    information_schema.columns col\n    on\n                col.table_schema = par.relnamespace::regnamespace::text\n            and col.table_name = par.relname\n            and ordinal_position = pt.column_index\nwhere\n    col.table_schema = $1 and table_name = $2\norder by column_index","select pt.relname as partition_name,\n          pg_get_expr(pt.relpartbound, pt.oid, true) as partition_expression\n   from pg_class base_tb\n            join pg_inherits i on i.inhparent = base_tb.oid\n            join pg_class pt on pt.oid = i.inhrelid\n   where base_tb.relname = $1 and base_tb.relnamespace = $2::regnamespace::oid","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":108,"ConnectorId":60,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QMBUE0APH:00000001","RequestPath":"/products","ConnectionId":"0HN9QMBUE0APH"}}
{"Timestamp":"2025-01-22T13:05:06.1299516+06:00","Level":"Information","MessageTemplate":"Command execution completed (duration={DurationMs}ms): {CommandText}","TraceId":"f32c46a6f200692b1578666fd95d6dc5","SpanId":"ca03073dacb6f07c","Properties":{"CommandText":"select d.id, d.data from public.mt_doc_product as d","DurationMs":282,"ConnectorId":60,"EventId":{"Id":2001,"Name":"CommandExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QMBUE0APH:00000001","RequestPath":"/products","ConnectionId":"0HN9QMBUE0APH"}}
{"Timestamp":"2025-01-22T13:05:10.4592090+06:00","Level":"Information","MessageTemplate":"Setting HTTP status code {StatusCode}.","TraceId":"f32c46a6f200692b1578666fd95d6dc5","SpanId":"ca03073dacb6f07c","Properties":{"StatusCode":200,"EventId":{"Id":1,"Name":"WritingResultAsStatusCode"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QMBUE0APH:00000001","RequestPath":"/products","ConnectionId":"0HN9QMBUE0APH"}}
{"Timestamp":"2025-01-22T13:05:10.4860435+06:00","Level":"Information","MessageTemplate":"Writing value of type '{Type}' as Json.","TraceId":"f32c46a6f200692b1578666fd95d6dc5","SpanId":"ca03073dacb6f07c","Properties":{"Type":"GetProductsResponse","EventId":{"Id":3,"Name":"WritingResultAsJson"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QMBUE0APH:00000001","RequestPath":"/products","ConnectionId":"0HN9QMBUE0APH"}}
{"Timestamp":"2025-01-22T13:05:21.2828473+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"f32c46a6f200692b1578666fd95d6dc5","SpanId":"ca03073dacb6f07c","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QMBUE0APH:00000001","RequestPath":"/products","ConnectionId":"0HN9QMBUE0APH"}}
{"Timestamp":"2025-01-22T13:05:21.3011055+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"f32c46a6f200692b1578666fd95d6dc5","SpanId":"ca03073dacb6f07c","Properties":{"ElapsedMilliseconds":45938.7221,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QMBUE0APH:00000001","RequestPath":"/products","ConnectionId":"0HN9QMBUE0APH"}}
{"Timestamp":"2025-01-22T13:14:43.5568281+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:5050","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:14:43.5825195+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5000","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:14:43.5927128+06:00","Level":"Information","MessageTemplate":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","Properties":{"EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}}
{"Timestamp":"2025-01-22T13:14:43.7670494+06:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:14:43.7685657+06:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:14:43.7694765+06:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\projects_all\\TestProjects\\.net-core8_Microservices\\core8-microservices\\src\\Services\\Catalog\\CatalogApi","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:14:44.5716133+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"6b415e12413d1d83d2317a8a24feba23","SpanId":"5ec2d68424278625","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QMHP0TSEU:00000001","RequestPath":"/","ConnectionId":"0HN9QMHP0TSEU"}}
{"Timestamp":"2025-01-22T13:14:44.6926317+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"6b415e12413d1d83d2317a8a24feba23","SpanId":"5ec2d68424278625","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QMHP0TSEU:00000001","RequestPath":"/","ConnectionId":"0HN9QMHP0TSEU"}}
{"Timestamp":"2025-01-22T13:14:44.7036298+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"6b415e12413d1d83d2317a8a24feba23","SpanId":"5ec2d68424278625","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QMHP0TSEU:00000001","RequestPath":"/","ConnectionId":"0HN9QMHP0TSEU"}}
{"Timestamp":"2025-01-22T13:14:44.7063403+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"6b415e12413d1d83d2317a8a24feba23","SpanId":"5ec2d68424278625","Properties":{"ElapsedMilliseconds":145.9471,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QMHP0TSEU:00000001","RequestPath":"/","ConnectionId":"0HN9QMHP0TSEU"}}
{"Timestamp":"2025-01-22T13:14:54.6370972+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"50ca01bca908349c025c032c6f54caa4","SpanId":"a1e6c257d8fc2e61","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QMHP0TSF0:00000001","RequestPath":"/products","ConnectionId":"0HN9QMHP0TSF0"}}
{"Timestamp":"2025-01-22T13:14:54.6400486+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"50ca01bca908349c025c032c6f54caa4","SpanId":"a1e6c257d8fc2e61","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QMHP0TSF0:00000001","RequestPath":"/products","ConnectionId":"0HN9QMHP0TSF0"}}
{"Timestamp":"2025-01-22T13:15:04.4446317+06:00","Level":"Information","MessageTemplate":"GetProductsQueryHandler.Handle called with {@query}","TraceId":"50ca01bca908349c025c032c6f54caa4","SpanId":"a1e6c257d8fc2e61","Properties":{"query":{"_typeTag":"GetProductsQuery"},"SourceContext":"CatalogApi.Products.GetProduct.GetProductsQueryHandler","RequestId":"0HN9QMHP0TSF0:00000001","RequestPath":"/products","ConnectionId":"0HN9QMHP0TSF0"}}
{"Timestamp":"2025-01-22T13:15:08.3850775+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"50ca01bca908349c025c032c6f54caa4","SpanId":"a1e6c257d8fc2e61","Properties":{"BatchCommands":["\nSELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":76,"ConnectorId":72,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QMHP0TSF0:00000001","RequestPath":"/products","ConnectionId":"0HN9QMHP0TSF0"}}
{"Timestamp":"2025-01-22T13:15:08.5477826+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"50ca01bca908349c025c032c6f54caa4","SpanId":"a1e6c257d8fc2e61","Properties":{"BatchCommands":["\nselect column_name, data_type, character_maximum_length, udt_name\nfrom information_schema.columns where table_schema = $1 and table_name = $2\norder by ordinal_position","select kcu.column_name as key_column\nfrom information_schema.table_constraints tco\n         join information_schema.key_column_usage kcu\n              on kcu.constraint_name = tco.constraint_name\n                  and kcu.constraint_schema = tco.constraint_schema\n                  and kcu.constraint_name = tco.constraint_name\nwhere tco.constraint_type = 'PRIMARY KEY' and kcu.table_schema = $1 and kcu.table_name = $2\norder by kcu.ordinal_position","SELECT *\nFROM (\n    SELECT\n      R.rolname                AS user_name,\n      ns.nspname               AS schema_name,\n      pg_catalog.textin(pg_catalog.regclassout(idx.indrelid :: REGCLASS)) AS table_name,\n      i.relname                AS index_name,\n      pg_get_indexdef(i.oid) as ddl,\n      idx.indisunique          AS is_unique,\n      idx.indisprimary         AS is_primary,\n      am.amname                AS index_type,\n      idx.indkey,\n           ARRAY(\n               SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)\n               FROM\n                 generate_subscripts(idx.indkey, 1) AS k\n               ORDER BY k\n           ) AS index_keys,\n      (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,\n      idx.indpred IS NOT NULL AS is_partial\n    FROM pg_index AS idx\n      JOIN pg_class AS i\n        ON i.oid = idx.indexrelid\n      JOIN pg_am AS am\n        ON i.relam = am.oid\n      JOIN pg_namespace AS NS ON i.relnamespace = NS.OID\n      JOIN pg_roles AS R ON i.relowner = r.oid\n    WHERE\n      nspname = $1 AND\n      NOT nspname LIKE 'pg%'\n) ind\nWHERE\n      ind.table_name = $2 OR\n      ind.table_name = $3","SELECT c.conname                                     AS constraint_name,\n       c.contype                                     AS constraint_type,\n       sch.nspname                                   AS schema_name,\n       tbl.relname                                   AS table_name,\n       ARRAY_AGG(col.attname ORDER BY u.attposition) AS columns,\n       pg_get_constraintdef(c.oid)                   AS definition\nFROM pg_constraint c\n       JOIN LATERAL UNNEST(c.conkey) WITH ORDINALITY AS u(attnum, attposition) ON TRUE\n       JOIN pg_class tbl ON tbl.oid = c.conrelid\n       JOIN pg_namespace sch ON sch.oid = tbl.relnamespace\n       JOIN pg_attribute col ON (col.attrelid = tbl.oid AND col.attnum = u.attnum)\nWHERE\n\tc.contype = 'f' and\n\tsch.nspname = $1 and\n\ttbl.relname = $2\nGROUP BY constraint_name, constraint_type, schema_name, table_name, definition","SHOW max_identifier_length","select\n    col.column_name,\n    partition_strategy\nfrom\n    (select\n         partrelid,\n         partnatts,\n         case partstrat\n             when 'l' then 'list'\n             when 'h' then 'hash'\n             when 'r' then 'range' end as partition_strategy,\n         unnest(partattrs) column_index\n     from\n         pg_partitioned_table) pt\n        join\n    pg_class par\n    on\n            par.oid = pt.partrelid\n        join\n    information_schema.columns col\n    on\n                col.table_schema = par.relnamespace::regnamespace::text\n            and col.table_name = par.relname\n            and ordinal_position = pt.column_index\nwhere\n    col.table_schema = $1 and table_name = $2\norder by column_index","select pt.relname as partition_name,\n          pg_get_expr(pt.relpartbound, pt.oid, true) as partition_expression\n   from pg_class base_tb\n            join pg_inherits i on i.inhparent = base_tb.oid\n            join pg_class pt on pt.oid = i.inhrelid\n   where base_tb.relname = $1 and base_tb.relnamespace = $2::regnamespace::oid","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":65,"ConnectorId":72,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QMHP0TSF0:00000001","RequestPath":"/products","ConnectionId":"0HN9QMHP0TSF0"}}
{"Timestamp":"2025-01-22T13:15:08.8443947+06:00","Level":"Information","MessageTemplate":"Command execution completed (duration={DurationMs}ms): {CommandText}","TraceId":"50ca01bca908349c025c032c6f54caa4","SpanId":"a1e6c257d8fc2e61","Properties":{"CommandText":"select d.id, d.data from public.mt_doc_product as d","DurationMs":231,"ConnectorId":72,"EventId":{"Id":2001,"Name":"CommandExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QMHP0TSF0:00000001","RequestPath":"/products","ConnectionId":"0HN9QMHP0TSF0"}}
{"Timestamp":"2025-01-22T13:15:09.0064162+06:00","Level":"Information","MessageTemplate":"Setting HTTP status code {StatusCode}.","TraceId":"50ca01bca908349c025c032c6f54caa4","SpanId":"a1e6c257d8fc2e61","Properties":{"StatusCode":200,"EventId":{"Id":1,"Name":"WritingResultAsStatusCode"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QMHP0TSF0:00000001","RequestPath":"/products","ConnectionId":"0HN9QMHP0TSF0"}}
{"Timestamp":"2025-01-22T13:15:09.0247355+06:00","Level":"Information","MessageTemplate":"Writing value of type '{Type}' as Json.","TraceId":"50ca01bca908349c025c032c6f54caa4","SpanId":"a1e6c257d8fc2e61","Properties":{"Type":"GetProductsResponse","EventId":{"Id":3,"Name":"WritingResultAsJson"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QMHP0TSF0:00000001","RequestPath":"/products","ConnectionId":"0HN9QMHP0TSF0"}}
{"Timestamp":"2025-01-22T13:15:09.0655306+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"50ca01bca908349c025c032c6f54caa4","SpanId":"a1e6c257d8fc2e61","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QMHP0TSF0:00000001","RequestPath":"/products","ConnectionId":"0HN9QMHP0TSF0"}}
{"Timestamp":"2025-01-22T13:15:09.0759460+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"50ca01bca908349c025c032c6f54caa4","SpanId":"a1e6c257d8fc2e61","Properties":{"ElapsedMilliseconds":14438.7999,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QMHP0TSF0:00000001","RequestPath":"/products","ConnectionId":"0HN9QMHP0TSF0"}}
{"Timestamp":"2025-01-22T13:17:21.1579670+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:5050","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:17:21.1891134+06:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5000","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:17:21.2016711+06:00","Level":"Information","MessageTemplate":"No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts","Properties":{"EventId":{"Id":1,"Name":"NoActionDescriptors"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider"}}
{"Timestamp":"2025-01-22T13:17:21.3577442+06:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:17:21.3590352+06:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:17:21.3598785+06:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\projects_all\\TestProjects\\.net-core8_Microservices\\core8-microservices\\src\\Services\\Catalog\\CatalogApi","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-22T13:17:22.0392765+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"f7559a5e64e70439eef46e22e53783b7","SpanId":"6a4f1edba5b4e2b4","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QMJ80THL2:00000001","RequestPath":"/","ConnectionId":"0HN9QMJ80THL2"}}
{"Timestamp":"2025-01-22T13:17:22.1812774+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"f7559a5e64e70439eef46e22e53783b7","SpanId":"6a4f1edba5b4e2b4","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QMJ80THL2:00000001","RequestPath":"/","ConnectionId":"0HN9QMJ80THL2"}}
{"Timestamp":"2025-01-22T13:17:22.1870569+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"f7559a5e64e70439eef46e22e53783b7","SpanId":"6a4f1edba5b4e2b4","Properties":{"EndpointName":"HTTP: GET /","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QMJ80THL2:00000001","RequestPath":"/","ConnectionId":"0HN9QMJ80THL2"}}
{"Timestamp":"2025-01-22T13:17:22.1906987+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"f7559a5e64e70439eef46e22e53783b7","SpanId":"6a4f1edba5b4e2b4","Properties":{"ElapsedMilliseconds":161.5029,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QMJ80THL2:00000001","RequestPath":"/","ConnectionId":"0HN9QMJ80THL2"}}
{"Timestamp":"2025-01-22T13:17:54.9380505+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"665fae8ead32bfadf3449b1079df1980","SpanId":"c2d1b4bea951afeb","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QMJ80THL4:00000001","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:17:54.9406904+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"665fae8ead32bfadf3449b1079df1980","SpanId":"c2d1b4bea951afeb","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QMJ80THL4:00000001","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:01.8748882+06:00","Level":"Information","MessageTemplate":"GetProductsQueryHandler.Handle called with {@query}","TraceId":"665fae8ead32bfadf3449b1079df1980","SpanId":"c2d1b4bea951afeb","Properties":{"query":{"_typeTag":"GetProductsQuery"},"SourceContext":"CatalogApi.Products.GetProduct.GetProductsQueryHandler","RequestId":"0HN9QMJ80THL4:00000001","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:12.2436079+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"665fae8ead32bfadf3449b1079df1980","SpanId":"c2d1b4bea951afeb","Properties":{"BatchCommands":["\nSELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":76,"ConnectorId":76,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QMJ80THL4:00000001","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:12.3757111+06:00","Level":"Information","MessageTemplate":"Batch execution completed (duration={DurationMs}ms): {BatchCommands}","TraceId":"665fae8ead32bfadf3449b1079df1980","SpanId":"c2d1b4bea951afeb","Properties":{"BatchCommands":["\nselect column_name, data_type, character_maximum_length, udt_name\nfrom information_schema.columns where table_schema = $1 and table_name = $2\norder by ordinal_position","select kcu.column_name as key_column\nfrom information_schema.table_constraints tco\n         join information_schema.key_column_usage kcu\n              on kcu.constraint_name = tco.constraint_name\n                  and kcu.constraint_schema = tco.constraint_schema\n                  and kcu.constraint_name = tco.constraint_name\nwhere tco.constraint_type = 'PRIMARY KEY' and kcu.table_schema = $1 and kcu.table_name = $2\norder by kcu.ordinal_position","SELECT *\nFROM (\n    SELECT\n      R.rolname                AS user_name,\n      ns.nspname               AS schema_name,\n      pg_catalog.textin(pg_catalog.regclassout(idx.indrelid :: REGCLASS)) AS table_name,\n      i.relname                AS index_name,\n      pg_get_indexdef(i.oid) as ddl,\n      idx.indisunique          AS is_unique,\n      idx.indisprimary         AS is_primary,\n      am.amname                AS index_type,\n      idx.indkey,\n           ARRAY(\n               SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)\n               FROM\n                 generate_subscripts(idx.indkey, 1) AS k\n               ORDER BY k\n           ) AS index_keys,\n      (idx.indexprs IS NOT NULL) OR (idx.indkey::int[] @> array[0]) AS is_functional,\n      idx.indpred IS NOT NULL AS is_partial\n    FROM pg_index AS idx\n      JOIN pg_class AS i\n        ON i.oid = idx.indexrelid\n      JOIN pg_am AS am\n        ON i.relam = am.oid\n      JOIN pg_namespace AS NS ON i.relnamespace = NS.OID\n      JOIN pg_roles AS R ON i.relowner = r.oid\n    WHERE\n      nspname = $1 AND\n      NOT nspname LIKE 'pg%'\n) ind\nWHERE\n      ind.table_name = $2 OR\n      ind.table_name = $3","SELECT c.conname                                     AS constraint_name,\n       c.contype                                     AS constraint_type,\n       sch.nspname                                   AS schema_name,\n       tbl.relname                                   AS table_name,\n       ARRAY_AGG(col.attname ORDER BY u.attposition) AS columns,\n       pg_get_constraintdef(c.oid)                   AS definition\nFROM pg_constraint c\n       JOIN LATERAL UNNEST(c.conkey) WITH ORDINALITY AS u(attnum, attposition) ON TRUE\n       JOIN pg_class tbl ON tbl.oid = c.conrelid\n       JOIN pg_namespace sch ON sch.oid = tbl.relnamespace\n       JOIN pg_attribute col ON (col.attrelid = tbl.oid AND col.attnum = u.attnum)\nWHERE\n\tc.contype = 'f' and\n\tsch.nspname = $1 and\n\ttbl.relname = $2\nGROUP BY constraint_name, constraint_type, schema_name, table_name, definition","SHOW max_identifier_length","select\n    col.column_name,\n    partition_strategy\nfrom\n    (select\n         partrelid,\n         partnatts,\n         case partstrat\n             when 'l' then 'list'\n             when 'h' then 'hash'\n             when 'r' then 'range' end as partition_strategy,\n         unnest(partattrs) column_index\n     from\n         pg_partitioned_table) pt\n        join\n    pg_class par\n    on\n            par.oid = pt.partrelid\n        join\n    information_schema.columns col\n    on\n                col.table_schema = par.relnamespace::regnamespace::text\n            and col.table_name = par.relname\n            and ordinal_position = pt.column_index\nwhere\n    col.table_schema = $1 and table_name = $2\norder by column_index","select pt.relname as partition_name,\n          pg_get_expr(pt.relpartbound, pt.oid, true) as partition_expression\n   from pg_class base_tb\n            join pg_inherits i on i.inhparent = base_tb.oid\n            join pg_class pt on pt.oid = i.inhrelid\n   where base_tb.relname = $1 and base_tb.relnamespace = $2::regnamespace::oid","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2","SELECT pg_get_functiondef(pg_proc.oid)\nFROM pg_proc JOIN pg_namespace as ns ON pg_proc.pronamespace = ns.oid WHERE ns.nspname = $1 and proname = $2","SELECT format('DROP FUNCTION IF EXISTS %s.%s(%s);'\n             ,n.nspname\n             ,p.proname\n             ,pg_get_function_identity_arguments(p.oid))\nFROM   pg_proc p\nLEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE  p.proname = $1\nAND    n.nspname = $2"],"DurationMs":59,"ConnectorId":76,"EventId":{"Id":2001,"Name":"BatchExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QMJ80THL4:00000001","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:12.6242714+06:00","Level":"Information","MessageTemplate":"Command execution completed (duration={DurationMs}ms): {CommandText}","TraceId":"665fae8ead32bfadf3449b1079df1980","SpanId":"c2d1b4bea951afeb","Properties":{"CommandText":"select d.id, d.data from public.mt_doc_product as d","DurationMs":190,"ConnectorId":76,"EventId":{"Id":2001,"Name":"CommandExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QMJ80THL4:00000001","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:20.2733846+06:00","Level":"Information","MessageTemplate":"Setting HTTP status code {StatusCode}.","TraceId":"665fae8ead32bfadf3449b1079df1980","SpanId":"c2d1b4bea951afeb","Properties":{"StatusCode":200,"EventId":{"Id":1,"Name":"WritingResultAsStatusCode"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QMJ80THL4:00000001","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:20.2844341+06:00","Level":"Information","MessageTemplate":"Writing value of type '{Type}' as Json.","TraceId":"665fae8ead32bfadf3449b1079df1980","SpanId":"c2d1b4bea951afeb","Properties":{"Type":"GetProductsResponse","EventId":{"Id":3,"Name":"WritingResultAsJson"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QMJ80THL4:00000001","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:28.5707510+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"665fae8ead32bfadf3449b1079df1980","SpanId":"c2d1b4bea951afeb","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QMJ80THL4:00000001","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:28.5791898+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"665fae8ead32bfadf3449b1079df1980","SpanId":"c2d1b4bea951afeb","Properties":{"ElapsedMilliseconds":33641.0162,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QMJ80THL4:00000001","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:51.2302907+06:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"ba223754b2dcd00b7c4859b0249b0908","SpanId":"3ad88df3cebc48c1","Properties":{"Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QMJ80THL4:00000002","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:51.2337557+06:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"ba223754b2dcd00b7c4859b0249b0908","SpanId":"3ad88df3cebc48c1","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QMJ80THL4:00000002","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:54.0506183+06:00","Level":"Information","MessageTemplate":"GetProductsQueryHandler.Handle called with {@query}","TraceId":"ba223754b2dcd00b7c4859b0249b0908","SpanId":"3ad88df3cebc48c1","Properties":{"query":{"_typeTag":"GetProductsQuery"},"SourceContext":"CatalogApi.Products.GetProduct.GetProductsQueryHandler","RequestId":"0HN9QMJ80THL4:00000002","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:54.0599711+06:00","Level":"Information","MessageTemplate":"Command execution completed (duration={DurationMs}ms): {CommandText}","TraceId":"ba223754b2dcd00b7c4859b0249b0908","SpanId":"3ad88df3cebc48c1","Properties":{"CommandText":"select d.id, d.data from public.mt_doc_product as d","DurationMs":6,"ConnectorId":76,"EventId":{"Id":2001,"Name":"CommandExecutionCompleted"},"SourceContext":"Npgsql.Command","RequestId":"0HN9QMJ80THL4:00000002","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:54.0612639+06:00","Level":"Information","MessageTemplate":"Setting HTTP status code {StatusCode}.","TraceId":"ba223754b2dcd00b7c4859b0249b0908","SpanId":"3ad88df3cebc48c1","Properties":{"StatusCode":200,"EventId":{"Id":1,"Name":"WritingResultAsStatusCode"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QMJ80THL4:00000002","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:54.0621697+06:00","Level":"Information","MessageTemplate":"Writing value of type '{Type}' as Json.","TraceId":"ba223754b2dcd00b7c4859b0249b0908","SpanId":"3ad88df3cebc48c1","Properties":{"Type":"GetProductsResponse","EventId":{"Id":3,"Name":"WritingResultAsJson"},"SourceContext":"Microsoft.AspNetCore.Http.Result.OkObjectResult","RequestId":"0HN9QMJ80THL4:00000002","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:54.0632835+06:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"ba223754b2dcd00b7c4859b0249b0908","SpanId":"3ad88df3cebc48c1","Properties":{"EndpointName":"HTTP: GET /products","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9QMJ80THL4:00000002","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
{"Timestamp":"2025-01-22T13:18:54.0644117+06:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"ba223754b2dcd00b7c4859b0249b0908","SpanId":"3ad88df3cebc48c1","Properties":{"ElapsedMilliseconds":2834.1572,"StatusCode":200,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.1","Method":"GET","Scheme":"https","Host":"localhost:5050","PathBase":"","Path":"/products","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9QMJ80THL4:00000002","RequestPath":"/products","ConnectionId":"0HN9QMJ80THL4"}}
