name: dockercompose2595546192379255984
services:
  catalogapi:
    build:
      context: C:\Projects\.net-core8_Microservices\core8-microservices
      dockerfile: src/Services/Catalog/CatalogApi/Dockerfile
    container_name: catalog_api
    depends_on:
      catalogdb:
        condition: service_started
        required: true
      redis_stack:
        condition: service_started
        required: true
      seq:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_Kestrel__Certificates__Default__Password: admin
      ASPNETCORE_Kestrel__Certificates__Default__Path: /app/certificates/aspnetapp.pfx
      ASPNETCORE_URLS: '"https://+:9999;http://+:9998"'
    networks:
      catalog_network: null
    ports:
      - mode: ingress
        target: 8080
        published: "9998"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "9999"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: postgres_catalog
        target: /var/lib/postgresql/data
        volume: {}
      - type: volume
        source: aspnet_certificates
        target: /app/certificates
        volume: {}
  catalogdb:
    container_name: catalogdb
    environment:
      POSTGRES_DB: CatalogDb
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: postgres
    image: postgres
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "2345"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: postgres_catalog
        target: /var/lib/postgresql/data
        volume: {}
  pgadmin:
    container_name: pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    image: dpage/pgadmin4
    networks:
      catalog_network: null
    ports:
      - mode: ingress
        target: 80
        published: "5544"
        protocol: tcp
    restart: always
  redis_stack:
    container_name: redis_stack
    image: redis/redis-stack:latest
    networks:
      catalog_network: null
    ports:
      - mode: ingress
        target: 8001
        published: "6380"
        protocol: tcp
    restart: always
  seq:
    container_name: seq
    environment:
      ACCEPT_EULA: "Y"
    image: datalust/seq:latest
    networks:
      catalog_network: null
    ports:
      - mode: ingress
        target: 5341
        published: "7002"
        protocol: tcp
      - mode: ingress
        target: 80
        published: "7001"
        protocol: tcp
    restart: always
networks:
  catalog_network:
    name: dockercompose2595546192379255984_catalog_network
    driver: bridge
  default:
    name: dockercompose2595546192379255984_default
volumes:
  aspnet_certificates:
    name: dockercompose2595546192379255984_aspnet_certificates
  postgres_catalog:
    name: dockercompose2595546192379255984_postgres_catalog